
Blinking_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000391e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001ac  00800060  0000391e  00003992  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000023f4  00000000  00000000  00003b40  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000178b  00000000  00000000  00005f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  000076bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f2  00000000  00000000  0000785f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240b  00000000  00000000  00007a51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001386  00000000  00000000  00009e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d6  00000000  00000000  0000b1e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000c3b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f6  00000000  00000000  0000c578  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  0000c86e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d1dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e1       	ldi	r30, 0x1E	; 30
      68:	f9 e3       	ldi	r31, 0x39	; 57
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 30       	cpi	r26, 0x0C	; 12
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 0f 07 	call	0xe1e	; 0xe1e <main>
      7a:	0c 94 8d 1c 	jmp	0x391a	; 0x391a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b5 19 	jmp	0x336a	; 0x336a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a3 e0       	ldi	r26, 0x03	; 3
     118:	b1 e0       	ldi	r27, 0x01	; 1
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d1 19 	jmp	0x33a2	; 0x33a2 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 dd 19 	jmp	0x33ba	; 0x33ba <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 dd 19 	jmp	0x33ba	; 0x33ba <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b5 19 	jmp	0x336a	; 0x336a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	83 e0       	ldi	r24, 0x03	; 3
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d1 19 	jmp	0x33a2	; 0x33a2 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 bd 19 	jmp	0x337a	; 0x337a <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	63 e0       	ldi	r22, 0x03	; 3
     68c:	71 e0       	ldi	r23, 0x01	; 1
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 d9 19 	jmp	0x33b2	; 0x33b2 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 dd 19 	jmp	0x33ba	; 0x33ba <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 dd 19 	jmp	0x33ba	; 0x33ba <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 dd 19 	jmp	0x33ba	; 0x33ba <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 c5 19 	jmp	0x338a	; 0x338a <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 e1 19 	jmp	0x33c2	; 0x33c2 <__epilogue_restores__+0x20>

00000942 <__floatunsisf>:
     942:	a8 e0       	ldi	r26, 0x08	; 8
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e7 ea       	ldi	r30, 0xA7	; 167
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	0c 94 bd 19 	jmp	0x337a	; 0x337a <__prologue_saves__+0x10>
     94e:	7b 01       	movw	r14, r22
     950:	8c 01       	movw	r16, r24
     952:	61 15       	cp	r22, r1
     954:	71 05       	cpc	r23, r1
     956:	81 05       	cpc	r24, r1
     958:	91 05       	cpc	r25, r1
     95a:	19 f4       	brne	.+6      	; 0x962 <__floatunsisf+0x20>
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	89 83       	std	Y+1, r24	; 0x01
     960:	60 c0       	rjmp	.+192    	; 0xa22 <__floatunsisf+0xe0>
     962:	83 e0       	ldi	r24, 0x03	; 3
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	8e e1       	ldi	r24, 0x1E	; 30
     968:	c8 2e       	mov	r12, r24
     96a:	d1 2c       	mov	r13, r1
     96c:	dc 82       	std	Y+4, r13	; 0x04
     96e:	cb 82       	std	Y+3, r12	; 0x03
     970:	ed 82       	std	Y+5, r14	; 0x05
     972:	fe 82       	std	Y+6, r15	; 0x06
     974:	0f 83       	std	Y+7, r16	; 0x07
     976:	18 87       	std	Y+8, r17	; 0x08
     978:	c8 01       	movw	r24, r16
     97a:	b7 01       	movw	r22, r14
     97c:	0e 94 1a 05 	call	0xa34	; 0xa34 <__clzsi2>
     980:	fc 01       	movw	r30, r24
     982:	31 97       	sbiw	r30, 0x01	; 1
     984:	f7 ff       	sbrs	r31, 7
     986:	3b c0       	rjmp	.+118    	; 0x9fe <__floatunsisf+0xbc>
     988:	22 27       	eor	r18, r18
     98a:	33 27       	eor	r19, r19
     98c:	2e 1b       	sub	r18, r30
     98e:	3f 0b       	sbc	r19, r31
     990:	57 01       	movw	r10, r14
     992:	68 01       	movw	r12, r16
     994:	02 2e       	mov	r0, r18
     996:	04 c0       	rjmp	.+8      	; 0x9a0 <__floatunsisf+0x5e>
     998:	d6 94       	lsr	r13
     99a:	c7 94       	ror	r12
     99c:	b7 94       	ror	r11
     99e:	a7 94       	ror	r10
     9a0:	0a 94       	dec	r0
     9a2:	d2 f7       	brpl	.-12     	; 0x998 <__floatunsisf+0x56>
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	a0 e0       	ldi	r26, 0x00	; 0
     9b2:	b0 e0       	ldi	r27, 0x00	; 0
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <__floatunsisf+0x7c>
     9b6:	88 0f       	add	r24, r24
     9b8:	99 1f       	adc	r25, r25
     9ba:	aa 1f       	adc	r26, r26
     9bc:	bb 1f       	adc	r27, r27
     9be:	2a 95       	dec	r18
     9c0:	d2 f7       	brpl	.-12     	; 0x9b6 <__floatunsisf+0x74>
     9c2:	01 97       	sbiw	r24, 0x01	; 1
     9c4:	a1 09       	sbc	r26, r1
     9c6:	b1 09       	sbc	r27, r1
     9c8:	8e 21       	and	r24, r14
     9ca:	9f 21       	and	r25, r15
     9cc:	a0 23       	and	r26, r16
     9ce:	b1 23       	and	r27, r17
     9d0:	00 97       	sbiw	r24, 0x00	; 0
     9d2:	a1 05       	cpc	r26, r1
     9d4:	b1 05       	cpc	r27, r1
     9d6:	21 f0       	breq	.+8      	; 0x9e0 <__floatunsisf+0x9e>
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	4a 29       	or	r20, r10
     9e2:	5b 29       	or	r21, r11
     9e4:	6c 29       	or	r22, r12
     9e6:	7d 29       	or	r23, r13
     9e8:	4d 83       	std	Y+5, r20	; 0x05
     9ea:	5e 83       	std	Y+6, r21	; 0x06
     9ec:	6f 83       	std	Y+7, r22	; 0x07
     9ee:	78 87       	std	Y+8, r23	; 0x08
     9f0:	8e e1       	ldi	r24, 0x1E	; 30
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	8e 1b       	sub	r24, r30
     9f6:	9f 0b       	sbc	r25, r31
     9f8:	9c 83       	std	Y+4, r25	; 0x04
     9fa:	8b 83       	std	Y+3, r24	; 0x03
     9fc:	12 c0       	rjmp	.+36     	; 0xa22 <__floatunsisf+0xe0>
     9fe:	30 97       	sbiw	r30, 0x00	; 0
     a00:	81 f0       	breq	.+32     	; 0xa22 <__floatunsisf+0xe0>
     a02:	0e 2e       	mov	r0, r30
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__floatunsisf+0xcc>
     a06:	ee 0c       	add	r14, r14
     a08:	ff 1c       	adc	r15, r15
     a0a:	00 1f       	adc	r16, r16
     a0c:	11 1f       	adc	r17, r17
     a0e:	0a 94       	dec	r0
     a10:	d2 f7       	brpl	.-12     	; 0xa06 <__floatunsisf+0xc4>
     a12:	ed 82       	std	Y+5, r14	; 0x05
     a14:	fe 82       	std	Y+6, r15	; 0x06
     a16:	0f 83       	std	Y+7, r16	; 0x07
     a18:	18 87       	std	Y+8, r17	; 0x08
     a1a:	ce 1a       	sub	r12, r30
     a1c:	df 0a       	sbc	r13, r31
     a1e:	dc 82       	std	Y+4, r13	; 0x04
     a20:	cb 82       	std	Y+3, r12	; 0x03
     a22:	1a 82       	std	Y+2, r1	; 0x02
     a24:	ce 01       	movw	r24, r28
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     a2c:	28 96       	adiw	r28, 0x08	; 8
     a2e:	ea e0       	ldi	r30, 0x0A	; 10
     a30:	0c 94 d9 19 	jmp	0x33b2	; 0x33b2 <__epilogue_restores__+0x10>

00000a34 <__clzsi2>:
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	7b 01       	movw	r14, r22
     a3e:	8c 01       	movw	r16, r24
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	e8 16       	cp	r14, r24
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	f8 06       	cpc	r15, r24
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	08 07       	cpc	r16, r24
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	18 07       	cpc	r17, r24
     a50:	88 f4       	brcc	.+34     	; 0xa74 <__clzsi2+0x40>
     a52:	8f ef       	ldi	r24, 0xFF	; 255
     a54:	e8 16       	cp	r14, r24
     a56:	f1 04       	cpc	r15, r1
     a58:	01 05       	cpc	r16, r1
     a5a:	11 05       	cpc	r17, r1
     a5c:	31 f0       	breq	.+12     	; 0xa6a <__clzsi2+0x36>
     a5e:	28 f0       	brcs	.+10     	; 0xa6a <__clzsi2+0x36>
     a60:	88 e0       	ldi	r24, 0x08	; 8
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	17 c0       	rjmp	.+46     	; 0xa98 <__clzsi2+0x64>
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	a0 e0       	ldi	r26, 0x00	; 0
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	12 c0       	rjmp	.+36     	; 0xa98 <__clzsi2+0x64>
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	e8 16       	cp	r14, r24
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	f8 06       	cpc	r15, r24
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	08 07       	cpc	r16, r24
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	18 07       	cpc	r17, r24
     a84:	28 f0       	brcs	.+10     	; 0xa90 <__clzsi2+0x5c>
     a86:	88 e1       	ldi	r24, 0x18	; 24
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__clzsi2+0x64>
     a90:	80 e1       	ldi	r24, 0x10	; 16
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	a0 e0       	ldi	r26, 0x00	; 0
     a96:	b0 e0       	ldi	r27, 0x00	; 0
     a98:	20 e2       	ldi	r18, 0x20	; 32
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	28 1b       	sub	r18, r24
     aa2:	39 0b       	sbc	r19, r25
     aa4:	4a 0b       	sbc	r20, r26
     aa6:	5b 0b       	sbc	r21, r27
     aa8:	04 c0       	rjmp	.+8      	; 0xab2 <__clzsi2+0x7e>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	8a 95       	dec	r24
     ab4:	d2 f7       	brpl	.-12     	; 0xaaa <__clzsi2+0x76>
     ab6:	f7 01       	movw	r30, r14
     ab8:	e5 5f       	subi	r30, 0xF5	; 245
     aba:	fe 4f       	sbci	r31, 0xFE	; 254
     abc:	80 81       	ld	r24, Z
     abe:	28 1b       	sub	r18, r24
     ac0:	31 09       	sbc	r19, r1
     ac2:	41 09       	sbc	r20, r1
     ac4:	51 09       	sbc	r21, r1
     ac6:	c9 01       	movw	r24, r18
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	08 95       	ret

00000ad2 <__pack_f>:
     ad2:	df 92       	push	r13
     ad4:	ef 92       	push	r14
     ad6:	ff 92       	push	r15
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	fc 01       	movw	r30, r24
     ade:	e4 80       	ldd	r14, Z+4	; 0x04
     ae0:	f5 80       	ldd	r15, Z+5	; 0x05
     ae2:	06 81       	ldd	r16, Z+6	; 0x06
     ae4:	17 81       	ldd	r17, Z+7	; 0x07
     ae6:	d1 80       	ldd	r13, Z+1	; 0x01
     ae8:	80 81       	ld	r24, Z
     aea:	82 30       	cpi	r24, 0x02	; 2
     aec:	48 f4       	brcc	.+18     	; 0xb00 <__pack_f+0x2e>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	a0 e1       	ldi	r26, 0x10	; 16
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	e8 2a       	or	r14, r24
     af8:	f9 2a       	or	r15, r25
     afa:	0a 2b       	or	r16, r26
     afc:	1b 2b       	or	r17, r27
     afe:	a5 c0       	rjmp	.+330    	; 0xc4a <__pack_f+0x178>
     b00:	84 30       	cpi	r24, 0x04	; 4
     b02:	09 f4       	brne	.+2      	; 0xb06 <__pack_f+0x34>
     b04:	9f c0       	rjmp	.+318    	; 0xc44 <__pack_f+0x172>
     b06:	82 30       	cpi	r24, 0x02	; 2
     b08:	21 f4       	brne	.+8      	; 0xb12 <__pack_f+0x40>
     b0a:	ee 24       	eor	r14, r14
     b0c:	ff 24       	eor	r15, r15
     b0e:	87 01       	movw	r16, r14
     b10:	05 c0       	rjmp	.+10     	; 0xb1c <__pack_f+0x4a>
     b12:	e1 14       	cp	r14, r1
     b14:	f1 04       	cpc	r15, r1
     b16:	01 05       	cpc	r16, r1
     b18:	11 05       	cpc	r17, r1
     b1a:	19 f4       	brne	.+6      	; 0xb22 <__pack_f+0x50>
     b1c:	e0 e0       	ldi	r30, 0x00	; 0
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	96 c0       	rjmp	.+300    	; 0xc4e <__pack_f+0x17c>
     b22:	62 81       	ldd	r22, Z+2	; 0x02
     b24:	73 81       	ldd	r23, Z+3	; 0x03
     b26:	9f ef       	ldi	r25, 0xFF	; 255
     b28:	62 38       	cpi	r22, 0x82	; 130
     b2a:	79 07       	cpc	r23, r25
     b2c:	0c f0       	brlt	.+2      	; 0xb30 <__pack_f+0x5e>
     b2e:	5b c0       	rjmp	.+182    	; 0xbe6 <__pack_f+0x114>
     b30:	22 e8       	ldi	r18, 0x82	; 130
     b32:	3f ef       	ldi	r19, 0xFF	; 255
     b34:	26 1b       	sub	r18, r22
     b36:	37 0b       	sbc	r19, r23
     b38:	2a 31       	cpi	r18, 0x1A	; 26
     b3a:	31 05       	cpc	r19, r1
     b3c:	2c f0       	brlt	.+10     	; 0xb48 <__pack_f+0x76>
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	40 e0       	ldi	r20, 0x00	; 0
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	2a c0       	rjmp	.+84     	; 0xb9c <__pack_f+0xca>
     b48:	b8 01       	movw	r22, r16
     b4a:	a7 01       	movw	r20, r14
     b4c:	02 2e       	mov	r0, r18
     b4e:	04 c0       	rjmp	.+8      	; 0xb58 <__pack_f+0x86>
     b50:	76 95       	lsr	r23
     b52:	67 95       	ror	r22
     b54:	57 95       	ror	r21
     b56:	47 95       	ror	r20
     b58:	0a 94       	dec	r0
     b5a:	d2 f7       	brpl	.-12     	; 0xb50 <__pack_f+0x7e>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x9c>
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	aa 1f       	adc	r26, r26
     b6c:	bb 1f       	adc	r27, r27
     b6e:	2a 95       	dec	r18
     b70:	d2 f7       	brpl	.-12     	; 0xb66 <__pack_f+0x94>
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	a1 09       	sbc	r26, r1
     b76:	b1 09       	sbc	r27, r1
     b78:	8e 21       	and	r24, r14
     b7a:	9f 21       	and	r25, r15
     b7c:	a0 23       	and	r26, r16
     b7e:	b1 23       	and	r27, r17
     b80:	00 97       	sbiw	r24, 0x00	; 0
     b82:	a1 05       	cpc	r26, r1
     b84:	b1 05       	cpc	r27, r1
     b86:	21 f0       	breq	.+8      	; 0xb90 <__pack_f+0xbe>
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	a0 e0       	ldi	r26, 0x00	; 0
     b8e:	b0 e0       	ldi	r27, 0x00	; 0
     b90:	9a 01       	movw	r18, r20
     b92:	ab 01       	movw	r20, r22
     b94:	28 2b       	or	r18, r24
     b96:	39 2b       	or	r19, r25
     b98:	4a 2b       	or	r20, r26
     b9a:	5b 2b       	or	r21, r27
     b9c:	da 01       	movw	r26, r20
     b9e:	c9 01       	movw	r24, r18
     ba0:	8f 77       	andi	r24, 0x7F	; 127
     ba2:	90 70       	andi	r25, 0x00	; 0
     ba4:	a0 70       	andi	r26, 0x00	; 0
     ba6:	b0 70       	andi	r27, 0x00	; 0
     ba8:	80 34       	cpi	r24, 0x40	; 64
     baa:	91 05       	cpc	r25, r1
     bac:	a1 05       	cpc	r26, r1
     bae:	b1 05       	cpc	r27, r1
     bb0:	39 f4       	brne	.+14     	; 0xbc0 <__pack_f+0xee>
     bb2:	27 ff       	sbrs	r18, 7
     bb4:	09 c0       	rjmp	.+18     	; 0xbc8 <__pack_f+0xf6>
     bb6:	20 5c       	subi	r18, 0xC0	; 192
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	4f 4f       	sbci	r20, 0xFF	; 255
     bbc:	5f 4f       	sbci	r21, 0xFF	; 255
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0xf6>
     bc0:	21 5c       	subi	r18, 0xC1	; 193
     bc2:	3f 4f       	sbci	r19, 0xFF	; 255
     bc4:	4f 4f       	sbci	r20, 0xFF	; 255
     bc6:	5f 4f       	sbci	r21, 0xFF	; 255
     bc8:	e0 e0       	ldi	r30, 0x00	; 0
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	20 30       	cpi	r18, 0x00	; 0
     bce:	a0 e0       	ldi	r26, 0x00	; 0
     bd0:	3a 07       	cpc	r19, r26
     bd2:	a0 e0       	ldi	r26, 0x00	; 0
     bd4:	4a 07       	cpc	r20, r26
     bd6:	a0 e4       	ldi	r26, 0x40	; 64
     bd8:	5a 07       	cpc	r21, r26
     bda:	10 f0       	brcs	.+4      	; 0xbe0 <__pack_f+0x10e>
     bdc:	e1 e0       	ldi	r30, 0x01	; 1
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	79 01       	movw	r14, r18
     be2:	8a 01       	movw	r16, r20
     be4:	27 c0       	rjmp	.+78     	; 0xc34 <__pack_f+0x162>
     be6:	60 38       	cpi	r22, 0x80	; 128
     be8:	71 05       	cpc	r23, r1
     bea:	64 f5       	brge	.+88     	; 0xc44 <__pack_f+0x172>
     bec:	fb 01       	movw	r30, r22
     bee:	e1 58       	subi	r30, 0x81	; 129
     bf0:	ff 4f       	sbci	r31, 0xFF	; 255
     bf2:	d8 01       	movw	r26, r16
     bf4:	c7 01       	movw	r24, r14
     bf6:	8f 77       	andi	r24, 0x7F	; 127
     bf8:	90 70       	andi	r25, 0x00	; 0
     bfa:	a0 70       	andi	r26, 0x00	; 0
     bfc:	b0 70       	andi	r27, 0x00	; 0
     bfe:	80 34       	cpi	r24, 0x40	; 64
     c00:	91 05       	cpc	r25, r1
     c02:	a1 05       	cpc	r26, r1
     c04:	b1 05       	cpc	r27, r1
     c06:	39 f4       	brne	.+14     	; 0xc16 <__pack_f+0x144>
     c08:	e7 fe       	sbrs	r14, 7
     c0a:	0d c0       	rjmp	.+26     	; 0xc26 <__pack_f+0x154>
     c0c:	80 e4       	ldi	r24, 0x40	; 64
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	a0 e0       	ldi	r26, 0x00	; 0
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__pack_f+0x14c>
     c16:	8f e3       	ldi	r24, 0x3F	; 63
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	a0 e0       	ldi	r26, 0x00	; 0
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	e8 0e       	add	r14, r24
     c20:	f9 1e       	adc	r15, r25
     c22:	0a 1f       	adc	r16, r26
     c24:	1b 1f       	adc	r17, r27
     c26:	17 ff       	sbrs	r17, 7
     c28:	05 c0       	rjmp	.+10     	; 0xc34 <__pack_f+0x162>
     c2a:	16 95       	lsr	r17
     c2c:	07 95       	ror	r16
     c2e:	f7 94       	ror	r15
     c30:	e7 94       	ror	r14
     c32:	31 96       	adiw	r30, 0x01	; 1
     c34:	87 e0       	ldi	r24, 0x07	; 7
     c36:	16 95       	lsr	r17
     c38:	07 95       	ror	r16
     c3a:	f7 94       	ror	r15
     c3c:	e7 94       	ror	r14
     c3e:	8a 95       	dec	r24
     c40:	d1 f7       	brne	.-12     	; 0xc36 <__pack_f+0x164>
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <__pack_f+0x17c>
     c44:	ee 24       	eor	r14, r14
     c46:	ff 24       	eor	r15, r15
     c48:	87 01       	movw	r16, r14
     c4a:	ef ef       	ldi	r30, 0xFF	; 255
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	6e 2f       	mov	r22, r30
     c50:	67 95       	ror	r22
     c52:	66 27       	eor	r22, r22
     c54:	67 95       	ror	r22
     c56:	90 2f       	mov	r25, r16
     c58:	9f 77       	andi	r25, 0x7F	; 127
     c5a:	d7 94       	ror	r13
     c5c:	dd 24       	eor	r13, r13
     c5e:	d7 94       	ror	r13
     c60:	8e 2f       	mov	r24, r30
     c62:	86 95       	lsr	r24
     c64:	49 2f       	mov	r20, r25
     c66:	46 2b       	or	r20, r22
     c68:	58 2f       	mov	r21, r24
     c6a:	5d 29       	or	r21, r13
     c6c:	b7 01       	movw	r22, r14
     c6e:	ca 01       	movw	r24, r20
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	df 90       	pop	r13
     c7a:	08 95       	ret

00000c7c <__unpack_f>:
     c7c:	fc 01       	movw	r30, r24
     c7e:	db 01       	movw	r26, r22
     c80:	40 81       	ld	r20, Z
     c82:	51 81       	ldd	r21, Z+1	; 0x01
     c84:	22 81       	ldd	r18, Z+2	; 0x02
     c86:	62 2f       	mov	r22, r18
     c88:	6f 77       	andi	r22, 0x7F	; 127
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	22 1f       	adc	r18, r18
     c8e:	22 27       	eor	r18, r18
     c90:	22 1f       	adc	r18, r18
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	89 2f       	mov	r24, r25
     c96:	88 0f       	add	r24, r24
     c98:	82 2b       	or	r24, r18
     c9a:	28 2f       	mov	r18, r24
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	99 1f       	adc	r25, r25
     ca0:	99 27       	eor	r25, r25
     ca2:	99 1f       	adc	r25, r25
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	9c 93       	st	X, r25
     ca8:	11 97       	sbiw	r26, 0x01	; 1
     caa:	21 15       	cp	r18, r1
     cac:	31 05       	cpc	r19, r1
     cae:	a9 f5       	brne	.+106    	; 0xd1a <__unpack_f+0x9e>
     cb0:	41 15       	cp	r20, r1
     cb2:	51 05       	cpc	r21, r1
     cb4:	61 05       	cpc	r22, r1
     cb6:	71 05       	cpc	r23, r1
     cb8:	11 f4       	brne	.+4      	; 0xcbe <__unpack_f+0x42>
     cba:	82 e0       	ldi	r24, 0x02	; 2
     cbc:	37 c0       	rjmp	.+110    	; 0xd2c <__unpack_f+0xb0>
     cbe:	82 e8       	ldi	r24, 0x82	; 130
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
     cc2:	13 96       	adiw	r26, 0x03	; 3
     cc4:	9c 93       	st	X, r25
     cc6:	8e 93       	st	-X, r24
     cc8:	12 97       	sbiw	r26, 0x02	; 2
     cca:	9a 01       	movw	r18, r20
     ccc:	ab 01       	movw	r20, r22
     cce:	67 e0       	ldi	r22, 0x07	; 7
     cd0:	22 0f       	add	r18, r18
     cd2:	33 1f       	adc	r19, r19
     cd4:	44 1f       	adc	r20, r20
     cd6:	55 1f       	adc	r21, r21
     cd8:	6a 95       	dec	r22
     cda:	d1 f7       	brne	.-12     	; 0xcd0 <__unpack_f+0x54>
     cdc:	83 e0       	ldi	r24, 0x03	; 3
     cde:	8c 93       	st	X, r24
     ce0:	0d c0       	rjmp	.+26     	; 0xcfc <__unpack_f+0x80>
     ce2:	22 0f       	add	r18, r18
     ce4:	33 1f       	adc	r19, r19
     ce6:	44 1f       	adc	r20, r20
     ce8:	55 1f       	adc	r21, r21
     cea:	12 96       	adiw	r26, 0x02	; 2
     cec:	8d 91       	ld	r24, X+
     cee:	9c 91       	ld	r25, X
     cf0:	13 97       	sbiw	r26, 0x03	; 3
     cf2:	01 97       	sbiw	r24, 0x01	; 1
     cf4:	13 96       	adiw	r26, 0x03	; 3
     cf6:	9c 93       	st	X, r25
     cf8:	8e 93       	st	-X, r24
     cfa:	12 97       	sbiw	r26, 0x02	; 2
     cfc:	20 30       	cpi	r18, 0x00	; 0
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	38 07       	cpc	r19, r24
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	48 07       	cpc	r20, r24
     d06:	80 e4       	ldi	r24, 0x40	; 64
     d08:	58 07       	cpc	r21, r24
     d0a:	58 f3       	brcs	.-42     	; 0xce2 <__unpack_f+0x66>
     d0c:	14 96       	adiw	r26, 0x04	; 4
     d0e:	2d 93       	st	X+, r18
     d10:	3d 93       	st	X+, r19
     d12:	4d 93       	st	X+, r20
     d14:	5c 93       	st	X, r21
     d16:	17 97       	sbiw	r26, 0x07	; 7
     d18:	08 95       	ret
     d1a:	2f 3f       	cpi	r18, 0xFF	; 255
     d1c:	31 05       	cpc	r19, r1
     d1e:	79 f4       	brne	.+30     	; 0xd3e <__unpack_f+0xc2>
     d20:	41 15       	cp	r20, r1
     d22:	51 05       	cpc	r21, r1
     d24:	61 05       	cpc	r22, r1
     d26:	71 05       	cpc	r23, r1
     d28:	19 f4       	brne	.+6      	; 0xd30 <__unpack_f+0xb4>
     d2a:	84 e0       	ldi	r24, 0x04	; 4
     d2c:	8c 93       	st	X, r24
     d2e:	08 95       	ret
     d30:	64 ff       	sbrs	r22, 4
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <__unpack_f+0xbe>
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	8c 93       	st	X, r24
     d38:	12 c0       	rjmp	.+36     	; 0xd5e <__unpack_f+0xe2>
     d3a:	1c 92       	st	X, r1
     d3c:	10 c0       	rjmp	.+32     	; 0xd5e <__unpack_f+0xe2>
     d3e:	2f 57       	subi	r18, 0x7F	; 127
     d40:	30 40       	sbci	r19, 0x00	; 0
     d42:	13 96       	adiw	r26, 0x03	; 3
     d44:	3c 93       	st	X, r19
     d46:	2e 93       	st	-X, r18
     d48:	12 97       	sbiw	r26, 0x02	; 2
     d4a:	83 e0       	ldi	r24, 0x03	; 3
     d4c:	8c 93       	st	X, r24
     d4e:	87 e0       	ldi	r24, 0x07	; 7
     d50:	44 0f       	add	r20, r20
     d52:	55 1f       	adc	r21, r21
     d54:	66 1f       	adc	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	8a 95       	dec	r24
     d5a:	d1 f7       	brne	.-12     	; 0xd50 <__unpack_f+0xd4>
     d5c:	70 64       	ori	r23, 0x40	; 64
     d5e:	14 96       	adiw	r26, 0x04	; 4
     d60:	4d 93       	st	X+, r20
     d62:	5d 93       	st	X+, r21
     d64:	6d 93       	st	X+, r22
     d66:	7c 93       	st	X, r23
     d68:	17 97       	sbiw	r26, 0x07	; 7
     d6a:	08 95       	ret

00000d6c <__fpcmp_parts_f>:
     d6c:	1f 93       	push	r17
     d6e:	dc 01       	movw	r26, r24
     d70:	fb 01       	movw	r30, r22
     d72:	9c 91       	ld	r25, X
     d74:	92 30       	cpi	r25, 0x02	; 2
     d76:	08 f4       	brcc	.+2      	; 0xd7a <__fpcmp_parts_f+0xe>
     d78:	47 c0       	rjmp	.+142    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d7a:	80 81       	ld	r24, Z
     d7c:	82 30       	cpi	r24, 0x02	; 2
     d7e:	08 f4       	brcc	.+2      	; 0xd82 <__fpcmp_parts_f+0x16>
     d80:	43 c0       	rjmp	.+134    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d82:	94 30       	cpi	r25, 0x04	; 4
     d84:	51 f4       	brne	.+20     	; 0xd9a <__fpcmp_parts_f+0x2e>
     d86:	11 96       	adiw	r26, 0x01	; 1
     d88:	1c 91       	ld	r17, X
     d8a:	84 30       	cpi	r24, 0x04	; 4
     d8c:	99 f5       	brne	.+102    	; 0xdf4 <__fpcmp_parts_f+0x88>
     d8e:	81 81       	ldd	r24, Z+1	; 0x01
     d90:	68 2f       	mov	r22, r24
     d92:	70 e0       	ldi	r23, 0x00	; 0
     d94:	61 1b       	sub	r22, r17
     d96:	71 09       	sbc	r23, r1
     d98:	3f c0       	rjmp	.+126    	; 0xe18 <__fpcmp_parts_f+0xac>
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	21 f0       	breq	.+8      	; 0xda6 <__fpcmp_parts_f+0x3a>
     d9e:	92 30       	cpi	r25, 0x02	; 2
     da0:	31 f4       	brne	.+12     	; 0xdae <__fpcmp_parts_f+0x42>
     da2:	82 30       	cpi	r24, 0x02	; 2
     da4:	b9 f1       	breq	.+110    	; 0xe14 <__fpcmp_parts_f+0xa8>
     da6:	81 81       	ldd	r24, Z+1	; 0x01
     da8:	88 23       	and	r24, r24
     daa:	89 f1       	breq	.+98     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dac:	2d c0       	rjmp	.+90     	; 0xe08 <__fpcmp_parts_f+0x9c>
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	1c 91       	ld	r17, X
     db2:	11 97       	sbiw	r26, 0x01	; 1
     db4:	82 30       	cpi	r24, 0x02	; 2
     db6:	f1 f0       	breq	.+60     	; 0xdf4 <__fpcmp_parts_f+0x88>
     db8:	81 81       	ldd	r24, Z+1	; 0x01
     dba:	18 17       	cp	r17, r24
     dbc:	d9 f4       	brne	.+54     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	2d 91       	ld	r18, X+
     dc2:	3c 91       	ld	r19, X
     dc4:	13 97       	sbiw	r26, 0x03	; 3
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	82 17       	cp	r24, r18
     dcc:	93 07       	cpc	r25, r19
     dce:	94 f0       	brlt	.+36     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dd0:	28 17       	cp	r18, r24
     dd2:	39 07       	cpc	r19, r25
     dd4:	bc f0       	brlt	.+46     	; 0xe04 <__fpcmp_parts_f+0x98>
     dd6:	14 96       	adiw	r26, 0x04	; 4
     dd8:	8d 91       	ld	r24, X+
     dda:	9d 91       	ld	r25, X+
     ddc:	0d 90       	ld	r0, X+
     dde:	bc 91       	ld	r27, X
     de0:	a0 2d       	mov	r26, r0
     de2:	24 81       	ldd	r18, Z+4	; 0x04
     de4:	35 81       	ldd	r19, Z+5	; 0x05
     de6:	46 81       	ldd	r20, Z+6	; 0x06
     de8:	57 81       	ldd	r21, Z+7	; 0x07
     dea:	28 17       	cp	r18, r24
     dec:	39 07       	cpc	r19, r25
     dee:	4a 07       	cpc	r20, r26
     df0:	5b 07       	cpc	r21, r27
     df2:	18 f4       	brcc	.+6      	; 0xdfa <__fpcmp_parts_f+0x8e>
     df4:	11 23       	and	r17, r17
     df6:	41 f0       	breq	.+16     	; 0xe08 <__fpcmp_parts_f+0x9c>
     df8:	0a c0       	rjmp	.+20     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dfa:	82 17       	cp	r24, r18
     dfc:	93 07       	cpc	r25, r19
     dfe:	a4 07       	cpc	r26, r20
     e00:	b5 07       	cpc	r27, r21
     e02:	40 f4       	brcc	.+16     	; 0xe14 <__fpcmp_parts_f+0xa8>
     e04:	11 23       	and	r17, r17
     e06:	19 f0       	breq	.+6      	; 0xe0e <__fpcmp_parts_f+0xa2>
     e08:	61 e0       	ldi	r22, 0x01	; 1
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <__fpcmp_parts_f+0xac>
     e0e:	6f ef       	ldi	r22, 0xFF	; 255
     e10:	7f ef       	ldi	r23, 0xFF	; 255
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <__fpcmp_parts_f+0xac>
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	cb 01       	movw	r24, r22
     e1a:	1f 91       	pop	r17
     e1c:	08 95       	ret

00000e1e <main>:
#define Open      < 2.5     //(volt < 2.5 -> open flex sensor)
#define Hold      > 2.5     //(volt > 2.5 -> hold flex sensor)


int main()
{
     e1e:	0f 93       	push	r16
     e20:	1f 93       	push	r17
     e22:	df 93       	push	r29
     e24:	cf 93       	push	r28
     e26:	cd b7       	in	r28, 0x3d	; 61
     e28:	de b7       	in	r29, 0x3e	; 62
     e2a:	c4 59       	subi	r28, 0x94	; 148
     e2c:	d0 40       	sbci	r29, 0x00	; 0
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	f8 94       	cli
     e32:	de bf       	out	0x3e, r29	; 62
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	cd bf       	out	0x3d, r28	; 61


	ADC_vidInit();
     e38:	0e 94 03 19 	call	0x3206	; 0x3206 <ADC_vidInit>
	Lcd_vidinit();
     e3c:	0e 94 07 10 	call	0x200e	; 0x200e <Lcd_vidinit>
	Lcd_vidCmd(_LCD_CURSOR_OFF);
     e40:	8c e0       	ldi	r24, 0x0C	; 12
     e42:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>

	f64  THUMB,INDEX,MIDDLE,RING,PINKY;

	LCD_vidRowColumn(0,0);
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>

	Lcd_vidCmd(_LCD_CLEAR);
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
     e54:	fe 01       	movw	r30, r28
     e56:	e1 5a       	subi	r30, 0xA1	; 161
     e58:	ff 4f       	sbci	r31, 0xFF	; 255
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	aa ef       	ldi	r26, 0xFA	; 250
     e60:	b4 e4       	ldi	r27, 0x44	; 68
     e62:	80 83       	st	Z, r24
     e64:	91 83       	std	Z+1, r25	; 0x01
     e66:	a2 83       	std	Z+2, r26	; 0x02
     e68:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e6a:	8e 01       	movw	r16, r28
     e6c:	05 5a       	subi	r16, 0xA5	; 165
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
     e70:	fe 01       	movw	r30, r28
     e72:	e1 5a       	subi	r30, 0xA1	; 161
     e74:	ff 4f       	sbci	r31, 0xFF	; 255
     e76:	60 81       	ld	r22, Z
     e78:	71 81       	ldd	r23, Z+1	; 0x01
     e7a:	82 81       	ldd	r24, Z+2	; 0x02
     e7c:	93 81       	ldd	r25, Z+3	; 0x03
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	4a e7       	ldi	r20, 0x7A	; 122
     e84:	55 e4       	ldi	r21, 0x45	; 69
     e86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e8a:	dc 01       	movw	r26, r24
     e8c:	cb 01       	movw	r24, r22
     e8e:	f8 01       	movw	r30, r16
     e90:	80 83       	st	Z, r24
     e92:	91 83       	std	Z+1, r25	; 0x01
     e94:	a2 83       	std	Z+2, r26	; 0x02
     e96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e98:	fe 01       	movw	r30, r28
     e9a:	e5 5a       	subi	r30, 0xA5	; 165
     e9c:	ff 4f       	sbci	r31, 0xFF	; 255
     e9e:	60 81       	ld	r22, Z
     ea0:	71 81       	ldd	r23, Z+1	; 0x01
     ea2:	82 81       	ldd	r24, Z+2	; 0x02
     ea4:	93 81       	ldd	r25, Z+3	; 0x03
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	40 e8       	ldi	r20, 0x80	; 128
     eac:	5f e3       	ldi	r21, 0x3F	; 63
     eae:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     eb2:	88 23       	and	r24, r24
     eb4:	44 f4       	brge	.+16     	; 0xec6 <main+0xa8>
		__ticks = 1;
     eb6:	fe 01       	movw	r30, r28
     eb8:	e7 5a       	subi	r30, 0xA7	; 167
     eba:	ff 4f       	sbci	r31, 0xFF	; 255
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	91 83       	std	Z+1, r25	; 0x01
     ec2:	80 83       	st	Z, r24
     ec4:	64 c0       	rjmp	.+200    	; 0xf8e <main+0x170>
	else if (__tmp > 65535)
     ec6:	fe 01       	movw	r30, r28
     ec8:	e5 5a       	subi	r30, 0xA5	; 165
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	60 81       	ld	r22, Z
     ece:	71 81       	ldd	r23, Z+1	; 0x01
     ed0:	82 81       	ldd	r24, Z+2	; 0x02
     ed2:	93 81       	ldd	r25, Z+3	; 0x03
     ed4:	20 e0       	ldi	r18, 0x00	; 0
     ed6:	3f ef       	ldi	r19, 0xFF	; 255
     ed8:	4f e7       	ldi	r20, 0x7F	; 127
     eda:	57 e4       	ldi	r21, 0x47	; 71
     edc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     ee0:	18 16       	cp	r1, r24
     ee2:	0c f0       	brlt	.+2      	; 0xee6 <main+0xc8>
     ee4:	43 c0       	rjmp	.+134    	; 0xf6c <main+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ee6:	fe 01       	movw	r30, r28
     ee8:	e1 5a       	subi	r30, 0xA1	; 161
     eea:	ff 4f       	sbci	r31, 0xFF	; 255
     eec:	60 81       	ld	r22, Z
     eee:	71 81       	ldd	r23, Z+1	; 0x01
     ef0:	82 81       	ldd	r24, Z+2	; 0x02
     ef2:	93 81       	ldd	r25, Z+3	; 0x03
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	40 e2       	ldi	r20, 0x20	; 32
     efa:	51 e4       	ldi	r21, 0x41	; 65
     efc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f00:	dc 01       	movw	r26, r24
     f02:	cb 01       	movw	r24, r22
     f04:	8e 01       	movw	r16, r28
     f06:	07 5a       	subi	r16, 0xA7	; 167
     f08:	1f 4f       	sbci	r17, 0xFF	; 255
     f0a:	bc 01       	movw	r22, r24
     f0c:	cd 01       	movw	r24, r26
     f0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f12:	dc 01       	movw	r26, r24
     f14:	cb 01       	movw	r24, r22
     f16:	f8 01       	movw	r30, r16
     f18:	91 83       	std	Z+1, r25	; 0x01
     f1a:	80 83       	st	Z, r24
     f1c:	1f c0       	rjmp	.+62     	; 0xf5c <main+0x13e>
     f1e:	fe 01       	movw	r30, r28
     f20:	e9 5a       	subi	r30, 0xA9	; 169
     f22:	ff 4f       	sbci	r31, 0xFF	; 255
     f24:	80 e9       	ldi	r24, 0x90	; 144
     f26:	91 e0       	ldi	r25, 0x01	; 1
     f28:	91 83       	std	Z+1, r25	; 0x01
     f2a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f2c:	fe 01       	movw	r30, r28
     f2e:	e9 5a       	subi	r30, 0xA9	; 169
     f30:	ff 4f       	sbci	r31, 0xFF	; 255
     f32:	80 81       	ld	r24, Z
     f34:	91 81       	ldd	r25, Z+1	; 0x01
     f36:	01 97       	sbiw	r24, 0x01	; 1
     f38:	f1 f7       	brne	.-4      	; 0xf36 <main+0x118>
     f3a:	fe 01       	movw	r30, r28
     f3c:	e9 5a       	subi	r30, 0xA9	; 169
     f3e:	ff 4f       	sbci	r31, 0xFF	; 255
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f44:	de 01       	movw	r26, r28
     f46:	a7 5a       	subi	r26, 0xA7	; 167
     f48:	bf 4f       	sbci	r27, 0xFF	; 255
     f4a:	fe 01       	movw	r30, r28
     f4c:	e7 5a       	subi	r30, 0xA7	; 167
     f4e:	ff 4f       	sbci	r31, 0xFF	; 255
     f50:	80 81       	ld	r24, Z
     f52:	91 81       	ldd	r25, Z+1	; 0x01
     f54:	01 97       	sbiw	r24, 0x01	; 1
     f56:	11 96       	adiw	r26, 0x01	; 1
     f58:	9c 93       	st	X, r25
     f5a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f5c:	fe 01       	movw	r30, r28
     f5e:	e7 5a       	subi	r30, 0xA7	; 167
     f60:	ff 4f       	sbci	r31, 0xFF	; 255
     f62:	80 81       	ld	r24, Z
     f64:	91 81       	ldd	r25, Z+1	; 0x01
     f66:	00 97       	sbiw	r24, 0x00	; 0
     f68:	d1 f6       	brne	.-76     	; 0xf1e <main+0x100>
     f6a:	27 c0       	rjmp	.+78     	; 0xfba <main+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f6c:	8e 01       	movw	r16, r28
     f6e:	07 5a       	subi	r16, 0xA7	; 167
     f70:	1f 4f       	sbci	r17, 0xFF	; 255
     f72:	fe 01       	movw	r30, r28
     f74:	e5 5a       	subi	r30, 0xA5	; 165
     f76:	ff 4f       	sbci	r31, 0xFF	; 255
     f78:	60 81       	ld	r22, Z
     f7a:	71 81       	ldd	r23, Z+1	; 0x01
     f7c:	82 81       	ldd	r24, Z+2	; 0x02
     f7e:	93 81       	ldd	r25, Z+3	; 0x03
     f80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f84:	dc 01       	movw	r26, r24
     f86:	cb 01       	movw	r24, r22
     f88:	f8 01       	movw	r30, r16
     f8a:	91 83       	std	Z+1, r25	; 0x01
     f8c:	80 83       	st	Z, r24
     f8e:	de 01       	movw	r26, r28
     f90:	ab 5a       	subi	r26, 0xAB	; 171
     f92:	bf 4f       	sbci	r27, 0xFF	; 255
     f94:	fe 01       	movw	r30, r28
     f96:	e7 5a       	subi	r30, 0xA7	; 167
     f98:	ff 4f       	sbci	r31, 0xFF	; 255
     f9a:	80 81       	ld	r24, Z
     f9c:	91 81       	ldd	r25, Z+1	; 0x01
     f9e:	8d 93       	st	X+, r24
     fa0:	9c 93       	st	X, r25
     fa2:	fe 01       	movw	r30, r28
     fa4:	eb 5a       	subi	r30, 0xAB	; 171
     fa6:	ff 4f       	sbci	r31, 0xFF	; 255
     fa8:	80 81       	ld	r24, Z
     faa:	91 81       	ldd	r25, Z+1	; 0x01
     fac:	01 97       	sbiw	r24, 0x01	; 1
     fae:	f1 f7       	brne	.-4      	; 0xfac <main+0x18e>
     fb0:	fe 01       	movw	r30, r28
     fb2:	eb 5a       	subi	r30, 0xAB	; 171
     fb4:	ff 4f       	sbci	r31, 0xFF	; 255
     fb6:	91 83       	std	Z+1, r25	; 0x01
     fb8:	80 83       	st	Z, r24
	_delay_ms(2000);

	LCD_vidRowColumn(0,0);       //To start from (0,0)
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	60 e0       	ldi	r22, 0x00	; 0
     fbe:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>

	while(1)
	{
		// To Read from the flexible sensors and return a voltage value (from 0 to 5)

		THUMB = ADC_f64ADCRead(ADC_CHANNEL0);
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
     fc8:	dc 01       	movw	r26, r24
     fca:	cb 01       	movw	r24, r22
     fcc:	fe 01       	movw	r30, r28
     fce:	ed 58       	subi	r30, 0x8D	; 141
     fd0:	ff 4f       	sbci	r31, 0xFF	; 255
     fd2:	80 83       	st	Z, r24
     fd4:	91 83       	std	Z+1, r25	; 0x01
     fd6:	a2 83       	std	Z+2, r26	; 0x02
     fd8:	b3 83       	std	Z+3, r27	; 0x03
     fda:	fe 01       	movw	r30, r28
     fdc:	ef 5a       	subi	r30, 0xAF	; 175
     fde:	ff 4f       	sbci	r31, 0xFF	; 255
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	a8 e4       	ldi	r26, 0x48	; 72
     fe6:	b2 e4       	ldi	r27, 0x42	; 66
     fe8:	80 83       	st	Z, r24
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	a2 83       	std	Z+2, r26	; 0x02
     fee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ff0:	8e 01       	movw	r16, r28
     ff2:	03 5b       	subi	r16, 0xB3	; 179
     ff4:	1f 4f       	sbci	r17, 0xFF	; 255
     ff6:	fe 01       	movw	r30, r28
     ff8:	ef 5a       	subi	r30, 0xAF	; 175
     ffa:	ff 4f       	sbci	r31, 0xFF	; 255
     ffc:	60 81       	ld	r22, Z
     ffe:	71 81       	ldd	r23, Z+1	; 0x01
    1000:	82 81       	ldd	r24, Z+2	; 0x02
    1002:	93 81       	ldd	r25, Z+3	; 0x03
    1004:	20 e0       	ldi	r18, 0x00	; 0
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	4a e7       	ldi	r20, 0x7A	; 122
    100a:	55 e4       	ldi	r21, 0x45	; 69
    100c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1010:	dc 01       	movw	r26, r24
    1012:	cb 01       	movw	r24, r22
    1014:	f8 01       	movw	r30, r16
    1016:	80 83       	st	Z, r24
    1018:	91 83       	std	Z+1, r25	; 0x01
    101a:	a2 83       	std	Z+2, r26	; 0x02
    101c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    101e:	fe 01       	movw	r30, r28
    1020:	e3 5b       	subi	r30, 0xB3	; 179
    1022:	ff 4f       	sbci	r31, 0xFF	; 255
    1024:	60 81       	ld	r22, Z
    1026:	71 81       	ldd	r23, Z+1	; 0x01
    1028:	82 81       	ldd	r24, Z+2	; 0x02
    102a:	93 81       	ldd	r25, Z+3	; 0x03
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	40 e8       	ldi	r20, 0x80	; 128
    1032:	5f e3       	ldi	r21, 0x3F	; 63
    1034:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1038:	88 23       	and	r24, r24
    103a:	44 f4       	brge	.+16     	; 0x104c <main+0x22e>
		__ticks = 1;
    103c:	fe 01       	movw	r30, r28
    103e:	e5 5b       	subi	r30, 0xB5	; 181
    1040:	ff 4f       	sbci	r31, 0xFF	; 255
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	91 83       	std	Z+1, r25	; 0x01
    1048:	80 83       	st	Z, r24
    104a:	64 c0       	rjmp	.+200    	; 0x1114 <main+0x2f6>
	else if (__tmp > 65535)
    104c:	fe 01       	movw	r30, r28
    104e:	e3 5b       	subi	r30, 0xB3	; 179
    1050:	ff 4f       	sbci	r31, 0xFF	; 255
    1052:	60 81       	ld	r22, Z
    1054:	71 81       	ldd	r23, Z+1	; 0x01
    1056:	82 81       	ldd	r24, Z+2	; 0x02
    1058:	93 81       	ldd	r25, Z+3	; 0x03
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	3f ef       	ldi	r19, 0xFF	; 255
    105e:	4f e7       	ldi	r20, 0x7F	; 127
    1060:	57 e4       	ldi	r21, 0x47	; 71
    1062:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1066:	18 16       	cp	r1, r24
    1068:	0c f0       	brlt	.+2      	; 0x106c <main+0x24e>
    106a:	43 c0       	rjmp	.+134    	; 0x10f2 <main+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    106c:	fe 01       	movw	r30, r28
    106e:	ef 5a       	subi	r30, 0xAF	; 175
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e2       	ldi	r20, 0x20	; 32
    1080:	51 e4       	ldi	r21, 0x41	; 65
    1082:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1086:	dc 01       	movw	r26, r24
    1088:	cb 01       	movw	r24, r22
    108a:	8e 01       	movw	r16, r28
    108c:	05 5b       	subi	r16, 0xB5	; 181
    108e:	1f 4f       	sbci	r17, 0xFF	; 255
    1090:	bc 01       	movw	r22, r24
    1092:	cd 01       	movw	r24, r26
    1094:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1098:	dc 01       	movw	r26, r24
    109a:	cb 01       	movw	r24, r22
    109c:	f8 01       	movw	r30, r16
    109e:	91 83       	std	Z+1, r25	; 0x01
    10a0:	80 83       	st	Z, r24
    10a2:	1f c0       	rjmp	.+62     	; 0x10e2 <main+0x2c4>
    10a4:	fe 01       	movw	r30, r28
    10a6:	e7 5b       	subi	r30, 0xB7	; 183
    10a8:	ff 4f       	sbci	r31, 0xFF	; 255
    10aa:	80 e9       	ldi	r24, 0x90	; 144
    10ac:	91 e0       	ldi	r25, 0x01	; 1
    10ae:	91 83       	std	Z+1, r25	; 0x01
    10b0:	80 83       	st	Z, r24
    10b2:	fe 01       	movw	r30, r28
    10b4:	e7 5b       	subi	r30, 0xB7	; 183
    10b6:	ff 4f       	sbci	r31, 0xFF	; 255
    10b8:	80 81       	ld	r24, Z
    10ba:	91 81       	ldd	r25, Z+1	; 0x01
    10bc:	01 97       	sbiw	r24, 0x01	; 1
    10be:	f1 f7       	brne	.-4      	; 0x10bc <main+0x29e>
    10c0:	fe 01       	movw	r30, r28
    10c2:	e7 5b       	subi	r30, 0xB7	; 183
    10c4:	ff 4f       	sbci	r31, 0xFF	; 255
    10c6:	91 83       	std	Z+1, r25	; 0x01
    10c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10ca:	de 01       	movw	r26, r28
    10cc:	a5 5b       	subi	r26, 0xB5	; 181
    10ce:	bf 4f       	sbci	r27, 0xFF	; 255
    10d0:	fe 01       	movw	r30, r28
    10d2:	e5 5b       	subi	r30, 0xB5	; 181
    10d4:	ff 4f       	sbci	r31, 0xFF	; 255
    10d6:	80 81       	ld	r24, Z
    10d8:	91 81       	ldd	r25, Z+1	; 0x01
    10da:	01 97       	sbiw	r24, 0x01	; 1
    10dc:	11 96       	adiw	r26, 0x01	; 1
    10de:	9c 93       	st	X, r25
    10e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10e2:	fe 01       	movw	r30, r28
    10e4:	e5 5b       	subi	r30, 0xB5	; 181
    10e6:	ff 4f       	sbci	r31, 0xFF	; 255
    10e8:	80 81       	ld	r24, Z
    10ea:	91 81       	ldd	r25, Z+1	; 0x01
    10ec:	00 97       	sbiw	r24, 0x00	; 0
    10ee:	d1 f6       	brne	.-76     	; 0x10a4 <main+0x286>
    10f0:	27 c0       	rjmp	.+78     	; 0x1140 <main+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f2:	8e 01       	movw	r16, r28
    10f4:	05 5b       	subi	r16, 0xB5	; 181
    10f6:	1f 4f       	sbci	r17, 0xFF	; 255
    10f8:	fe 01       	movw	r30, r28
    10fa:	e3 5b       	subi	r30, 0xB3	; 179
    10fc:	ff 4f       	sbci	r31, 0xFF	; 255
    10fe:	60 81       	ld	r22, Z
    1100:	71 81       	ldd	r23, Z+1	; 0x01
    1102:	82 81       	ldd	r24, Z+2	; 0x02
    1104:	93 81       	ldd	r25, Z+3	; 0x03
    1106:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    110a:	dc 01       	movw	r26, r24
    110c:	cb 01       	movw	r24, r22
    110e:	f8 01       	movw	r30, r16
    1110:	91 83       	std	Z+1, r25	; 0x01
    1112:	80 83       	st	Z, r24
    1114:	de 01       	movw	r26, r28
    1116:	a9 5b       	subi	r26, 0xB9	; 185
    1118:	bf 4f       	sbci	r27, 0xFF	; 255
    111a:	fe 01       	movw	r30, r28
    111c:	e5 5b       	subi	r30, 0xB5	; 181
    111e:	ff 4f       	sbci	r31, 0xFF	; 255
    1120:	80 81       	ld	r24, Z
    1122:	91 81       	ldd	r25, Z+1	; 0x01
    1124:	8d 93       	st	X+, r24
    1126:	9c 93       	st	X, r25
    1128:	fe 01       	movw	r30, r28
    112a:	e9 5b       	subi	r30, 0xB9	; 185
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	80 81       	ld	r24, Z
    1130:	91 81       	ldd	r25, Z+1	; 0x01
    1132:	01 97       	sbiw	r24, 0x01	; 1
    1134:	f1 f7       	brne	.-4      	; 0x1132 <main+0x314>
    1136:	fe 01       	movw	r30, r28
    1138:	e9 5b       	subi	r30, 0xB9	; 185
    113a:	ff 4f       	sbci	r31, 0xFF	; 255
    113c:	91 83       	std	Z+1, r25	; 0x01
    113e:	80 83       	st	Z, r24
		_delay_ms(50);

		INDEX = ADC_f64ADCRead(ADC_CHANNEL1);
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	fe 01       	movw	r30, r28
    114c:	e1 59       	subi	r30, 0x91	; 145
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	80 83       	st	Z, r24
    1152:	91 83       	std	Z+1, r25	; 0x01
    1154:	a2 83       	std	Z+2, r26	; 0x02
    1156:	b3 83       	std	Z+3, r27	; 0x03
    1158:	fe 01       	movw	r30, r28
    115a:	ed 5b       	subi	r30, 0xBD	; 189
    115c:	ff 4f       	sbci	r31, 0xFF	; 255
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	a8 e4       	ldi	r26, 0x48	; 72
    1164:	b2 e4       	ldi	r27, 0x42	; 66
    1166:	80 83       	st	Z, r24
    1168:	91 83       	std	Z+1, r25	; 0x01
    116a:	a2 83       	std	Z+2, r26	; 0x02
    116c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    116e:	8e 01       	movw	r16, r28
    1170:	01 5c       	subi	r16, 0xC1	; 193
    1172:	1f 4f       	sbci	r17, 0xFF	; 255
    1174:	fe 01       	movw	r30, r28
    1176:	ed 5b       	subi	r30, 0xBD	; 189
    1178:	ff 4f       	sbci	r31, 0xFF	; 255
    117a:	60 81       	ld	r22, Z
    117c:	71 81       	ldd	r23, Z+1	; 0x01
    117e:	82 81       	ldd	r24, Z+2	; 0x02
    1180:	93 81       	ldd	r25, Z+3	; 0x03
    1182:	20 e0       	ldi	r18, 0x00	; 0
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	4a e7       	ldi	r20, 0x7A	; 122
    1188:	55 e4       	ldi	r21, 0x45	; 69
    118a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	f8 01       	movw	r30, r16
    1194:	80 83       	st	Z, r24
    1196:	91 83       	std	Z+1, r25	; 0x01
    1198:	a2 83       	std	Z+2, r26	; 0x02
    119a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    119c:	fe 01       	movw	r30, r28
    119e:	ff 96       	adiw	r30, 0x3f	; 63
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	40 e8       	ldi	r20, 0x80	; 128
    11ae:	5f e3       	ldi	r21, 0x3F	; 63
    11b0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    11b4:	88 23       	and	r24, r24
    11b6:	2c f4       	brge	.+10     	; 0x11c2 <main+0x3a4>
		__ticks = 1;
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	9e af       	std	Y+62, r25	; 0x3e
    11be:	8d af       	std	Y+61, r24	; 0x3d
    11c0:	46 c0       	rjmp	.+140    	; 0x124e <main+0x430>
	else if (__tmp > 65535)
    11c2:	fe 01       	movw	r30, r28
    11c4:	ff 96       	adiw	r30, 0x3f	; 63
    11c6:	60 81       	ld	r22, Z
    11c8:	71 81       	ldd	r23, Z+1	; 0x01
    11ca:	82 81       	ldd	r24, Z+2	; 0x02
    11cc:	93 81       	ldd	r25, Z+3	; 0x03
    11ce:	20 e0       	ldi	r18, 0x00	; 0
    11d0:	3f ef       	ldi	r19, 0xFF	; 255
    11d2:	4f e7       	ldi	r20, 0x7F	; 127
    11d4:	57 e4       	ldi	r21, 0x47	; 71
    11d6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    11da:	18 16       	cp	r1, r24
    11dc:	64 f5       	brge	.+88     	; 0x1236 <main+0x418>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11de:	fe 01       	movw	r30, r28
    11e0:	ed 5b       	subi	r30, 0xBD	; 189
    11e2:	ff 4f       	sbci	r31, 0xFF	; 255
    11e4:	60 81       	ld	r22, Z
    11e6:	71 81       	ldd	r23, Z+1	; 0x01
    11e8:	82 81       	ldd	r24, Z+2	; 0x02
    11ea:	93 81       	ldd	r25, Z+3	; 0x03
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	40 e2       	ldi	r20, 0x20	; 32
    11f2:	51 e4       	ldi	r21, 0x41	; 65
    11f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11f8:	dc 01       	movw	r26, r24
    11fa:	cb 01       	movw	r24, r22
    11fc:	bc 01       	movw	r22, r24
    11fe:	cd 01       	movw	r24, r26
    1200:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1204:	dc 01       	movw	r26, r24
    1206:	cb 01       	movw	r24, r22
    1208:	9e af       	std	Y+62, r25	; 0x3e
    120a:	8d af       	std	Y+61, r24	; 0x3d
    120c:	0f c0       	rjmp	.+30     	; 0x122c <main+0x40e>
    120e:	80 e9       	ldi	r24, 0x90	; 144
    1210:	91 e0       	ldi	r25, 0x01	; 1
    1212:	9c af       	std	Y+60, r25	; 0x3c
    1214:	8b af       	std	Y+59, r24	; 0x3b
    1216:	8b ad       	ldd	r24, Y+59	; 0x3b
    1218:	9c ad       	ldd	r25, Y+60	; 0x3c
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	f1 f7       	brne	.-4      	; 0x121a <main+0x3fc>
    121e:	9c af       	std	Y+60, r25	; 0x3c
    1220:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1222:	8d ad       	ldd	r24, Y+61	; 0x3d
    1224:	9e ad       	ldd	r25, Y+62	; 0x3e
    1226:	01 97       	sbiw	r24, 0x01	; 1
    1228:	9e af       	std	Y+62, r25	; 0x3e
    122a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    122c:	8d ad       	ldd	r24, Y+61	; 0x3d
    122e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1230:	00 97       	sbiw	r24, 0x00	; 0
    1232:	69 f7       	brne	.-38     	; 0x120e <main+0x3f0>
    1234:	16 c0       	rjmp	.+44     	; 0x1262 <main+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1236:	fe 01       	movw	r30, r28
    1238:	ff 96       	adiw	r30, 0x3f	; 63
    123a:	60 81       	ld	r22, Z
    123c:	71 81       	ldd	r23, Z+1	; 0x01
    123e:	82 81       	ldd	r24, Z+2	; 0x02
    1240:	93 81       	ldd	r25, Z+3	; 0x03
    1242:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1246:	dc 01       	movw	r26, r24
    1248:	cb 01       	movw	r24, r22
    124a:	9e af       	std	Y+62, r25	; 0x3e
    124c:	8d af       	std	Y+61, r24	; 0x3d
    124e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1250:	9e ad       	ldd	r25, Y+62	; 0x3e
    1252:	9a af       	std	Y+58, r25	; 0x3a
    1254:	89 af       	std	Y+57, r24	; 0x39
    1256:	89 ad       	ldd	r24, Y+57	; 0x39
    1258:	9a ad       	ldd	r25, Y+58	; 0x3a
    125a:	01 97       	sbiw	r24, 0x01	; 1
    125c:	f1 f7       	brne	.-4      	; 0x125a <main+0x43c>
    125e:	9a af       	std	Y+58, r25	; 0x3a
    1260:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(50);

		MIDDLE = ADC_f64ADCRead(ADC_CHANNEL2);
    1262:	82 e0       	ldi	r24, 0x02	; 2
    1264:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
    1268:	dc 01       	movw	r26, r24
    126a:	cb 01       	movw	r24, r22
    126c:	fe 01       	movw	r30, r28
    126e:	e5 59       	subi	r30, 0x95	; 149
    1270:	ff 4f       	sbci	r31, 0xFF	; 255
    1272:	80 83       	st	Z, r24
    1274:	91 83       	std	Z+1, r25	; 0x01
    1276:	a2 83       	std	Z+2, r26	; 0x02
    1278:	b3 83       	std	Z+3, r27	; 0x03
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	a8 e4       	ldi	r26, 0x48	; 72
    1280:	b2 e4       	ldi	r27, 0x42	; 66
    1282:	8d ab       	std	Y+53, r24	; 0x35
    1284:	9e ab       	std	Y+54, r25	; 0x36
    1286:	af ab       	std	Y+55, r26	; 0x37
    1288:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    128a:	6d a9       	ldd	r22, Y+53	; 0x35
    128c:	7e a9       	ldd	r23, Y+54	; 0x36
    128e:	8f a9       	ldd	r24, Y+55	; 0x37
    1290:	98 ad       	ldd	r25, Y+56	; 0x38
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	4a e7       	ldi	r20, 0x7A	; 122
    1298:	55 e4       	ldi	r21, 0x45	; 69
    129a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    129e:	dc 01       	movw	r26, r24
    12a0:	cb 01       	movw	r24, r22
    12a2:	89 ab       	std	Y+49, r24	; 0x31
    12a4:	9a ab       	std	Y+50, r25	; 0x32
    12a6:	ab ab       	std	Y+51, r26	; 0x33
    12a8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12aa:	69 a9       	ldd	r22, Y+49	; 0x31
    12ac:	7a a9       	ldd	r23, Y+50	; 0x32
    12ae:	8b a9       	ldd	r24, Y+51	; 0x33
    12b0:	9c a9       	ldd	r25, Y+52	; 0x34
    12b2:	20 e0       	ldi	r18, 0x00	; 0
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	40 e8       	ldi	r20, 0x80	; 128
    12b8:	5f e3       	ldi	r21, 0x3F	; 63
    12ba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    12be:	88 23       	and	r24, r24
    12c0:	2c f4       	brge	.+10     	; 0x12cc <main+0x4ae>
		__ticks = 1;
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	98 ab       	std	Y+48, r25	; 0x30
    12c8:	8f a7       	std	Y+47, r24	; 0x2f
    12ca:	3f c0       	rjmp	.+126    	; 0x134a <main+0x52c>
	else if (__tmp > 65535)
    12cc:	69 a9       	ldd	r22, Y+49	; 0x31
    12ce:	7a a9       	ldd	r23, Y+50	; 0x32
    12d0:	8b a9       	ldd	r24, Y+51	; 0x33
    12d2:	9c a9       	ldd	r25, Y+52	; 0x34
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	3f ef       	ldi	r19, 0xFF	; 255
    12d8:	4f e7       	ldi	r20, 0x7F	; 127
    12da:	57 e4       	ldi	r21, 0x47	; 71
    12dc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    12e0:	18 16       	cp	r1, r24
    12e2:	4c f5       	brge	.+82     	; 0x1336 <main+0x518>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12e4:	6d a9       	ldd	r22, Y+53	; 0x35
    12e6:	7e a9       	ldd	r23, Y+54	; 0x36
    12e8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ea:	98 ad       	ldd	r25, Y+56	; 0x38
    12ec:	20 e0       	ldi	r18, 0x00	; 0
    12ee:	30 e0       	ldi	r19, 0x00	; 0
    12f0:	40 e2       	ldi	r20, 0x20	; 32
    12f2:	51 e4       	ldi	r21, 0x41	; 65
    12f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12f8:	dc 01       	movw	r26, r24
    12fa:	cb 01       	movw	r24, r22
    12fc:	bc 01       	movw	r22, r24
    12fe:	cd 01       	movw	r24, r26
    1300:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1304:	dc 01       	movw	r26, r24
    1306:	cb 01       	movw	r24, r22
    1308:	98 ab       	std	Y+48, r25	; 0x30
    130a:	8f a7       	std	Y+47, r24	; 0x2f
    130c:	0f c0       	rjmp	.+30     	; 0x132c <main+0x50e>
    130e:	80 e9       	ldi	r24, 0x90	; 144
    1310:	91 e0       	ldi	r25, 0x01	; 1
    1312:	9e a7       	std	Y+46, r25	; 0x2e
    1314:	8d a7       	std	Y+45, r24	; 0x2d
    1316:	8d a5       	ldd	r24, Y+45	; 0x2d
    1318:	9e a5       	ldd	r25, Y+46	; 0x2e
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	f1 f7       	brne	.-4      	; 0x131a <main+0x4fc>
    131e:	9e a7       	std	Y+46, r25	; 0x2e
    1320:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1322:	8f a5       	ldd	r24, Y+47	; 0x2f
    1324:	98 a9       	ldd	r25, Y+48	; 0x30
    1326:	01 97       	sbiw	r24, 0x01	; 1
    1328:	98 ab       	std	Y+48, r25	; 0x30
    132a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    132c:	8f a5       	ldd	r24, Y+47	; 0x2f
    132e:	98 a9       	ldd	r25, Y+48	; 0x30
    1330:	00 97       	sbiw	r24, 0x00	; 0
    1332:	69 f7       	brne	.-38     	; 0x130e <main+0x4f0>
    1334:	14 c0       	rjmp	.+40     	; 0x135e <main+0x540>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1336:	69 a9       	ldd	r22, Y+49	; 0x31
    1338:	7a a9       	ldd	r23, Y+50	; 0x32
    133a:	8b a9       	ldd	r24, Y+51	; 0x33
    133c:	9c a9       	ldd	r25, Y+52	; 0x34
    133e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1342:	dc 01       	movw	r26, r24
    1344:	cb 01       	movw	r24, r22
    1346:	98 ab       	std	Y+48, r25	; 0x30
    1348:	8f a7       	std	Y+47, r24	; 0x2f
    134a:	8f a5       	ldd	r24, Y+47	; 0x2f
    134c:	98 a9       	ldd	r25, Y+48	; 0x30
    134e:	9c a7       	std	Y+44, r25	; 0x2c
    1350:	8b a7       	std	Y+43, r24	; 0x2b
    1352:	8b a5       	ldd	r24, Y+43	; 0x2b
    1354:	9c a5       	ldd	r25, Y+44	; 0x2c
    1356:	01 97       	sbiw	r24, 0x01	; 1
    1358:	f1 f7       	brne	.-4      	; 0x1356 <main+0x538>
    135a:	9c a7       	std	Y+44, r25	; 0x2c
    135c:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(50);

		RING = ADC_f64ADCRead(ADC_CHANNEL3);
    135e:	83 e0       	ldi	r24, 0x03	; 3
    1360:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
    1364:	dc 01       	movw	r26, r24
    1366:	cb 01       	movw	r24, r22
    1368:	fe 01       	movw	r30, r28
    136a:	e9 59       	subi	r30, 0x99	; 153
    136c:	ff 4f       	sbci	r31, 0xFF	; 255
    136e:	80 83       	st	Z, r24
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	a2 83       	std	Z+2, r26	; 0x02
    1374:	b3 83       	std	Z+3, r27	; 0x03
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	a8 e4       	ldi	r26, 0x48	; 72
    137c:	b2 e4       	ldi	r27, 0x42	; 66
    137e:	8f a3       	std	Y+39, r24	; 0x27
    1380:	98 a7       	std	Y+40, r25	; 0x28
    1382:	a9 a7       	std	Y+41, r26	; 0x29
    1384:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1386:	6f a1       	ldd	r22, Y+39	; 0x27
    1388:	78 a5       	ldd	r23, Y+40	; 0x28
    138a:	89 a5       	ldd	r24, Y+41	; 0x29
    138c:	9a a5       	ldd	r25, Y+42	; 0x2a
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	4a e7       	ldi	r20, 0x7A	; 122
    1394:	55 e4       	ldi	r21, 0x45	; 69
    1396:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    139a:	dc 01       	movw	r26, r24
    139c:	cb 01       	movw	r24, r22
    139e:	8b a3       	std	Y+35, r24	; 0x23
    13a0:	9c a3       	std	Y+36, r25	; 0x24
    13a2:	ad a3       	std	Y+37, r26	; 0x25
    13a4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    13a6:	6b a1       	ldd	r22, Y+35	; 0x23
    13a8:	7c a1       	ldd	r23, Y+36	; 0x24
    13aa:	8d a1       	ldd	r24, Y+37	; 0x25
    13ac:	9e a1       	ldd	r25, Y+38	; 0x26
    13ae:	20 e0       	ldi	r18, 0x00	; 0
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	40 e8       	ldi	r20, 0x80	; 128
    13b4:	5f e3       	ldi	r21, 0x3F	; 63
    13b6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    13ba:	88 23       	and	r24, r24
    13bc:	2c f4       	brge	.+10     	; 0x13c8 <main+0x5aa>
		__ticks = 1;
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	9a a3       	std	Y+34, r25	; 0x22
    13c4:	89 a3       	std	Y+33, r24	; 0x21
    13c6:	3f c0       	rjmp	.+126    	; 0x1446 <main+0x628>
	else if (__tmp > 65535)
    13c8:	6b a1       	ldd	r22, Y+35	; 0x23
    13ca:	7c a1       	ldd	r23, Y+36	; 0x24
    13cc:	8d a1       	ldd	r24, Y+37	; 0x25
    13ce:	9e a1       	ldd	r25, Y+38	; 0x26
    13d0:	20 e0       	ldi	r18, 0x00	; 0
    13d2:	3f ef       	ldi	r19, 0xFF	; 255
    13d4:	4f e7       	ldi	r20, 0x7F	; 127
    13d6:	57 e4       	ldi	r21, 0x47	; 71
    13d8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    13dc:	18 16       	cp	r1, r24
    13de:	4c f5       	brge	.+82     	; 0x1432 <main+0x614>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13e0:	6f a1       	ldd	r22, Y+39	; 0x27
    13e2:	78 a5       	ldd	r23, Y+40	; 0x28
    13e4:	89 a5       	ldd	r24, Y+41	; 0x29
    13e6:	9a a5       	ldd	r25, Y+42	; 0x2a
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	40 e2       	ldi	r20, 0x20	; 32
    13ee:	51 e4       	ldi	r21, 0x41	; 65
    13f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13f4:	dc 01       	movw	r26, r24
    13f6:	cb 01       	movw	r24, r22
    13f8:	bc 01       	movw	r22, r24
    13fa:	cd 01       	movw	r24, r26
    13fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1400:	dc 01       	movw	r26, r24
    1402:	cb 01       	movw	r24, r22
    1404:	9a a3       	std	Y+34, r25	; 0x22
    1406:	89 a3       	std	Y+33, r24	; 0x21
    1408:	0f c0       	rjmp	.+30     	; 0x1428 <main+0x60a>
    140a:	80 e9       	ldi	r24, 0x90	; 144
    140c:	91 e0       	ldi	r25, 0x01	; 1
    140e:	98 a3       	std	Y+32, r25	; 0x20
    1410:	8f 8f       	std	Y+31, r24	; 0x1f
    1412:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1414:	98 a1       	ldd	r25, Y+32	; 0x20
    1416:	01 97       	sbiw	r24, 0x01	; 1
    1418:	f1 f7       	brne	.-4      	; 0x1416 <main+0x5f8>
    141a:	98 a3       	std	Y+32, r25	; 0x20
    141c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    141e:	89 a1       	ldd	r24, Y+33	; 0x21
    1420:	9a a1       	ldd	r25, Y+34	; 0x22
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	9a a3       	std	Y+34, r25	; 0x22
    1426:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1428:	89 a1       	ldd	r24, Y+33	; 0x21
    142a:	9a a1       	ldd	r25, Y+34	; 0x22
    142c:	00 97       	sbiw	r24, 0x00	; 0
    142e:	69 f7       	brne	.-38     	; 0x140a <main+0x5ec>
    1430:	14 c0       	rjmp	.+40     	; 0x145a <main+0x63c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1432:	6b a1       	ldd	r22, Y+35	; 0x23
    1434:	7c a1       	ldd	r23, Y+36	; 0x24
    1436:	8d a1       	ldd	r24, Y+37	; 0x25
    1438:	9e a1       	ldd	r25, Y+38	; 0x26
    143a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    143e:	dc 01       	movw	r26, r24
    1440:	cb 01       	movw	r24, r22
    1442:	9a a3       	std	Y+34, r25	; 0x22
    1444:	89 a3       	std	Y+33, r24	; 0x21
    1446:	89 a1       	ldd	r24, Y+33	; 0x21
    1448:	9a a1       	ldd	r25, Y+34	; 0x22
    144a:	9e 8f       	std	Y+30, r25	; 0x1e
    144c:	8d 8f       	std	Y+29, r24	; 0x1d
    144e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1450:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1452:	01 97       	sbiw	r24, 0x01	; 1
    1454:	f1 f7       	brne	.-4      	; 0x1452 <main+0x634>
    1456:	9e 8f       	std	Y+30, r25	; 0x1e
    1458:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(50);

		PINKY = ADC_f64ADCRead(ADC_CHANNEL4);
    145a:	84 e0       	ldi	r24, 0x04	; 4
    145c:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
    1460:	dc 01       	movw	r26, r24
    1462:	cb 01       	movw	r24, r22
    1464:	fe 01       	movw	r30, r28
    1466:	ed 59       	subi	r30, 0x9D	; 157
    1468:	ff 4f       	sbci	r31, 0xFF	; 255
    146a:	80 83       	st	Z, r24
    146c:	91 83       	std	Z+1, r25	; 0x01
    146e:	a2 83       	std	Z+2, r26	; 0x02
    1470:	b3 83       	std	Z+3, r27	; 0x03
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	a8 e4       	ldi	r26, 0x48	; 72
    1478:	b2 e4       	ldi	r27, 0x42	; 66
    147a:	89 8f       	std	Y+25, r24	; 0x19
    147c:	9a 8f       	std	Y+26, r25	; 0x1a
    147e:	ab 8f       	std	Y+27, r26	; 0x1b
    1480:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1482:	69 8d       	ldd	r22, Y+25	; 0x19
    1484:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1486:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1488:	9c 8d       	ldd	r25, Y+28	; 0x1c
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	4a e7       	ldi	r20, 0x7A	; 122
    1490:	55 e4       	ldi	r21, 0x45	; 69
    1492:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1496:	dc 01       	movw	r26, r24
    1498:	cb 01       	movw	r24, r22
    149a:	8d 8b       	std	Y+21, r24	; 0x15
    149c:	9e 8b       	std	Y+22, r25	; 0x16
    149e:	af 8b       	std	Y+23, r26	; 0x17
    14a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14a2:	6d 89       	ldd	r22, Y+21	; 0x15
    14a4:	7e 89       	ldd	r23, Y+22	; 0x16
    14a6:	8f 89       	ldd	r24, Y+23	; 0x17
    14a8:	98 8d       	ldd	r25, Y+24	; 0x18
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	5f e3       	ldi	r21, 0x3F	; 63
    14b2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	2c f4       	brge	.+10     	; 0x14c4 <main+0x6a6>
		__ticks = 1;
    14ba:	81 e0       	ldi	r24, 0x01	; 1
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	9c 8b       	std	Y+20, r25	; 0x14
    14c0:	8b 8b       	std	Y+19, r24	; 0x13
    14c2:	3f c0       	rjmp	.+126    	; 0x1542 <main+0x724>
	else if (__tmp > 65535)
    14c4:	6d 89       	ldd	r22, Y+21	; 0x15
    14c6:	7e 89       	ldd	r23, Y+22	; 0x16
    14c8:	8f 89       	ldd	r24, Y+23	; 0x17
    14ca:	98 8d       	ldd	r25, Y+24	; 0x18
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	3f ef       	ldi	r19, 0xFF	; 255
    14d0:	4f e7       	ldi	r20, 0x7F	; 127
    14d2:	57 e4       	ldi	r21, 0x47	; 71
    14d4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    14d8:	18 16       	cp	r1, r24
    14da:	4c f5       	brge	.+82     	; 0x152e <main+0x710>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14dc:	69 8d       	ldd	r22, Y+25	; 0x19
    14de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	40 e2       	ldi	r20, 0x20	; 32
    14ea:	51 e4       	ldi	r21, 0x41	; 65
    14ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14f0:	dc 01       	movw	r26, r24
    14f2:	cb 01       	movw	r24, r22
    14f4:	bc 01       	movw	r22, r24
    14f6:	cd 01       	movw	r24, r26
    14f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14fc:	dc 01       	movw	r26, r24
    14fe:	cb 01       	movw	r24, r22
    1500:	9c 8b       	std	Y+20, r25	; 0x14
    1502:	8b 8b       	std	Y+19, r24	; 0x13
    1504:	0f c0       	rjmp	.+30     	; 0x1524 <main+0x706>
    1506:	80 e9       	ldi	r24, 0x90	; 144
    1508:	91 e0       	ldi	r25, 0x01	; 1
    150a:	9a 8b       	std	Y+18, r25	; 0x12
    150c:	89 8b       	std	Y+17, r24	; 0x11
    150e:	89 89       	ldd	r24, Y+17	; 0x11
    1510:	9a 89       	ldd	r25, Y+18	; 0x12
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <main+0x6f4>
    1516:	9a 8b       	std	Y+18, r25	; 0x12
    1518:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    151a:	8b 89       	ldd	r24, Y+19	; 0x13
    151c:	9c 89       	ldd	r25, Y+20	; 0x14
    151e:	01 97       	sbiw	r24, 0x01	; 1
    1520:	9c 8b       	std	Y+20, r25	; 0x14
    1522:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1524:	8b 89       	ldd	r24, Y+19	; 0x13
    1526:	9c 89       	ldd	r25, Y+20	; 0x14
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	69 f7       	brne	.-38     	; 0x1506 <main+0x6e8>
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <main+0x738>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    152e:	6d 89       	ldd	r22, Y+21	; 0x15
    1530:	7e 89       	ldd	r23, Y+22	; 0x16
    1532:	8f 89       	ldd	r24, Y+23	; 0x17
    1534:	98 8d       	ldd	r25, Y+24	; 0x18
    1536:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	9c 8b       	std	Y+20, r25	; 0x14
    1540:	8b 8b       	std	Y+19, r24	; 0x13
    1542:	8b 89       	ldd	r24, Y+19	; 0x13
    1544:	9c 89       	ldd	r25, Y+20	; 0x14
    1546:	98 8b       	std	Y+16, r25	; 0x10
    1548:	8f 87       	std	Y+15, r24	; 0x0f
    154a:	8f 85       	ldd	r24, Y+15	; 0x0f
    154c:	98 89       	ldd	r25, Y+16	; 0x10
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	f1 f7       	brne	.-4      	; 0x154e <main+0x730>
    1552:	98 8b       	std	Y+16, r25	; 0x10
    1554:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(50);

		//To check for the sensors condition and display the right message

		if	   (THUMB Hold && INDEX Open && MIDDLE Hold && RING Hold && PINKY Hold)
    1556:	cc 56       	subi	r28, 0x6C	; 108
    1558:	df 4f       	sbci	r29, 0xFF	; 255
    155a:	18 82       	st	Y, r1
    155c:	c4 59       	subi	r28, 0x94	; 148
    155e:	d0 40       	sbci	r29, 0x00	; 0
    1560:	fe 01       	movw	r30, r28
    1562:	ed 58       	subi	r30, 0x8D	; 141
    1564:	ff 4f       	sbci	r31, 0xFF	; 255
    1566:	60 81       	ld	r22, Z
    1568:	71 81       	ldd	r23, Z+1	; 0x01
    156a:	82 81       	ldd	r24, Z+2	; 0x02
    156c:	93 81       	ldd	r25, Z+3	; 0x03
    156e:	20 e0       	ldi	r18, 0x00	; 0
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	40 e2       	ldi	r20, 0x20	; 32
    1574:	50 e4       	ldi	r21, 0x40	; 64
    1576:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    157a:	18 16       	cp	r1, r24
    157c:	34 f4       	brge	.+12     	; 0x158a <main+0x76c>
    157e:	f1 e0       	ldi	r31, 0x01	; 1
    1580:	cc 56       	subi	r28, 0x6C	; 108
    1582:	df 4f       	sbci	r29, 0xFF	; 255
    1584:	f8 83       	st	Y, r31
    1586:	c4 59       	subi	r28, 0x94	; 148
    1588:	d0 40       	sbci	r29, 0x00	; 0
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	cc 56       	subi	r28, 0x6C	; 108
    158e:	df 4f       	sbci	r29, 0xFF	; 255
    1590:	98 81       	ld	r25, Y
    1592:	c4 59       	subi	r28, 0x94	; 148
    1594:	d0 40       	sbci	r29, 0x00	; 0
    1596:	89 27       	eor	r24, r25
    1598:	88 23       	and	r24, r24
    159a:	09 f0       	breq	.+2      	; 0x159e <main+0x780>
    159c:	9b c0       	rjmp	.+310    	; 0x16d4 <main+0x8b6>
    159e:	cd 56       	subi	r28, 0x6D	; 109
    15a0:	df 4f       	sbci	r29, 0xFF	; 255
    15a2:	18 82       	st	Y, r1
    15a4:	c3 59       	subi	r28, 0x93	; 147
    15a6:	d0 40       	sbci	r29, 0x00	; 0
    15a8:	fe 01       	movw	r30, r28
    15aa:	e1 59       	subi	r30, 0x91	; 145
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	40 e2       	ldi	r20, 0x20	; 32
    15bc:	50 e4       	ldi	r21, 0x40	; 64
    15be:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    15c2:	88 23       	and	r24, r24
    15c4:	34 f4       	brge	.+12     	; 0x15d2 <main+0x7b4>
    15c6:	e1 e0       	ldi	r30, 0x01	; 1
    15c8:	cd 56       	subi	r28, 0x6D	; 109
    15ca:	df 4f       	sbci	r29, 0xFF	; 255
    15cc:	e8 83       	st	Y, r30
    15ce:	c3 59       	subi	r28, 0x93	; 147
    15d0:	d0 40       	sbci	r29, 0x00	; 0
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	cd 56       	subi	r28, 0x6D	; 109
    15d6:	df 4f       	sbci	r29, 0xFF	; 255
    15d8:	f8 81       	ld	r31, Y
    15da:	c3 59       	subi	r28, 0x93	; 147
    15dc:	d0 40       	sbci	r29, 0x00	; 0
    15de:	8f 27       	eor	r24, r31
    15e0:	88 23       	and	r24, r24
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <main+0x7c8>
    15e4:	77 c0       	rjmp	.+238    	; 0x16d4 <main+0x8b6>
    15e6:	ce 56       	subi	r28, 0x6E	; 110
    15e8:	df 4f       	sbci	r29, 0xFF	; 255
    15ea:	18 82       	st	Y, r1
    15ec:	c2 59       	subi	r28, 0x92	; 146
    15ee:	d0 40       	sbci	r29, 0x00	; 0
    15f0:	fe 01       	movw	r30, r28
    15f2:	e5 59       	subi	r30, 0x95	; 149
    15f4:	ff 4f       	sbci	r31, 0xFF	; 255
    15f6:	60 81       	ld	r22, Z
    15f8:	71 81       	ldd	r23, Z+1	; 0x01
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	40 e2       	ldi	r20, 0x20	; 32
    1604:	50 e4       	ldi	r21, 0x40	; 64
    1606:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    160a:	18 16       	cp	r1, r24
    160c:	34 f4       	brge	.+12     	; 0x161a <main+0x7fc>
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	ce 56       	subi	r28, 0x6E	; 110
    1612:	df 4f       	sbci	r29, 0xFF	; 255
    1614:	88 83       	st	Y, r24
    1616:	c2 59       	subi	r28, 0x92	; 146
    1618:	d0 40       	sbci	r29, 0x00	; 0
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	ce 56       	subi	r28, 0x6E	; 110
    161e:	df 4f       	sbci	r29, 0xFF	; 255
    1620:	98 81       	ld	r25, Y
    1622:	c2 59       	subi	r28, 0x92	; 146
    1624:	d0 40       	sbci	r29, 0x00	; 0
    1626:	89 27       	eor	r24, r25
    1628:	88 23       	and	r24, r24
    162a:	09 f0       	breq	.+2      	; 0x162e <main+0x810>
    162c:	53 c0       	rjmp	.+166    	; 0x16d4 <main+0x8b6>
    162e:	cf 56       	subi	r28, 0x6F	; 111
    1630:	df 4f       	sbci	r29, 0xFF	; 255
    1632:	18 82       	st	Y, r1
    1634:	c1 59       	subi	r28, 0x91	; 145
    1636:	d0 40       	sbci	r29, 0x00	; 0
    1638:	fe 01       	movw	r30, r28
    163a:	e9 59       	subi	r30, 0x99	; 153
    163c:	ff 4f       	sbci	r31, 0xFF	; 255
    163e:	60 81       	ld	r22, Z
    1640:	71 81       	ldd	r23, Z+1	; 0x01
    1642:	82 81       	ldd	r24, Z+2	; 0x02
    1644:	93 81       	ldd	r25, Z+3	; 0x03
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	40 e2       	ldi	r20, 0x20	; 32
    164c:	50 e4       	ldi	r21, 0x40	; 64
    164e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1652:	18 16       	cp	r1, r24
    1654:	34 f4       	brge	.+12     	; 0x1662 <main+0x844>
    1656:	e1 e0       	ldi	r30, 0x01	; 1
    1658:	cf 56       	subi	r28, 0x6F	; 111
    165a:	df 4f       	sbci	r29, 0xFF	; 255
    165c:	e8 83       	st	Y, r30
    165e:	c1 59       	subi	r28, 0x91	; 145
    1660:	d0 40       	sbci	r29, 0x00	; 0
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	cf 56       	subi	r28, 0x6F	; 111
    1666:	df 4f       	sbci	r29, 0xFF	; 255
    1668:	f8 81       	ld	r31, Y
    166a:	c1 59       	subi	r28, 0x91	; 145
    166c:	d0 40       	sbci	r29, 0x00	; 0
    166e:	8f 27       	eor	r24, r31
    1670:	88 23       	and	r24, r24
    1672:	81 f5       	brne	.+96     	; 0x16d4 <main+0x8b6>
    1674:	c0 57       	subi	r28, 0x70	; 112
    1676:	df 4f       	sbci	r29, 0xFF	; 255
    1678:	18 82       	st	Y, r1
    167a:	c0 59       	subi	r28, 0x90	; 144
    167c:	d0 40       	sbci	r29, 0x00	; 0
    167e:	fe 01       	movw	r30, r28
    1680:	ed 59       	subi	r30, 0x9D	; 157
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	60 81       	ld	r22, Z
    1686:	71 81       	ldd	r23, Z+1	; 0x01
    1688:	82 81       	ldd	r24, Z+2	; 0x02
    168a:	93 81       	ldd	r25, Z+3	; 0x03
    168c:	20 e0       	ldi	r18, 0x00	; 0
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	40 e2       	ldi	r20, 0x20	; 32
    1692:	50 e4       	ldi	r21, 0x40	; 64
    1694:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1698:	18 16       	cp	r1, r24
    169a:	34 f4       	brge	.+12     	; 0x16a8 <main+0x88a>
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	c0 57       	subi	r28, 0x70	; 112
    16a0:	df 4f       	sbci	r29, 0xFF	; 255
    16a2:	88 83       	st	Y, r24
    16a4:	c0 59       	subi	r28, 0x90	; 144
    16a6:	d0 40       	sbci	r29, 0x00	; 0
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	c0 57       	subi	r28, 0x70	; 112
    16ac:	df 4f       	sbci	r29, 0xFF	; 255
    16ae:	98 81       	ld	r25, Y
    16b0:	c0 59       	subi	r28, 0x90	; 144
    16b2:	d0 40       	sbci	r29, 0x00	; 0
    16b4:	89 27       	eor	r24, r25
    16b6:	88 23       	and	r24, r24
    16b8:	69 f4       	brne	.+26     	; 0x16d4 <main+0x8b6>
		{
			Lcd_vidDisplayStr("       You       ");
    16ba:	80 e6       	ldi	r24, 0x60	; 96
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    16c2:	81 e0       	ldi	r24, 0x01	; 1
    16c4:	60 e0       	ldi	r22, 0x00	; 0
    16c6:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    16ca:	82 e7       	ldi	r24, 0x72	; 114
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    16d2:	e3 c3       	rjmp	.+1990   	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Hold && INDEX Open && MIDDLE Open && RING Hold && PINKY Hold)
    16d4:	c1 57       	subi	r28, 0x71	; 113
    16d6:	df 4f       	sbci	r29, 0xFF	; 255
    16d8:	18 82       	st	Y, r1
    16da:	cf 58       	subi	r28, 0x8F	; 143
    16dc:	d0 40       	sbci	r29, 0x00	; 0
    16de:	fe 01       	movw	r30, r28
    16e0:	ed 58       	subi	r30, 0x8D	; 141
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	60 81       	ld	r22, Z
    16e6:	71 81       	ldd	r23, Z+1	; 0x01
    16e8:	82 81       	ldd	r24, Z+2	; 0x02
    16ea:	93 81       	ldd	r25, Z+3	; 0x03
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e2       	ldi	r20, 0x20	; 32
    16f2:	50 e4       	ldi	r21, 0x40	; 64
    16f4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16f8:	18 16       	cp	r1, r24
    16fa:	34 f4       	brge	.+12     	; 0x1708 <main+0x8ea>
    16fc:	e1 e0       	ldi	r30, 0x01	; 1
    16fe:	c1 57       	subi	r28, 0x71	; 113
    1700:	df 4f       	sbci	r29, 0xFF	; 255
    1702:	e8 83       	st	Y, r30
    1704:	cf 58       	subi	r28, 0x8F	; 143
    1706:	d0 40       	sbci	r29, 0x00	; 0
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	c1 57       	subi	r28, 0x71	; 113
    170c:	df 4f       	sbci	r29, 0xFF	; 255
    170e:	f8 81       	ld	r31, Y
    1710:	cf 58       	subi	r28, 0x8F	; 143
    1712:	d0 40       	sbci	r29, 0x00	; 0
    1714:	8f 27       	eor	r24, r31
    1716:	88 23       	and	r24, r24
    1718:	09 f0       	breq	.+2      	; 0x171c <main+0x8fe>
    171a:	9b c0       	rjmp	.+310    	; 0x1852 <main+0xa34>
    171c:	c2 57       	subi	r28, 0x72	; 114
    171e:	df 4f       	sbci	r29, 0xFF	; 255
    1720:	18 82       	st	Y, r1
    1722:	ce 58       	subi	r28, 0x8E	; 142
    1724:	d0 40       	sbci	r29, 0x00	; 0
    1726:	fe 01       	movw	r30, r28
    1728:	e1 59       	subi	r30, 0x91	; 145
    172a:	ff 4f       	sbci	r31, 0xFF	; 255
    172c:	60 81       	ld	r22, Z
    172e:	71 81       	ldd	r23, Z+1	; 0x01
    1730:	82 81       	ldd	r24, Z+2	; 0x02
    1732:	93 81       	ldd	r25, Z+3	; 0x03
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	40 e2       	ldi	r20, 0x20	; 32
    173a:	50 e4       	ldi	r21, 0x40	; 64
    173c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1740:	88 23       	and	r24, r24
    1742:	34 f4       	brge	.+12     	; 0x1750 <main+0x932>
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	c2 57       	subi	r28, 0x72	; 114
    1748:	df 4f       	sbci	r29, 0xFF	; 255
    174a:	88 83       	st	Y, r24
    174c:	ce 58       	subi	r28, 0x8E	; 142
    174e:	d0 40       	sbci	r29, 0x00	; 0
    1750:	81 e0       	ldi	r24, 0x01	; 1
    1752:	c2 57       	subi	r28, 0x72	; 114
    1754:	df 4f       	sbci	r29, 0xFF	; 255
    1756:	98 81       	ld	r25, Y
    1758:	ce 58       	subi	r28, 0x8E	; 142
    175a:	d0 40       	sbci	r29, 0x00	; 0
    175c:	89 27       	eor	r24, r25
    175e:	88 23       	and	r24, r24
    1760:	09 f0       	breq	.+2      	; 0x1764 <main+0x946>
    1762:	77 c0       	rjmp	.+238    	; 0x1852 <main+0xa34>
    1764:	c3 57       	subi	r28, 0x73	; 115
    1766:	df 4f       	sbci	r29, 0xFF	; 255
    1768:	18 82       	st	Y, r1
    176a:	cd 58       	subi	r28, 0x8D	; 141
    176c:	d0 40       	sbci	r29, 0x00	; 0
    176e:	fe 01       	movw	r30, r28
    1770:	e5 59       	subi	r30, 0x95	; 149
    1772:	ff 4f       	sbci	r31, 0xFF	; 255
    1774:	60 81       	ld	r22, Z
    1776:	71 81       	ldd	r23, Z+1	; 0x01
    1778:	82 81       	ldd	r24, Z+2	; 0x02
    177a:	93 81       	ldd	r25, Z+3	; 0x03
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e2       	ldi	r20, 0x20	; 32
    1782:	50 e4       	ldi	r21, 0x40	; 64
    1784:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1788:	88 23       	and	r24, r24
    178a:	34 f4       	brge	.+12     	; 0x1798 <main+0x97a>
    178c:	e1 e0       	ldi	r30, 0x01	; 1
    178e:	c3 57       	subi	r28, 0x73	; 115
    1790:	df 4f       	sbci	r29, 0xFF	; 255
    1792:	e8 83       	st	Y, r30
    1794:	cd 58       	subi	r28, 0x8D	; 141
    1796:	d0 40       	sbci	r29, 0x00	; 0
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	c3 57       	subi	r28, 0x73	; 115
    179c:	df 4f       	sbci	r29, 0xFF	; 255
    179e:	f8 81       	ld	r31, Y
    17a0:	cd 58       	subi	r28, 0x8D	; 141
    17a2:	d0 40       	sbci	r29, 0x00	; 0
    17a4:	8f 27       	eor	r24, r31
    17a6:	88 23       	and	r24, r24
    17a8:	09 f0       	breq	.+2      	; 0x17ac <main+0x98e>
    17aa:	53 c0       	rjmp	.+166    	; 0x1852 <main+0xa34>
    17ac:	c4 57       	subi	r28, 0x74	; 116
    17ae:	df 4f       	sbci	r29, 0xFF	; 255
    17b0:	18 82       	st	Y, r1
    17b2:	cc 58       	subi	r28, 0x8C	; 140
    17b4:	d0 40       	sbci	r29, 0x00	; 0
    17b6:	fe 01       	movw	r30, r28
    17b8:	e9 59       	subi	r30, 0x99	; 153
    17ba:	ff 4f       	sbci	r31, 0xFF	; 255
    17bc:	60 81       	ld	r22, Z
    17be:	71 81       	ldd	r23, Z+1	; 0x01
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	93 81       	ldd	r25, Z+3	; 0x03
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	40 e2       	ldi	r20, 0x20	; 32
    17ca:	50 e4       	ldi	r21, 0x40	; 64
    17cc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17d0:	18 16       	cp	r1, r24
    17d2:	34 f4       	brge	.+12     	; 0x17e0 <main+0x9c2>
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	c4 57       	subi	r28, 0x74	; 116
    17d8:	df 4f       	sbci	r29, 0xFF	; 255
    17da:	88 83       	st	Y, r24
    17dc:	cc 58       	subi	r28, 0x8C	; 140
    17de:	d0 40       	sbci	r29, 0x00	; 0
    17e0:	81 e0       	ldi	r24, 0x01	; 1
    17e2:	c4 57       	subi	r28, 0x74	; 116
    17e4:	df 4f       	sbci	r29, 0xFF	; 255
    17e6:	98 81       	ld	r25, Y
    17e8:	cc 58       	subi	r28, 0x8C	; 140
    17ea:	d0 40       	sbci	r29, 0x00	; 0
    17ec:	89 27       	eor	r24, r25
    17ee:	88 23       	and	r24, r24
    17f0:	81 f5       	brne	.+96     	; 0x1852 <main+0xa34>
    17f2:	c5 57       	subi	r28, 0x75	; 117
    17f4:	df 4f       	sbci	r29, 0xFF	; 255
    17f6:	18 82       	st	Y, r1
    17f8:	cb 58       	subi	r28, 0x8B	; 139
    17fa:	d0 40       	sbci	r29, 0x00	; 0
    17fc:	fe 01       	movw	r30, r28
    17fe:	ed 59       	subi	r30, 0x9D	; 157
    1800:	ff 4f       	sbci	r31, 0xFF	; 255
    1802:	60 81       	ld	r22, Z
    1804:	71 81       	ldd	r23, Z+1	; 0x01
    1806:	82 81       	ldd	r24, Z+2	; 0x02
    1808:	93 81       	ldd	r25, Z+3	; 0x03
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	40 e2       	ldi	r20, 0x20	; 32
    1810:	50 e4       	ldi	r21, 0x40	; 64
    1812:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1816:	18 16       	cp	r1, r24
    1818:	34 f4       	brge	.+12     	; 0x1826 <main+0xa08>
    181a:	e1 e0       	ldi	r30, 0x01	; 1
    181c:	c5 57       	subi	r28, 0x75	; 117
    181e:	df 4f       	sbci	r29, 0xFF	; 255
    1820:	e8 83       	st	Y, r30
    1822:	cb 58       	subi	r28, 0x8B	; 139
    1824:	d0 40       	sbci	r29, 0x00	; 0
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	c5 57       	subi	r28, 0x75	; 117
    182a:	df 4f       	sbci	r29, 0xFF	; 255
    182c:	f8 81       	ld	r31, Y
    182e:	cb 58       	subi	r28, 0x8B	; 139
    1830:	d0 40       	sbci	r29, 0x00	; 0
    1832:	8f 27       	eor	r24, r31
    1834:	88 23       	and	r24, r24
    1836:	69 f4       	brne	.+26     	; 0x1852 <main+0xa34>
		{
			Lcd_vidDisplayStr("I am watching you");
    1838:	85 e8       	ldi	r24, 0x85	; 133
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    1840:	81 e0       	ldi	r24, 0x01	; 1
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    1848:	82 e7       	ldi	r24, 0x72	; 114
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    1850:	24 c3       	rjmp	.+1608   	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Open && INDEX Open && MIDDLE Hold && RING Hold && PINKY Open)
    1852:	c6 57       	subi	r28, 0x76	; 118
    1854:	df 4f       	sbci	r29, 0xFF	; 255
    1856:	18 82       	st	Y, r1
    1858:	ca 58       	subi	r28, 0x8A	; 138
    185a:	d0 40       	sbci	r29, 0x00	; 0
    185c:	fe 01       	movw	r30, r28
    185e:	ed 58       	subi	r30, 0x8D	; 141
    1860:	ff 4f       	sbci	r31, 0xFF	; 255
    1862:	60 81       	ld	r22, Z
    1864:	71 81       	ldd	r23, Z+1	; 0x01
    1866:	82 81       	ldd	r24, Z+2	; 0x02
    1868:	93 81       	ldd	r25, Z+3	; 0x03
    186a:	20 e0       	ldi	r18, 0x00	; 0
    186c:	30 e0       	ldi	r19, 0x00	; 0
    186e:	40 e2       	ldi	r20, 0x20	; 32
    1870:	50 e4       	ldi	r21, 0x40	; 64
    1872:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1876:	88 23       	and	r24, r24
    1878:	34 f4       	brge	.+12     	; 0x1886 <main+0xa68>
    187a:	81 e0       	ldi	r24, 0x01	; 1
    187c:	c6 57       	subi	r28, 0x76	; 118
    187e:	df 4f       	sbci	r29, 0xFF	; 255
    1880:	88 83       	st	Y, r24
    1882:	ca 58       	subi	r28, 0x8A	; 138
    1884:	d0 40       	sbci	r29, 0x00	; 0
    1886:	81 e0       	ldi	r24, 0x01	; 1
    1888:	c6 57       	subi	r28, 0x76	; 118
    188a:	df 4f       	sbci	r29, 0xFF	; 255
    188c:	98 81       	ld	r25, Y
    188e:	ca 58       	subi	r28, 0x8A	; 138
    1890:	d0 40       	sbci	r29, 0x00	; 0
    1892:	89 27       	eor	r24, r25
    1894:	88 23       	and	r24, r24
    1896:	09 f0       	breq	.+2      	; 0x189a <main+0xa7c>
    1898:	9b c0       	rjmp	.+310    	; 0x19d0 <main+0xbb2>
    189a:	c7 57       	subi	r28, 0x77	; 119
    189c:	df 4f       	sbci	r29, 0xFF	; 255
    189e:	18 82       	st	Y, r1
    18a0:	c9 58       	subi	r28, 0x89	; 137
    18a2:	d0 40       	sbci	r29, 0x00	; 0
    18a4:	fe 01       	movw	r30, r28
    18a6:	e1 59       	subi	r30, 0x91	; 145
    18a8:	ff 4f       	sbci	r31, 0xFF	; 255
    18aa:	60 81       	ld	r22, Z
    18ac:	71 81       	ldd	r23, Z+1	; 0x01
    18ae:	82 81       	ldd	r24, Z+2	; 0x02
    18b0:	93 81       	ldd	r25, Z+3	; 0x03
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	40 e2       	ldi	r20, 0x20	; 32
    18b8:	50 e4       	ldi	r21, 0x40	; 64
    18ba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    18be:	88 23       	and	r24, r24
    18c0:	34 f4       	brge	.+12     	; 0x18ce <main+0xab0>
    18c2:	e1 e0       	ldi	r30, 0x01	; 1
    18c4:	c7 57       	subi	r28, 0x77	; 119
    18c6:	df 4f       	sbci	r29, 0xFF	; 255
    18c8:	e8 83       	st	Y, r30
    18ca:	c9 58       	subi	r28, 0x89	; 137
    18cc:	d0 40       	sbci	r29, 0x00	; 0
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	c7 57       	subi	r28, 0x77	; 119
    18d2:	df 4f       	sbci	r29, 0xFF	; 255
    18d4:	f8 81       	ld	r31, Y
    18d6:	c9 58       	subi	r28, 0x89	; 137
    18d8:	d0 40       	sbci	r29, 0x00	; 0
    18da:	8f 27       	eor	r24, r31
    18dc:	88 23       	and	r24, r24
    18de:	09 f0       	breq	.+2      	; 0x18e2 <main+0xac4>
    18e0:	77 c0       	rjmp	.+238    	; 0x19d0 <main+0xbb2>
    18e2:	c8 57       	subi	r28, 0x78	; 120
    18e4:	df 4f       	sbci	r29, 0xFF	; 255
    18e6:	18 82       	st	Y, r1
    18e8:	c8 58       	subi	r28, 0x88	; 136
    18ea:	d0 40       	sbci	r29, 0x00	; 0
    18ec:	fe 01       	movw	r30, r28
    18ee:	e5 59       	subi	r30, 0x95	; 149
    18f0:	ff 4f       	sbci	r31, 0xFF	; 255
    18f2:	60 81       	ld	r22, Z
    18f4:	71 81       	ldd	r23, Z+1	; 0x01
    18f6:	82 81       	ldd	r24, Z+2	; 0x02
    18f8:	93 81       	ldd	r25, Z+3	; 0x03
    18fa:	20 e0       	ldi	r18, 0x00	; 0
    18fc:	30 e0       	ldi	r19, 0x00	; 0
    18fe:	40 e2       	ldi	r20, 0x20	; 32
    1900:	50 e4       	ldi	r21, 0x40	; 64
    1902:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1906:	18 16       	cp	r1, r24
    1908:	34 f4       	brge	.+12     	; 0x1916 <main+0xaf8>
    190a:	81 e0       	ldi	r24, 0x01	; 1
    190c:	c8 57       	subi	r28, 0x78	; 120
    190e:	df 4f       	sbci	r29, 0xFF	; 255
    1910:	88 83       	st	Y, r24
    1912:	c8 58       	subi	r28, 0x88	; 136
    1914:	d0 40       	sbci	r29, 0x00	; 0
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	c8 57       	subi	r28, 0x78	; 120
    191a:	df 4f       	sbci	r29, 0xFF	; 255
    191c:	98 81       	ld	r25, Y
    191e:	c8 58       	subi	r28, 0x88	; 136
    1920:	d0 40       	sbci	r29, 0x00	; 0
    1922:	89 27       	eor	r24, r25
    1924:	88 23       	and	r24, r24
    1926:	09 f0       	breq	.+2      	; 0x192a <main+0xb0c>
    1928:	53 c0       	rjmp	.+166    	; 0x19d0 <main+0xbb2>
    192a:	c9 57       	subi	r28, 0x79	; 121
    192c:	df 4f       	sbci	r29, 0xFF	; 255
    192e:	18 82       	st	Y, r1
    1930:	c7 58       	subi	r28, 0x87	; 135
    1932:	d0 40       	sbci	r29, 0x00	; 0
    1934:	fe 01       	movw	r30, r28
    1936:	e9 59       	subi	r30, 0x99	; 153
    1938:	ff 4f       	sbci	r31, 0xFF	; 255
    193a:	60 81       	ld	r22, Z
    193c:	71 81       	ldd	r23, Z+1	; 0x01
    193e:	82 81       	ldd	r24, Z+2	; 0x02
    1940:	93 81       	ldd	r25, Z+3	; 0x03
    1942:	20 e0       	ldi	r18, 0x00	; 0
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	40 e2       	ldi	r20, 0x20	; 32
    1948:	50 e4       	ldi	r21, 0x40	; 64
    194a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    194e:	18 16       	cp	r1, r24
    1950:	34 f4       	brge	.+12     	; 0x195e <main+0xb40>
    1952:	e1 e0       	ldi	r30, 0x01	; 1
    1954:	c9 57       	subi	r28, 0x79	; 121
    1956:	df 4f       	sbci	r29, 0xFF	; 255
    1958:	e8 83       	st	Y, r30
    195a:	c7 58       	subi	r28, 0x87	; 135
    195c:	d0 40       	sbci	r29, 0x00	; 0
    195e:	81 e0       	ldi	r24, 0x01	; 1
    1960:	c9 57       	subi	r28, 0x79	; 121
    1962:	df 4f       	sbci	r29, 0xFF	; 255
    1964:	f8 81       	ld	r31, Y
    1966:	c7 58       	subi	r28, 0x87	; 135
    1968:	d0 40       	sbci	r29, 0x00	; 0
    196a:	8f 27       	eor	r24, r31
    196c:	88 23       	and	r24, r24
    196e:	81 f5       	brne	.+96     	; 0x19d0 <main+0xbb2>
    1970:	ca 57       	subi	r28, 0x7A	; 122
    1972:	df 4f       	sbci	r29, 0xFF	; 255
    1974:	18 82       	st	Y, r1
    1976:	c6 58       	subi	r28, 0x86	; 134
    1978:	d0 40       	sbci	r29, 0x00	; 0
    197a:	fe 01       	movw	r30, r28
    197c:	ed 59       	subi	r30, 0x9D	; 157
    197e:	ff 4f       	sbci	r31, 0xFF	; 255
    1980:	60 81       	ld	r22, Z
    1982:	71 81       	ldd	r23, Z+1	; 0x01
    1984:	82 81       	ldd	r24, Z+2	; 0x02
    1986:	93 81       	ldd	r25, Z+3	; 0x03
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	40 e2       	ldi	r20, 0x20	; 32
    198e:	50 e4       	ldi	r21, 0x40	; 64
    1990:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1994:	88 23       	and	r24, r24
    1996:	34 f4       	brge	.+12     	; 0x19a4 <main+0xb86>
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	ca 57       	subi	r28, 0x7A	; 122
    199c:	df 4f       	sbci	r29, 0xFF	; 255
    199e:	88 83       	st	Y, r24
    19a0:	c6 58       	subi	r28, 0x86	; 134
    19a2:	d0 40       	sbci	r29, 0x00	; 0
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	ca 57       	subi	r28, 0x7A	; 122
    19a8:	df 4f       	sbci	r29, 0xFF	; 255
    19aa:	98 81       	ld	r25, Y
    19ac:	c6 58       	subi	r28, 0x86	; 134
    19ae:	d0 40       	sbci	r29, 0x00	; 0
    19b0:	89 27       	eor	r24, r25
    19b2:	88 23       	and	r24, r24
    19b4:	69 f4       	brne	.+26     	; 0x19d0 <main+0xbb2>
		{
			Lcd_vidDisplayStr("    I love you    ");
    19b6:	87 e9       	ldi	r24, 0x97	; 151
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    19be:	81 e0       	ldi	r24, 0x01	; 1
    19c0:	60 e0       	ldi	r22, 0x00	; 0
    19c2:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    19c6:	82 e7       	ldi	r24, 0x72	; 114
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    19ce:	65 c2       	rjmp	.+1226   	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Open && INDEX Open && MIDDLE Open && RING Hold && PINKY Open)
    19d0:	cb 57       	subi	r28, 0x7B	; 123
    19d2:	df 4f       	sbci	r29, 0xFF	; 255
    19d4:	18 82       	st	Y, r1
    19d6:	c5 58       	subi	r28, 0x85	; 133
    19d8:	d0 40       	sbci	r29, 0x00	; 0
    19da:	fe 01       	movw	r30, r28
    19dc:	ed 58       	subi	r30, 0x8D	; 141
    19de:	ff 4f       	sbci	r31, 0xFF	; 255
    19e0:	60 81       	ld	r22, Z
    19e2:	71 81       	ldd	r23, Z+1	; 0x01
    19e4:	82 81       	ldd	r24, Z+2	; 0x02
    19e6:	93 81       	ldd	r25, Z+3	; 0x03
    19e8:	20 e0       	ldi	r18, 0x00	; 0
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	40 e2       	ldi	r20, 0x20	; 32
    19ee:	50 e4       	ldi	r21, 0x40	; 64
    19f0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19f4:	88 23       	and	r24, r24
    19f6:	34 f4       	brge	.+12     	; 0x1a04 <main+0xbe6>
    19f8:	e1 e0       	ldi	r30, 0x01	; 1
    19fa:	cb 57       	subi	r28, 0x7B	; 123
    19fc:	df 4f       	sbci	r29, 0xFF	; 255
    19fe:	e8 83       	st	Y, r30
    1a00:	c5 58       	subi	r28, 0x85	; 133
    1a02:	d0 40       	sbci	r29, 0x00	; 0
    1a04:	81 e0       	ldi	r24, 0x01	; 1
    1a06:	cb 57       	subi	r28, 0x7B	; 123
    1a08:	df 4f       	sbci	r29, 0xFF	; 255
    1a0a:	f8 81       	ld	r31, Y
    1a0c:	c5 58       	subi	r28, 0x85	; 133
    1a0e:	d0 40       	sbci	r29, 0x00	; 0
    1a10:	8f 27       	eor	r24, r31
    1a12:	88 23       	and	r24, r24
    1a14:	09 f0       	breq	.+2      	; 0x1a18 <main+0xbfa>
    1a16:	9b c0       	rjmp	.+310    	; 0x1b4e <main+0xd30>
    1a18:	cc 57       	subi	r28, 0x7C	; 124
    1a1a:	df 4f       	sbci	r29, 0xFF	; 255
    1a1c:	18 82       	st	Y, r1
    1a1e:	c4 58       	subi	r28, 0x84	; 132
    1a20:	d0 40       	sbci	r29, 0x00	; 0
    1a22:	fe 01       	movw	r30, r28
    1a24:	e1 59       	subi	r30, 0x91	; 145
    1a26:	ff 4f       	sbci	r31, 0xFF	; 255
    1a28:	60 81       	ld	r22, Z
    1a2a:	71 81       	ldd	r23, Z+1	; 0x01
    1a2c:	82 81       	ldd	r24, Z+2	; 0x02
    1a2e:	93 81       	ldd	r25, Z+3	; 0x03
    1a30:	20 e0       	ldi	r18, 0x00	; 0
    1a32:	30 e0       	ldi	r19, 0x00	; 0
    1a34:	40 e2       	ldi	r20, 0x20	; 32
    1a36:	50 e4       	ldi	r21, 0x40	; 64
    1a38:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a3c:	88 23       	and	r24, r24
    1a3e:	34 f4       	brge	.+12     	; 0x1a4c <main+0xc2e>
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	cc 57       	subi	r28, 0x7C	; 124
    1a44:	df 4f       	sbci	r29, 0xFF	; 255
    1a46:	88 83       	st	Y, r24
    1a48:	c4 58       	subi	r28, 0x84	; 132
    1a4a:	d0 40       	sbci	r29, 0x00	; 0
    1a4c:	81 e0       	ldi	r24, 0x01	; 1
    1a4e:	cc 57       	subi	r28, 0x7C	; 124
    1a50:	df 4f       	sbci	r29, 0xFF	; 255
    1a52:	98 81       	ld	r25, Y
    1a54:	c4 58       	subi	r28, 0x84	; 132
    1a56:	d0 40       	sbci	r29, 0x00	; 0
    1a58:	89 27       	eor	r24, r25
    1a5a:	88 23       	and	r24, r24
    1a5c:	09 f0       	breq	.+2      	; 0x1a60 <main+0xc42>
    1a5e:	77 c0       	rjmp	.+238    	; 0x1b4e <main+0xd30>
    1a60:	cd 57       	subi	r28, 0x7D	; 125
    1a62:	df 4f       	sbci	r29, 0xFF	; 255
    1a64:	18 82       	st	Y, r1
    1a66:	c3 58       	subi	r28, 0x83	; 131
    1a68:	d0 40       	sbci	r29, 0x00	; 0
    1a6a:	fe 01       	movw	r30, r28
    1a6c:	e5 59       	subi	r30, 0x95	; 149
    1a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a70:	60 81       	ld	r22, Z
    1a72:	71 81       	ldd	r23, Z+1	; 0x01
    1a74:	82 81       	ldd	r24, Z+2	; 0x02
    1a76:	93 81       	ldd	r25, Z+3	; 0x03
    1a78:	20 e0       	ldi	r18, 0x00	; 0
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	40 e2       	ldi	r20, 0x20	; 32
    1a7e:	50 e4       	ldi	r21, 0x40	; 64
    1a80:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a84:	88 23       	and	r24, r24
    1a86:	34 f4       	brge	.+12     	; 0x1a94 <main+0xc76>
    1a88:	e1 e0       	ldi	r30, 0x01	; 1
    1a8a:	cd 57       	subi	r28, 0x7D	; 125
    1a8c:	df 4f       	sbci	r29, 0xFF	; 255
    1a8e:	e8 83       	st	Y, r30
    1a90:	c3 58       	subi	r28, 0x83	; 131
    1a92:	d0 40       	sbci	r29, 0x00	; 0
    1a94:	81 e0       	ldi	r24, 0x01	; 1
    1a96:	cd 57       	subi	r28, 0x7D	; 125
    1a98:	df 4f       	sbci	r29, 0xFF	; 255
    1a9a:	f8 81       	ld	r31, Y
    1a9c:	c3 58       	subi	r28, 0x83	; 131
    1a9e:	d0 40       	sbci	r29, 0x00	; 0
    1aa0:	8f 27       	eor	r24, r31
    1aa2:	88 23       	and	r24, r24
    1aa4:	09 f0       	breq	.+2      	; 0x1aa8 <main+0xc8a>
    1aa6:	53 c0       	rjmp	.+166    	; 0x1b4e <main+0xd30>
    1aa8:	ce 57       	subi	r28, 0x7E	; 126
    1aaa:	df 4f       	sbci	r29, 0xFF	; 255
    1aac:	18 82       	st	Y, r1
    1aae:	c2 58       	subi	r28, 0x82	; 130
    1ab0:	d0 40       	sbci	r29, 0x00	; 0
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	e9 59       	subi	r30, 0x99	; 153
    1ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab8:	60 81       	ld	r22, Z
    1aba:	71 81       	ldd	r23, Z+1	; 0x01
    1abc:	82 81       	ldd	r24, Z+2	; 0x02
    1abe:	93 81       	ldd	r25, Z+3	; 0x03
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	30 e0       	ldi	r19, 0x00	; 0
    1ac4:	40 e2       	ldi	r20, 0x20	; 32
    1ac6:	50 e4       	ldi	r21, 0x40	; 64
    1ac8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1acc:	18 16       	cp	r1, r24
    1ace:	34 f4       	brge	.+12     	; 0x1adc <main+0xcbe>
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	ce 57       	subi	r28, 0x7E	; 126
    1ad4:	df 4f       	sbci	r29, 0xFF	; 255
    1ad6:	88 83       	st	Y, r24
    1ad8:	c2 58       	subi	r28, 0x82	; 130
    1ada:	d0 40       	sbci	r29, 0x00	; 0
    1adc:	81 e0       	ldi	r24, 0x01	; 1
    1ade:	ce 57       	subi	r28, 0x7E	; 126
    1ae0:	df 4f       	sbci	r29, 0xFF	; 255
    1ae2:	98 81       	ld	r25, Y
    1ae4:	c2 58       	subi	r28, 0x82	; 130
    1ae6:	d0 40       	sbci	r29, 0x00	; 0
    1ae8:	89 27       	eor	r24, r25
    1aea:	88 23       	and	r24, r24
    1aec:	81 f5       	brne	.+96     	; 0x1b4e <main+0xd30>
    1aee:	cf 57       	subi	r28, 0x7F	; 127
    1af0:	df 4f       	sbci	r29, 0xFF	; 255
    1af2:	18 82       	st	Y, r1
    1af4:	c1 58       	subi	r28, 0x81	; 129
    1af6:	d0 40       	sbci	r29, 0x00	; 0
    1af8:	fe 01       	movw	r30, r28
    1afa:	ed 59       	subi	r30, 0x9D	; 157
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	60 81       	ld	r22, Z
    1b00:	71 81       	ldd	r23, Z+1	; 0x01
    1b02:	82 81       	ldd	r24, Z+2	; 0x02
    1b04:	93 81       	ldd	r25, Z+3	; 0x03
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	40 e2       	ldi	r20, 0x20	; 32
    1b0c:	50 e4       	ldi	r21, 0x40	; 64
    1b0e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b12:	88 23       	and	r24, r24
    1b14:	34 f4       	brge	.+12     	; 0x1b22 <main+0xd04>
    1b16:	e1 e0       	ldi	r30, 0x01	; 1
    1b18:	cf 57       	subi	r28, 0x7F	; 127
    1b1a:	df 4f       	sbci	r29, 0xFF	; 255
    1b1c:	e8 83       	st	Y, r30
    1b1e:	c1 58       	subi	r28, 0x81	; 129
    1b20:	d0 40       	sbci	r29, 0x00	; 0
    1b22:	81 e0       	ldi	r24, 0x01	; 1
    1b24:	cf 57       	subi	r28, 0x7F	; 127
    1b26:	df 4f       	sbci	r29, 0xFF	; 255
    1b28:	f8 81       	ld	r31, Y
    1b2a:	c1 58       	subi	r28, 0x81	; 129
    1b2c:	d0 40       	sbci	r29, 0x00	; 0
    1b2e:	8f 27       	eor	r24, r31
    1b30:	88 23       	and	r24, r24
    1b32:	69 f4       	brne	.+26     	; 0x1b4e <main+0xd30>
		{
			Lcd_vidDisplayStr("I'm really love you");
    1b34:	8a ea       	ldi	r24, 0xAA	; 170
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	60 e0       	ldi	r22, 0x00	; 0
    1b40:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    1b44:	82 e7       	ldi	r24, 0x72	; 114
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    1b4c:	a6 c1       	rjmp	.+844    	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Hold && INDEX Open && MIDDLE Hold && RING Hold && PINKY Open)
    1b4e:	c0 58       	subi	r28, 0x80	; 128
    1b50:	df 4f       	sbci	r29, 0xFF	; 255
    1b52:	18 82       	st	Y, r1
    1b54:	c0 58       	subi	r28, 0x80	; 128
    1b56:	d0 40       	sbci	r29, 0x00	; 0
    1b58:	fe 01       	movw	r30, r28
    1b5a:	ed 58       	subi	r30, 0x8D	; 141
    1b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5e:	60 81       	ld	r22, Z
    1b60:	71 81       	ldd	r23, Z+1	; 0x01
    1b62:	82 81       	ldd	r24, Z+2	; 0x02
    1b64:	93 81       	ldd	r25, Z+3	; 0x03
    1b66:	20 e0       	ldi	r18, 0x00	; 0
    1b68:	30 e0       	ldi	r19, 0x00	; 0
    1b6a:	40 e2       	ldi	r20, 0x20	; 32
    1b6c:	50 e4       	ldi	r21, 0x40	; 64
    1b6e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1b72:	18 16       	cp	r1, r24
    1b74:	34 f4       	brge	.+12     	; 0x1b82 <main+0xd64>
    1b76:	81 e0       	ldi	r24, 0x01	; 1
    1b78:	c0 58       	subi	r28, 0x80	; 128
    1b7a:	df 4f       	sbci	r29, 0xFF	; 255
    1b7c:	88 83       	st	Y, r24
    1b7e:	c0 58       	subi	r28, 0x80	; 128
    1b80:	d0 40       	sbci	r29, 0x00	; 0
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	c0 58       	subi	r28, 0x80	; 128
    1b86:	df 4f       	sbci	r29, 0xFF	; 255
    1b88:	98 81       	ld	r25, Y
    1b8a:	c0 58       	subi	r28, 0x80	; 128
    1b8c:	d0 40       	sbci	r29, 0x00	; 0
    1b8e:	89 27       	eor	r24, r25
    1b90:	88 23       	and	r24, r24
    1b92:	09 f0       	breq	.+2      	; 0x1b96 <main+0xd78>
    1b94:	89 c0       	rjmp	.+274    	; 0x1ca8 <main+0xe8a>
    1b96:	c1 58       	subi	r28, 0x81	; 129
    1b98:	df 4f       	sbci	r29, 0xFF	; 255
    1b9a:	18 82       	st	Y, r1
    1b9c:	cf 57       	subi	r28, 0x7F	; 127
    1b9e:	d0 40       	sbci	r29, 0x00	; 0
    1ba0:	fe 01       	movw	r30, r28
    1ba2:	e1 59       	subi	r30, 0x91	; 145
    1ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba6:	60 81       	ld	r22, Z
    1ba8:	71 81       	ldd	r23, Z+1	; 0x01
    1baa:	82 81       	ldd	r24, Z+2	; 0x02
    1bac:	93 81       	ldd	r25, Z+3	; 0x03
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	40 e2       	ldi	r20, 0x20	; 32
    1bb4:	50 e4       	ldi	r21, 0x40	; 64
    1bb6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1bba:	88 23       	and	r24, r24
    1bbc:	34 f4       	brge	.+12     	; 0x1bca <main+0xdac>
    1bbe:	e1 e0       	ldi	r30, 0x01	; 1
    1bc0:	c1 58       	subi	r28, 0x81	; 129
    1bc2:	df 4f       	sbci	r29, 0xFF	; 255
    1bc4:	e8 83       	st	Y, r30
    1bc6:	cf 57       	subi	r28, 0x7F	; 127
    1bc8:	d0 40       	sbci	r29, 0x00	; 0
    1bca:	81 e0       	ldi	r24, 0x01	; 1
    1bcc:	c1 58       	subi	r28, 0x81	; 129
    1bce:	df 4f       	sbci	r29, 0xFF	; 255
    1bd0:	f8 81       	ld	r31, Y
    1bd2:	cf 57       	subi	r28, 0x7F	; 127
    1bd4:	d0 40       	sbci	r29, 0x00	; 0
    1bd6:	8f 27       	eor	r24, r31
    1bd8:	88 23       	and	r24, r24
    1bda:	09 f0       	breq	.+2      	; 0x1bde <main+0xdc0>
    1bdc:	65 c0       	rjmp	.+202    	; 0x1ca8 <main+0xe8a>
    1bde:	ef 96       	adiw	r28, 0x3f	; 63
    1be0:	1f ae       	std	Y+63, r1	; 0x3f
    1be2:	ef 97       	sbiw	r28, 0x3f	; 63
    1be4:	fe 01       	movw	r30, r28
    1be6:	e5 59       	subi	r30, 0x95	; 149
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	60 81       	ld	r22, Z
    1bec:	71 81       	ldd	r23, Z+1	; 0x01
    1bee:	82 81       	ldd	r24, Z+2	; 0x02
    1bf0:	93 81       	ldd	r25, Z+3	; 0x03
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	40 e2       	ldi	r20, 0x20	; 32
    1bf8:	50 e4       	ldi	r21, 0x40	; 64
    1bfa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1bfe:	18 16       	cp	r1, r24
    1c00:	24 f4       	brge	.+8      	; 0x1c0a <main+0xdec>
    1c02:	81 e0       	ldi	r24, 0x01	; 1
    1c04:	ef 96       	adiw	r28, 0x3f	; 63
    1c06:	8f af       	std	Y+63, r24	; 0x3f
    1c08:	ef 97       	sbiw	r28, 0x3f	; 63
    1c0a:	81 e0       	ldi	r24, 0x01	; 1
    1c0c:	ef 96       	adiw	r28, 0x3f	; 63
    1c0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c10:	ef 97       	sbiw	r28, 0x3f	; 63
    1c12:	89 27       	eor	r24, r25
    1c14:	88 23       	and	r24, r24
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <main+0xdfc>
    1c18:	47 c0       	rjmp	.+142    	; 0x1ca8 <main+0xe8a>
    1c1a:	ee 96       	adiw	r28, 0x3e	; 62
    1c1c:	1f ae       	std	Y+63, r1	; 0x3f
    1c1e:	ee 97       	sbiw	r28, 0x3e	; 62
    1c20:	fe 01       	movw	r30, r28
    1c22:	e9 59       	subi	r30, 0x99	; 153
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	60 81       	ld	r22, Z
    1c28:	71 81       	ldd	r23, Z+1	; 0x01
    1c2a:	82 81       	ldd	r24, Z+2	; 0x02
    1c2c:	93 81       	ldd	r25, Z+3	; 0x03
    1c2e:	20 e0       	ldi	r18, 0x00	; 0
    1c30:	30 e0       	ldi	r19, 0x00	; 0
    1c32:	40 e2       	ldi	r20, 0x20	; 32
    1c34:	50 e4       	ldi	r21, 0x40	; 64
    1c36:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c3a:	18 16       	cp	r1, r24
    1c3c:	24 f4       	brge	.+8      	; 0x1c46 <main+0xe28>
    1c3e:	e1 e0       	ldi	r30, 0x01	; 1
    1c40:	ee 96       	adiw	r28, 0x3e	; 62
    1c42:	ef af       	std	Y+63, r30	; 0x3f
    1c44:	ee 97       	sbiw	r28, 0x3e	; 62
    1c46:	81 e0       	ldi	r24, 0x01	; 1
    1c48:	ee 96       	adiw	r28, 0x3e	; 62
    1c4a:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c4c:	ee 97       	sbiw	r28, 0x3e	; 62
    1c4e:	8f 27       	eor	r24, r31
    1c50:	88 23       	and	r24, r24
    1c52:	51 f5       	brne	.+84     	; 0x1ca8 <main+0xe8a>
    1c54:	ed 96       	adiw	r28, 0x3d	; 61
    1c56:	1f ae       	std	Y+63, r1	; 0x3f
    1c58:	ed 97       	sbiw	r28, 0x3d	; 61
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	ed 59       	subi	r30, 0x9D	; 157
    1c5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c60:	60 81       	ld	r22, Z
    1c62:	71 81       	ldd	r23, Z+1	; 0x01
    1c64:	82 81       	ldd	r24, Z+2	; 0x02
    1c66:	93 81       	ldd	r25, Z+3	; 0x03
    1c68:	20 e0       	ldi	r18, 0x00	; 0
    1c6a:	30 e0       	ldi	r19, 0x00	; 0
    1c6c:	40 e2       	ldi	r20, 0x20	; 32
    1c6e:	50 e4       	ldi	r21, 0x40	; 64
    1c70:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c74:	88 23       	and	r24, r24
    1c76:	24 f4       	brge	.+8      	; 0x1c80 <main+0xe62>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	ed 96       	adiw	r28, 0x3d	; 61
    1c7c:	8f af       	std	Y+63, r24	; 0x3f
    1c7e:	ed 97       	sbiw	r28, 0x3d	; 61
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	ed 96       	adiw	r28, 0x3d	; 61
    1c84:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c86:	ed 97       	sbiw	r28, 0x3d	; 61
    1c88:	89 27       	eor	r24, r25
    1c8a:	88 23       	and	r24, r24
    1c8c:	69 f4       	brne	.+26     	; 0x1ca8 <main+0xe8a>
		{
			Lcd_vidDisplayStr("This is incredible");
    1c8e:	8e eb       	ldi	r24, 0xBE	; 190
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    1c9e:	82 e7       	ldi	r24, 0x72	; 114
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    1ca6:	f9 c0       	rjmp	.+498    	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Open && INDEX Open && MIDDLE Open && RING Open && PINKY Open)
    1ca8:	ec 96       	adiw	r28, 0x3c	; 60
    1caa:	1f ae       	std	Y+63, r1	; 0x3f
    1cac:	ec 97       	sbiw	r28, 0x3c	; 60
    1cae:	fe 01       	movw	r30, r28
    1cb0:	ed 58       	subi	r30, 0x8D	; 141
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	60 81       	ld	r22, Z
    1cb6:	71 81       	ldd	r23, Z+1	; 0x01
    1cb8:	82 81       	ldd	r24, Z+2	; 0x02
    1cba:	93 81       	ldd	r25, Z+3	; 0x03
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	40 e2       	ldi	r20, 0x20	; 32
    1cc2:	50 e4       	ldi	r21, 0x40	; 64
    1cc4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1cc8:	88 23       	and	r24, r24
    1cca:	24 f4       	brge	.+8      	; 0x1cd4 <main+0xeb6>
    1ccc:	e1 e0       	ldi	r30, 0x01	; 1
    1cce:	ec 96       	adiw	r28, 0x3c	; 60
    1cd0:	ef af       	std	Y+63, r30	; 0x3f
    1cd2:	ec 97       	sbiw	r28, 0x3c	; 60
    1cd4:	81 e0       	ldi	r24, 0x01	; 1
    1cd6:	ec 96       	adiw	r28, 0x3c	; 60
    1cd8:	ff ad       	ldd	r31, Y+63	; 0x3f
    1cda:	ec 97       	sbiw	r28, 0x3c	; 60
    1cdc:	8f 27       	eor	r24, r31
    1cde:	88 23       	and	r24, r24
    1ce0:	09 f0       	breq	.+2      	; 0x1ce4 <main+0xec6>
    1ce2:	83 c0       	rjmp	.+262    	; 0x1dea <main+0xfcc>
    1ce4:	eb 96       	adiw	r28, 0x3b	; 59
    1ce6:	1f ae       	std	Y+63, r1	; 0x3f
    1ce8:	eb 97       	sbiw	r28, 0x3b	; 59
    1cea:	fe 01       	movw	r30, r28
    1cec:	e1 59       	subi	r30, 0x91	; 145
    1cee:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf0:	60 81       	ld	r22, Z
    1cf2:	71 81       	ldd	r23, Z+1	; 0x01
    1cf4:	82 81       	ldd	r24, Z+2	; 0x02
    1cf6:	93 81       	ldd	r25, Z+3	; 0x03
    1cf8:	20 e0       	ldi	r18, 0x00	; 0
    1cfa:	30 e0       	ldi	r19, 0x00	; 0
    1cfc:	40 e2       	ldi	r20, 0x20	; 32
    1cfe:	50 e4       	ldi	r21, 0x40	; 64
    1d00:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d04:	88 23       	and	r24, r24
    1d06:	24 f4       	brge	.+8      	; 0x1d10 <main+0xef2>
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	eb 96       	adiw	r28, 0x3b	; 59
    1d0c:	8f af       	std	Y+63, r24	; 0x3f
    1d0e:	eb 97       	sbiw	r28, 0x3b	; 59
    1d10:	81 e0       	ldi	r24, 0x01	; 1
    1d12:	eb 96       	adiw	r28, 0x3b	; 59
    1d14:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d16:	eb 97       	sbiw	r28, 0x3b	; 59
    1d18:	89 27       	eor	r24, r25
    1d1a:	88 23       	and	r24, r24
    1d1c:	09 f0       	breq	.+2      	; 0x1d20 <main+0xf02>
    1d1e:	65 c0       	rjmp	.+202    	; 0x1dea <main+0xfcc>
    1d20:	ea 96       	adiw	r28, 0x3a	; 58
    1d22:	1f ae       	std	Y+63, r1	; 0x3f
    1d24:	ea 97       	sbiw	r28, 0x3a	; 58
    1d26:	fe 01       	movw	r30, r28
    1d28:	e5 59       	subi	r30, 0x95	; 149
    1d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2c:	60 81       	ld	r22, Z
    1d2e:	71 81       	ldd	r23, Z+1	; 0x01
    1d30:	82 81       	ldd	r24, Z+2	; 0x02
    1d32:	93 81       	ldd	r25, Z+3	; 0x03
    1d34:	20 e0       	ldi	r18, 0x00	; 0
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	40 e2       	ldi	r20, 0x20	; 32
    1d3a:	50 e4       	ldi	r21, 0x40	; 64
    1d3c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d40:	88 23       	and	r24, r24
    1d42:	24 f4       	brge	.+8      	; 0x1d4c <main+0xf2e>
    1d44:	e1 e0       	ldi	r30, 0x01	; 1
    1d46:	ea 96       	adiw	r28, 0x3a	; 58
    1d48:	ef af       	std	Y+63, r30	; 0x3f
    1d4a:	ea 97       	sbiw	r28, 0x3a	; 58
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	ea 96       	adiw	r28, 0x3a	; 58
    1d50:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d52:	ea 97       	sbiw	r28, 0x3a	; 58
    1d54:	8f 27       	eor	r24, r31
    1d56:	88 23       	and	r24, r24
    1d58:	09 f0       	breq	.+2      	; 0x1d5c <main+0xf3e>
    1d5a:	47 c0       	rjmp	.+142    	; 0x1dea <main+0xfcc>
    1d5c:	e9 96       	adiw	r28, 0x39	; 57
    1d5e:	1f ae       	std	Y+63, r1	; 0x3f
    1d60:	e9 97       	sbiw	r28, 0x39	; 57
    1d62:	fe 01       	movw	r30, r28
    1d64:	e9 59       	subi	r30, 0x99	; 153
    1d66:	ff 4f       	sbci	r31, 0xFF	; 255
    1d68:	60 81       	ld	r22, Z
    1d6a:	71 81       	ldd	r23, Z+1	; 0x01
    1d6c:	82 81       	ldd	r24, Z+2	; 0x02
    1d6e:	93 81       	ldd	r25, Z+3	; 0x03
    1d70:	20 e0       	ldi	r18, 0x00	; 0
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	40 e2       	ldi	r20, 0x20	; 32
    1d76:	50 e4       	ldi	r21, 0x40	; 64
    1d78:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d7c:	88 23       	and	r24, r24
    1d7e:	24 f4       	brge	.+8      	; 0x1d88 <main+0xf6a>
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	e9 96       	adiw	r28, 0x39	; 57
    1d84:	8f af       	std	Y+63, r24	; 0x3f
    1d86:	e9 97       	sbiw	r28, 0x39	; 57
    1d88:	81 e0       	ldi	r24, 0x01	; 1
    1d8a:	e9 96       	adiw	r28, 0x39	; 57
    1d8c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d8e:	e9 97       	sbiw	r28, 0x39	; 57
    1d90:	89 27       	eor	r24, r25
    1d92:	88 23       	and	r24, r24
    1d94:	51 f5       	brne	.+84     	; 0x1dea <main+0xfcc>
    1d96:	e8 96       	adiw	r28, 0x38	; 56
    1d98:	1f ae       	std	Y+63, r1	; 0x3f
    1d9a:	e8 97       	sbiw	r28, 0x38	; 56
    1d9c:	fe 01       	movw	r30, r28
    1d9e:	ed 59       	subi	r30, 0x9D	; 157
    1da0:	ff 4f       	sbci	r31, 0xFF	; 255
    1da2:	60 81       	ld	r22, Z
    1da4:	71 81       	ldd	r23, Z+1	; 0x01
    1da6:	82 81       	ldd	r24, Z+2	; 0x02
    1da8:	93 81       	ldd	r25, Z+3	; 0x03
    1daa:	20 e0       	ldi	r18, 0x00	; 0
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	40 e2       	ldi	r20, 0x20	; 32
    1db0:	50 e4       	ldi	r21, 0x40	; 64
    1db2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1db6:	88 23       	and	r24, r24
    1db8:	24 f4       	brge	.+8      	; 0x1dc2 <main+0xfa4>
    1dba:	e1 e0       	ldi	r30, 0x01	; 1
    1dbc:	e8 96       	adiw	r28, 0x38	; 56
    1dbe:	ef af       	std	Y+63, r30	; 0x3f
    1dc0:	e8 97       	sbiw	r28, 0x38	; 56
    1dc2:	81 e0       	ldi	r24, 0x01	; 1
    1dc4:	e8 96       	adiw	r28, 0x38	; 56
    1dc6:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dc8:	e8 97       	sbiw	r28, 0x38	; 56
    1dca:	8f 27       	eor	r24, r31
    1dcc:	88 23       	and	r24, r24
    1dce:	69 f4       	brne	.+26     	; 0x1dea <main+0xfcc>
		{
			Lcd_vidDisplayStr(" I wish you a ");
    1dd0:	81 ed       	ldi	r24, 0xD1	; 209
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    1dd8:	81 e0       	ldi	r24, 0x01	; 1
    1dda:	60 e0       	ldi	r22, 0x00	; 0
    1ddc:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("  happy life  ");
    1de0:	80 ee       	ldi	r24, 0xE0	; 224
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    1de8:	58 c0       	rjmp	.+176    	; 0x1e9a <main+0x107c>
		}

		else if(THUMB Open && INDEX Hold && MIDDLE Hold  && RING Hold && PINKY Hold)
    1dea:	fe 01       	movw	r30, r28
    1dec:	ed 58       	subi	r30, 0x8D	; 141
    1dee:	ff 4f       	sbci	r31, 0xFF	; 255
    1df0:	60 81       	ld	r22, Z
    1df2:	71 81       	ldd	r23, Z+1	; 0x01
    1df4:	82 81       	ldd	r24, Z+2	; 0x02
    1df6:	93 81       	ldd	r25, Z+3	; 0x03
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e2       	ldi	r20, 0x20	; 32
    1dfe:	50 e4       	ldi	r21, 0x40	; 64
    1e00:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e04:	88 23       	and	r24, r24
    1e06:	0c f0       	brlt	.+2      	; 0x1e0a <main+0xfec>
    1e08:	48 c0       	rjmp	.+144    	; 0x1e9a <main+0x107c>
    1e0a:	fe 01       	movw	r30, r28
    1e0c:	e1 59       	subi	r30, 0x91	; 145
    1e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e10:	60 81       	ld	r22, Z
    1e12:	71 81       	ldd	r23, Z+1	; 0x01
    1e14:	82 81       	ldd	r24, Z+2	; 0x02
    1e16:	93 81       	ldd	r25, Z+3	; 0x03
    1e18:	20 e0       	ldi	r18, 0x00	; 0
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	40 e2       	ldi	r20, 0x20	; 32
    1e1e:	50 e4       	ldi	r21, 0x40	; 64
    1e20:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e24:	18 16       	cp	r1, r24
    1e26:	cc f5       	brge	.+114    	; 0x1e9a <main+0x107c>
    1e28:	fe 01       	movw	r30, r28
    1e2a:	e5 59       	subi	r30, 0x95	; 149
    1e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2e:	60 81       	ld	r22, Z
    1e30:	71 81       	ldd	r23, Z+1	; 0x01
    1e32:	82 81       	ldd	r24, Z+2	; 0x02
    1e34:	93 81       	ldd	r25, Z+3	; 0x03
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	40 e2       	ldi	r20, 0x20	; 32
    1e3c:	50 e4       	ldi	r21, 0x40	; 64
    1e3e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e42:	18 16       	cp	r1, r24
    1e44:	54 f5       	brge	.+84     	; 0x1e9a <main+0x107c>
    1e46:	fe 01       	movw	r30, r28
    1e48:	e9 59       	subi	r30, 0x99	; 153
    1e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4c:	60 81       	ld	r22, Z
    1e4e:	71 81       	ldd	r23, Z+1	; 0x01
    1e50:	82 81       	ldd	r24, Z+2	; 0x02
    1e52:	93 81       	ldd	r25, Z+3	; 0x03
    1e54:	20 e0       	ldi	r18, 0x00	; 0
    1e56:	30 e0       	ldi	r19, 0x00	; 0
    1e58:	40 e2       	ldi	r20, 0x20	; 32
    1e5a:	50 e4       	ldi	r21, 0x40	; 64
    1e5c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e60:	18 16       	cp	r1, r24
    1e62:	dc f4       	brge	.+54     	; 0x1e9a <main+0x107c>
    1e64:	fe 01       	movw	r30, r28
    1e66:	ed 59       	subi	r30, 0x9D	; 157
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	60 81       	ld	r22, Z
    1e6c:	71 81       	ldd	r23, Z+1	; 0x01
    1e6e:	82 81       	ldd	r24, Z+2	; 0x02
    1e70:	93 81       	ldd	r25, Z+3	; 0x03
    1e72:	20 e0       	ldi	r18, 0x00	; 0
    1e74:	30 e0       	ldi	r19, 0x00	; 0
    1e76:	40 e2       	ldi	r20, 0x20	; 32
    1e78:	50 e4       	ldi	r21, 0x40	; 64
    1e7a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e7e:	18 16       	cp	r1, r24
    1e80:	64 f4       	brge	.+24     	; 0x1e9a <main+0x107c>
		{
			Lcd_vidDisplayStr("    Good job    ");
    1e82:	8f ee       	ldi	r24, 0xEF	; 239
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
			LCD_vidRowColumn(1,0);
    1e8a:	81 e0       	ldi	r24, 0x01	; 1
    1e8c:	60 e0       	ldi	r22, 0x00	; 0
    1e8e:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
			Lcd_vidDisplayStr("                  ");
    1e92:	82 e7       	ldi	r24, 0x72	; 114
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	aa ef       	ldi	r26, 0xFA	; 250
    1ea0:	b3 e4       	ldi	r27, 0x43	; 67
    1ea2:	8b 87       	std	Y+11, r24	; 0x0b
    1ea4:	9c 87       	std	Y+12, r25	; 0x0c
    1ea6:	ad 87       	std	Y+13, r26	; 0x0d
    1ea8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eaa:	6b 85       	ldd	r22, Y+11	; 0x0b
    1eac:	7c 85       	ldd	r23, Y+12	; 0x0c
    1eae:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eb0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	4a e7       	ldi	r20, 0x7A	; 122
    1eb8:	55 e4       	ldi	r21, 0x45	; 69
    1eba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ebe:	dc 01       	movw	r26, r24
    1ec0:	cb 01       	movw	r24, r22
    1ec2:	8f 83       	std	Y+7, r24	; 0x07
    1ec4:	98 87       	std	Y+8, r25	; 0x08
    1ec6:	a9 87       	std	Y+9, r26	; 0x09
    1ec8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1eca:	6f 81       	ldd	r22, Y+7	; 0x07
    1ecc:	78 85       	ldd	r23, Y+8	; 0x08
    1ece:	89 85       	ldd	r24, Y+9	; 0x09
    1ed0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ed2:	20 e0       	ldi	r18, 0x00	; 0
    1ed4:	30 e0       	ldi	r19, 0x00	; 0
    1ed6:	40 e8       	ldi	r20, 0x80	; 128
    1ed8:	5f e3       	ldi	r21, 0x3F	; 63
    1eda:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1ede:	88 23       	and	r24, r24
    1ee0:	2c f4       	brge	.+10     	; 0x1eec <main+0x10ce>
		__ticks = 1;
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	90 e0       	ldi	r25, 0x00	; 0
    1ee6:	9e 83       	std	Y+6, r25	; 0x06
    1ee8:	8d 83       	std	Y+5, r24	; 0x05
    1eea:	3f c0       	rjmp	.+126    	; 0x1f6a <main+0x114c>
	else if (__tmp > 65535)
    1eec:	6f 81       	ldd	r22, Y+7	; 0x07
    1eee:	78 85       	ldd	r23, Y+8	; 0x08
    1ef0:	89 85       	ldd	r24, Y+9	; 0x09
    1ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	3f ef       	ldi	r19, 0xFF	; 255
    1ef8:	4f e7       	ldi	r20, 0x7F	; 127
    1efa:	57 e4       	ldi	r21, 0x47	; 71
    1efc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1f00:	18 16       	cp	r1, r24
    1f02:	4c f5       	brge	.+82     	; 0x1f56 <main+0x1138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f04:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f06:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f08:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f0a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	40 e2       	ldi	r20, 0x20	; 32
    1f12:	51 e4       	ldi	r21, 0x41	; 65
    1f14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	bc 01       	movw	r22, r24
    1f1e:	cd 01       	movw	r24, r26
    1f20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f24:	dc 01       	movw	r26, r24
    1f26:	cb 01       	movw	r24, r22
    1f28:	9e 83       	std	Y+6, r25	; 0x06
    1f2a:	8d 83       	std	Y+5, r24	; 0x05
    1f2c:	0f c0       	rjmp	.+30     	; 0x1f4c <main+0x112e>
    1f2e:	80 e9       	ldi	r24, 0x90	; 144
    1f30:	91 e0       	ldi	r25, 0x01	; 1
    1f32:	9c 83       	std	Y+4, r25	; 0x04
    1f34:	8b 83       	std	Y+3, r24	; 0x03
    1f36:	8b 81       	ldd	r24, Y+3	; 0x03
    1f38:	9c 81       	ldd	r25, Y+4	; 0x04
    1f3a:	01 97       	sbiw	r24, 0x01	; 1
    1f3c:	f1 f7       	brne	.-4      	; 0x1f3a <main+0x111c>
    1f3e:	9c 83       	std	Y+4, r25	; 0x04
    1f40:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f42:	8d 81       	ldd	r24, Y+5	; 0x05
    1f44:	9e 81       	ldd	r25, Y+6	; 0x06
    1f46:	01 97       	sbiw	r24, 0x01	; 1
    1f48:	9e 83       	std	Y+6, r25	; 0x06
    1f4a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f50:	00 97       	sbiw	r24, 0x00	; 0
    1f52:	69 f7       	brne	.-38     	; 0x1f2e <main+0x1110>
    1f54:	14 c0       	rjmp	.+40     	; 0x1f7e <main+0x1160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f56:	6f 81       	ldd	r22, Y+7	; 0x07
    1f58:	78 85       	ldd	r23, Y+8	; 0x08
    1f5a:	89 85       	ldd	r24, Y+9	; 0x09
    1f5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f62:	dc 01       	movw	r26, r24
    1f64:	cb 01       	movw	r24, r22
    1f66:	9e 83       	std	Y+6, r25	; 0x06
    1f68:	8d 83       	std	Y+5, r24	; 0x05
    1f6a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f6c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f6e:	9a 83       	std	Y+2, r25	; 0x02
    1f70:	89 83       	std	Y+1, r24	; 0x01
    1f72:	89 81       	ldd	r24, Y+1	; 0x01
    1f74:	9a 81       	ldd	r25, Y+2	; 0x02
    1f76:	01 97       	sbiw	r24, 0x01	; 1
    1f78:	f1 f7       	brne	.-4      	; 0x1f76 <main+0x1158>
    1f7a:	9a 83       	std	Y+2, r25	; 0x02
    1f7c:	89 83       	std	Y+1, r24	; 0x01
		}

		_delay_ms(500);
		LCD_vidRowColumn(0,0); //To return to (0,0)
    1f7e:	80 e0       	ldi	r24, 0x00	; 0
    1f80:	60 e0       	ldi	r22, 0x00	; 0
    1f82:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <LCD_vidRowColumn>
    1f86:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <main+0x1a4>

00001f8a <pot_vidInit>:
 */

#include "potentiometer.h"

void pot_vidInit(void)
{
    1f8a:	df 93       	push	r29
    1f8c:	cf 93       	push	r28
    1f8e:	cd b7       	in	r28, 0x3d	; 61
    1f90:	de b7       	in	r29, 0x3e	; 62
	ADC_vidInit();
    1f92:	0e 94 03 19 	call	0x3206	; 0x3206 <ADC_vidInit>
}
    1f96:	cf 91       	pop	r28
    1f98:	df 91       	pop	r29
    1f9a:	08 95       	ret

00001f9c <pot_u16Read>:

u16 pot_u16Read(void)
{
    1f9c:	df 93       	push	r29
    1f9e:	cf 93       	push	r28
    1fa0:	00 d0       	rcall	.+0      	; 0x1fa2 <pot_u16Read+0x6>
    1fa2:	00 d0       	rcall	.+0      	; 0x1fa4 <pot_u16Read+0x8>
    1fa4:	00 d0       	rcall	.+0      	; 0x1fa6 <pot_u16Read+0xa>
    1fa6:	cd b7       	in	r28, 0x3d	; 61
    1fa8:	de b7       	in	r29, 0x3e	; 62
	f64 loc_adcRead =0;
    1faa:	80 e0       	ldi	r24, 0x00	; 0
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	a0 e0       	ldi	r26, 0x00	; 0
    1fb0:	b0 e0       	ldi	r27, 0x00	; 0
    1fb2:	8b 83       	std	Y+3, r24	; 0x03
    1fb4:	9c 83       	std	Y+4, r25	; 0x04
    1fb6:	ad 83       	std	Y+5, r26	; 0x05
    1fb8:	be 83       	std	Y+6, r27	; 0x06
	u16 loc_pot =0;
    1fba:	1a 82       	std	Y+2, r1	; 0x02
    1fbc:	19 82       	std	Y+1, r1	; 0x01

	loc_adcRead = ADC_f64ADCRead (ADC_CHANNEL1);
    1fbe:	81 e0       	ldi	r24, 0x01	; 1
    1fc0:	0e 94 34 19 	call	0x3268	; 0x3268 <ADC_f64ADCRead>
    1fc4:	dc 01       	movw	r26, r24
    1fc6:	cb 01       	movw	r24, r22
    1fc8:	8b 83       	std	Y+3, r24	; 0x03
    1fca:	9c 83       	std	Y+4, r25	; 0x04
    1fcc:	ad 83       	std	Y+5, r26	; 0x05
    1fce:	be 83       	std	Y+6, r27	; 0x06
	loc_pot = loc_adcRead / 10;
    1fd0:	6b 81       	ldd	r22, Y+3	; 0x03
    1fd2:	7c 81       	ldd	r23, Y+4	; 0x04
    1fd4:	8d 81       	ldd	r24, Y+5	; 0x05
    1fd6:	9e 81       	ldd	r25, Y+6	; 0x06
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	40 e2       	ldi	r20, 0x20	; 32
    1fde:	51 e4       	ldi	r21, 0x41	; 65
    1fe0:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1fe4:	dc 01       	movw	r26, r24
    1fe6:	cb 01       	movw	r24, r22
    1fe8:	bc 01       	movw	r22, r24
    1fea:	cd 01       	movw	r24, r26
    1fec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ff0:	dc 01       	movw	r26, r24
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	9a 83       	std	Y+2, r25	; 0x02
    1ff6:	89 83       	std	Y+1, r24	; 0x01

	return loc_pot;
    1ff8:	89 81       	ldd	r24, Y+1	; 0x01
    1ffa:	9a 81       	ldd	r25, Y+2	; 0x02
}
    1ffc:	26 96       	adiw	r28, 0x06	; 6
    1ffe:	0f b6       	in	r0, 0x3f	; 63
    2000:	f8 94       	cli
    2002:	de bf       	out	0x3e, r29	; 62
    2004:	0f be       	out	0x3f, r0	; 63
    2006:	cd bf       	out	0x3d, r28	; 61
    2008:	cf 91       	pop	r28
    200a:	df 91       	pop	r29
    200c:	08 95       	ret

0000200e <Lcd_vidinit>:
#include "Dio.h"
#include <util/delay.h>
#define LCD_MASK (0x0F)

void Lcd_vidinit(void)
{
    200e:	df 93       	push	r29
    2010:	cf 93       	push	r28
    2012:	cd b7       	in	r28, 0x3d	; 61
    2014:	de b7       	in	r29, 0x3e	; 62
    2016:	e4 97       	sbiw	r28, 0x34	; 52
    2018:	0f b6       	in	r0, 0x3f	; 63
    201a:	f8 94       	cli
    201c:	de bf       	out	0x3e, r29	; 62
    201e:	0f be       	out	0x3f, r0	; 63
    2020:	cd bf       	out	0x3d, r28	; 61
	//configure
	Dio_vidconfigChanel(DIO_PORTB , DIO_PIN1 , DIO_OUTPUT);
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	61 e0       	ldi	r22, 0x01	; 1
    2026:	41 e0       	ldi	r20, 0x01	; 1
    2028:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>
	Dio_vidconfigChanel(DIO_PORTB , DIO_PIN2 , DIO_OUTPUT);
    202c:	81 e0       	ldi	r24, 0x01	; 1
    202e:	62 e0       	ldi	r22, 0x02	; 2
    2030:	41 e0       	ldi	r20, 0x01	; 1
    2032:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>
	Dio_vidconfigChanel(DIO_PORTB , DIO_PIN3 , DIO_OUTPUT);
    2036:	81 e0       	ldi	r24, 0x01	; 1
    2038:	63 e0       	ldi	r22, 0x03	; 3
    203a:	41 e0       	ldi	r20, 0x01	; 1
    203c:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>

	//configure data pins as output
	Dio_vidconfigChanel(DIO_PORTA , DIO_PIN4 , DIO_OUTPUT);
    2040:	80 e0       	ldi	r24, 0x00	; 0
    2042:	64 e0       	ldi	r22, 0x04	; 4
    2044:	41 e0       	ldi	r20, 0x01	; 1
    2046:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>
	Dio_vidconfigChanel(DIO_PORTA , DIO_PIN5 , DIO_OUTPUT);
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	65 e0       	ldi	r22, 0x05	; 5
    204e:	41 e0       	ldi	r20, 0x01	; 1
    2050:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>
	Dio_vidconfigChanel(DIO_PORTA , DIO_PIN6 , DIO_OUTPUT);
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	66 e0       	ldi	r22, 0x06	; 6
    2058:	41 e0       	ldi	r20, 0x01	; 1
    205a:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>
	Dio_vidconfigChanel(DIO_PORTA , DIO_PIN7 , DIO_OUTPUT);
    205e:	80 e0       	ldi	r24, 0x00	; 0
    2060:	67 e0       	ldi	r22, 0x07	; 7
    2062:	41 e0       	ldi	r20, 0x01	; 1
    2064:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <Dio_vidconfigChanel>

	//Always write on LCD
	Dio_vidwriteChanel(DIO_PORTB , DIO_PIN2 , DIO_LOW);
    2068:	81 e0       	ldi	r24, 0x01	; 1
    206a:	62 e0       	ldi	r22, 0x02	; 2
    206c:	40 e0       	ldi	r20, 0x00	; 0
    206e:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <Dio_vidwriteChanel>
    2072:	80 e0       	ldi	r24, 0x00	; 0
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	a0 e7       	ldi	r26, 0x70	; 112
    2078:	b1 e4       	ldi	r27, 0x41	; 65
    207a:	89 ab       	std	Y+49, r24	; 0x31
    207c:	9a ab       	std	Y+50, r25	; 0x32
    207e:	ab ab       	std	Y+51, r26	; 0x33
    2080:	bc ab       	std	Y+52, r27	; 0x34
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2082:	69 a9       	ldd	r22, Y+49	; 0x31
    2084:	7a a9       	ldd	r23, Y+50	; 0x32
    2086:	8b a9       	ldd	r24, Y+51	; 0x33
    2088:	9c a9       	ldd	r25, Y+52	; 0x34
    208a:	20 e0       	ldi	r18, 0x00	; 0
    208c:	30 e0       	ldi	r19, 0x00	; 0
    208e:	4a e7       	ldi	r20, 0x7A	; 122
    2090:	55 e4       	ldi	r21, 0x45	; 69
    2092:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2096:	dc 01       	movw	r26, r24
    2098:	cb 01       	movw	r24, r22
    209a:	8d a7       	std	Y+45, r24	; 0x2d
    209c:	9e a7       	std	Y+46, r25	; 0x2e
    209e:	af a7       	std	Y+47, r26	; 0x2f
    20a0:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
    20a2:	6d a5       	ldd	r22, Y+45	; 0x2d
    20a4:	7e a5       	ldd	r23, Y+46	; 0x2e
    20a6:	8f a5       	ldd	r24, Y+47	; 0x2f
    20a8:	98 a9       	ldd	r25, Y+48	; 0x30
    20aa:	20 e0       	ldi	r18, 0x00	; 0
    20ac:	30 e0       	ldi	r19, 0x00	; 0
    20ae:	40 e8       	ldi	r20, 0x80	; 128
    20b0:	5f e3       	ldi	r21, 0x3F	; 63
    20b2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    20b6:	88 23       	and	r24, r24
    20b8:	2c f4       	brge	.+10     	; 0x20c4 <Lcd_vidinit+0xb6>
		__ticks = 1;
    20ba:	81 e0       	ldi	r24, 0x01	; 1
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	9c a7       	std	Y+44, r25	; 0x2c
    20c0:	8b a7       	std	Y+43, r24	; 0x2b
    20c2:	3f c0       	rjmp	.+126    	; 0x2142 <Lcd_vidinit+0x134>
	else if (__tmp > 65535)
    20c4:	6d a5       	ldd	r22, Y+45	; 0x2d
    20c6:	7e a5       	ldd	r23, Y+46	; 0x2e
    20c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    20ca:	98 a9       	ldd	r25, Y+48	; 0x30
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	3f ef       	ldi	r19, 0xFF	; 255
    20d0:	4f e7       	ldi	r20, 0x7F	; 127
    20d2:	57 e4       	ldi	r21, 0x47	; 71
    20d4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    20d8:	18 16       	cp	r1, r24
    20da:	4c f5       	brge	.+82     	; 0x212e <Lcd_vidinit+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20dc:	69 a9       	ldd	r22, Y+49	; 0x31
    20de:	7a a9       	ldd	r23, Y+50	; 0x32
    20e0:	8b a9       	ldd	r24, Y+51	; 0x33
    20e2:	9c a9       	ldd	r25, Y+52	; 0x34
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	40 e2       	ldi	r20, 0x20	; 32
    20ea:	51 e4       	ldi	r21, 0x41	; 65
    20ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20f0:	dc 01       	movw	r26, r24
    20f2:	cb 01       	movw	r24, r22
    20f4:	bc 01       	movw	r22, r24
    20f6:	cd 01       	movw	r24, r26
    20f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20fc:	dc 01       	movw	r26, r24
    20fe:	cb 01       	movw	r24, r22
    2100:	9c a7       	std	Y+44, r25	; 0x2c
    2102:	8b a7       	std	Y+43, r24	; 0x2b
    2104:	0f c0       	rjmp	.+30     	; 0x2124 <Lcd_vidinit+0x116>
    2106:	80 e9       	ldi	r24, 0x90	; 144
    2108:	91 e0       	ldi	r25, 0x01	; 1
    210a:	9a a7       	std	Y+42, r25	; 0x2a
    210c:	89 a7       	std	Y+41, r24	; 0x29
    210e:	89 a5       	ldd	r24, Y+41	; 0x29
    2110:	9a a5       	ldd	r25, Y+42	; 0x2a
    2112:	01 97       	sbiw	r24, 0x01	; 1
    2114:	f1 f7       	brne	.-4      	; 0x2112 <Lcd_vidinit+0x104>
    2116:	9a a7       	std	Y+42, r25	; 0x2a
    2118:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    211a:	8b a5       	ldd	r24, Y+43	; 0x2b
    211c:	9c a5       	ldd	r25, Y+44	; 0x2c
    211e:	01 97       	sbiw	r24, 0x01	; 1
    2120:	9c a7       	std	Y+44, r25	; 0x2c
    2122:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2124:	8b a5       	ldd	r24, Y+43	; 0x2b
    2126:	9c a5       	ldd	r25, Y+44	; 0x2c
    2128:	00 97       	sbiw	r24, 0x00	; 0
    212a:	69 f7       	brne	.-38     	; 0x2106 <Lcd_vidinit+0xf8>
    212c:	14 c0       	rjmp	.+40     	; 0x2156 <Lcd_vidinit+0x148>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    212e:	6d a5       	ldd	r22, Y+45	; 0x2d
    2130:	7e a5       	ldd	r23, Y+46	; 0x2e
    2132:	8f a5       	ldd	r24, Y+47	; 0x2f
    2134:	98 a9       	ldd	r25, Y+48	; 0x30
    2136:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    213a:	dc 01       	movw	r26, r24
    213c:	cb 01       	movw	r24, r22
    213e:	9c a7       	std	Y+44, r25	; 0x2c
    2140:	8b a7       	std	Y+43, r24	; 0x2b
    2142:	8b a5       	ldd	r24, Y+43	; 0x2b
    2144:	9c a5       	ldd	r25, Y+44	; 0x2c
    2146:	98 a7       	std	Y+40, r25	; 0x28
    2148:	8f a3       	std	Y+39, r24	; 0x27
    214a:	8f a1       	ldd	r24, Y+39	; 0x27
    214c:	98 a5       	ldd	r25, Y+40	; 0x28
    214e:	01 97       	sbiw	r24, 0x01	; 1
    2150:	f1 f7       	brne	.-4      	; 0x214e <Lcd_vidinit+0x140>
    2152:	98 a7       	std	Y+40, r25	; 0x28
    2154:	8f a3       	std	Y+39, r24	; 0x27

	_delay_ms(15);
	Lcd_vidCmd(0x03);
    2156:	83 e0       	ldi	r24, 0x03	; 3
    2158:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	a0 ea       	ldi	r26, 0xA0	; 160
    2162:	b0 e4       	ldi	r27, 0x40	; 64
    2164:	8b a3       	std	Y+35, r24	; 0x23
    2166:	9c a3       	std	Y+36, r25	; 0x24
    2168:	ad a3       	std	Y+37, r26	; 0x25
    216a:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    216c:	6b a1       	ldd	r22, Y+35	; 0x23
    216e:	7c a1       	ldd	r23, Y+36	; 0x24
    2170:	8d a1       	ldd	r24, Y+37	; 0x25
    2172:	9e a1       	ldd	r25, Y+38	; 0x26
    2174:	20 e0       	ldi	r18, 0x00	; 0
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	4a e7       	ldi	r20, 0x7A	; 122
    217a:	55 e4       	ldi	r21, 0x45	; 69
    217c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2180:	dc 01       	movw	r26, r24
    2182:	cb 01       	movw	r24, r22
    2184:	8f 8f       	std	Y+31, r24	; 0x1f
    2186:	98 a3       	std	Y+32, r25	; 0x20
    2188:	a9 a3       	std	Y+33, r26	; 0x21
    218a:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    218c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    218e:	78 a1       	ldd	r23, Y+32	; 0x20
    2190:	89 a1       	ldd	r24, Y+33	; 0x21
    2192:	9a a1       	ldd	r25, Y+34	; 0x22
    2194:	20 e0       	ldi	r18, 0x00	; 0
    2196:	30 e0       	ldi	r19, 0x00	; 0
    2198:	40 e8       	ldi	r20, 0x80	; 128
    219a:	5f e3       	ldi	r21, 0x3F	; 63
    219c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    21a0:	88 23       	and	r24, r24
    21a2:	2c f4       	brge	.+10     	; 0x21ae <Lcd_vidinit+0x1a0>
		__ticks = 1;
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	9e 8f       	std	Y+30, r25	; 0x1e
    21aa:	8d 8f       	std	Y+29, r24	; 0x1d
    21ac:	3f c0       	rjmp	.+126    	; 0x222c <Lcd_vidinit+0x21e>
	else if (__tmp > 65535)
    21ae:	6f 8d       	ldd	r22, Y+31	; 0x1f
    21b0:	78 a1       	ldd	r23, Y+32	; 0x20
    21b2:	89 a1       	ldd	r24, Y+33	; 0x21
    21b4:	9a a1       	ldd	r25, Y+34	; 0x22
    21b6:	20 e0       	ldi	r18, 0x00	; 0
    21b8:	3f ef       	ldi	r19, 0xFF	; 255
    21ba:	4f e7       	ldi	r20, 0x7F	; 127
    21bc:	57 e4       	ldi	r21, 0x47	; 71
    21be:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    21c2:	18 16       	cp	r1, r24
    21c4:	4c f5       	brge	.+82     	; 0x2218 <Lcd_vidinit+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21c6:	6b a1       	ldd	r22, Y+35	; 0x23
    21c8:	7c a1       	ldd	r23, Y+36	; 0x24
    21ca:	8d a1       	ldd	r24, Y+37	; 0x25
    21cc:	9e a1       	ldd	r25, Y+38	; 0x26
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	40 e2       	ldi	r20, 0x20	; 32
    21d4:	51 e4       	ldi	r21, 0x41	; 65
    21d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	bc 01       	movw	r22, r24
    21e0:	cd 01       	movw	r24, r26
    21e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21e6:	dc 01       	movw	r26, r24
    21e8:	cb 01       	movw	r24, r22
    21ea:	9e 8f       	std	Y+30, r25	; 0x1e
    21ec:	8d 8f       	std	Y+29, r24	; 0x1d
    21ee:	0f c0       	rjmp	.+30     	; 0x220e <Lcd_vidinit+0x200>
    21f0:	80 e9       	ldi	r24, 0x90	; 144
    21f2:	91 e0       	ldi	r25, 0x01	; 1
    21f4:	9c 8f       	std	Y+28, r25	; 0x1c
    21f6:	8b 8f       	std	Y+27, r24	; 0x1b
    21f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21fc:	01 97       	sbiw	r24, 0x01	; 1
    21fe:	f1 f7       	brne	.-4      	; 0x21fc <Lcd_vidinit+0x1ee>
    2200:	9c 8f       	std	Y+28, r25	; 0x1c
    2202:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2204:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2206:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	9e 8f       	std	Y+30, r25	; 0x1e
    220c:	8d 8f       	std	Y+29, r24	; 0x1d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    220e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2210:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2212:	00 97       	sbiw	r24, 0x00	; 0
    2214:	69 f7       	brne	.-38     	; 0x21f0 <Lcd_vidinit+0x1e2>
    2216:	14 c0       	rjmp	.+40     	; 0x2240 <Lcd_vidinit+0x232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2218:	6f 8d       	ldd	r22, Y+31	; 0x1f
    221a:	78 a1       	ldd	r23, Y+32	; 0x20
    221c:	89 a1       	ldd	r24, Y+33	; 0x21
    221e:	9a a1       	ldd	r25, Y+34	; 0x22
    2220:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2224:	dc 01       	movw	r26, r24
    2226:	cb 01       	movw	r24, r22
    2228:	9e 8f       	std	Y+30, r25	; 0x1e
    222a:	8d 8f       	std	Y+29, r24	; 0x1d
    222c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    222e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2230:	9a 8f       	std	Y+26, r25	; 0x1a
    2232:	89 8f       	std	Y+25, r24	; 0x19
    2234:	89 8d       	ldd	r24, Y+25	; 0x19
    2236:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2238:	01 97       	sbiw	r24, 0x01	; 1
    223a:	f1 f7       	brne	.-4      	; 0x2238 <Lcd_vidinit+0x22a>
    223c:	9a 8f       	std	Y+26, r25	; 0x1a
    223e:	89 8f       	std	Y+25, r24	; 0x19
	_delay_ms(5);
	Lcd_vidCmd(0x03);
    2240:	83 e0       	ldi	r24, 0x03	; 3
    2242:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
    2246:	80 e0       	ldi	r24, 0x00	; 0
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	a8 ec       	ldi	r26, 0xC8	; 200
    224c:	b2 e4       	ldi	r27, 0x42	; 66
    224e:	8d 8b       	std	Y+21, r24	; 0x15
    2250:	9e 8b       	std	Y+22, r25	; 0x16
    2252:	af 8b       	std	Y+23, r26	; 0x17
    2254:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2256:	6d 89       	ldd	r22, Y+21	; 0x15
    2258:	7e 89       	ldd	r23, Y+22	; 0x16
    225a:	8f 89       	ldd	r24, Y+23	; 0x17
    225c:	98 8d       	ldd	r25, Y+24	; 0x18
    225e:	2b ea       	ldi	r18, 0xAB	; 171
    2260:	3a ea       	ldi	r19, 0xAA	; 170
    2262:	4a ea       	ldi	r20, 0xAA	; 170
    2264:	50 e4       	ldi	r21, 0x40	; 64
    2266:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	89 8b       	std	Y+17, r24	; 0x11
    2270:	9a 8b       	std	Y+18, r25	; 0x12
    2272:	ab 8b       	std	Y+19, r26	; 0x13
    2274:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2276:	69 89       	ldd	r22, Y+17	; 0x11
    2278:	7a 89       	ldd	r23, Y+18	; 0x12
    227a:	8b 89       	ldd	r24, Y+19	; 0x13
    227c:	9c 89       	ldd	r25, Y+20	; 0x14
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	40 e8       	ldi	r20, 0x80	; 128
    2284:	5f e3       	ldi	r21, 0x3F	; 63
    2286:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    228a:	88 23       	and	r24, r24
    228c:	1c f4       	brge	.+6      	; 0x2294 <Lcd_vidinit+0x286>
		__ticks = 1;
    228e:	81 e0       	ldi	r24, 0x01	; 1
    2290:	88 8b       	std	Y+16, r24	; 0x10
    2292:	91 c0       	rjmp	.+290    	; 0x23b6 <Lcd_vidinit+0x3a8>
	else if (__tmp > 255)
    2294:	69 89       	ldd	r22, Y+17	; 0x11
    2296:	7a 89       	ldd	r23, Y+18	; 0x12
    2298:	8b 89       	ldd	r24, Y+19	; 0x13
    229a:	9c 89       	ldd	r25, Y+20	; 0x14
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	4f e7       	ldi	r20, 0x7F	; 127
    22a2:	53 e4       	ldi	r21, 0x43	; 67
    22a4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    22a8:	18 16       	cp	r1, r24
    22aa:	0c f0       	brlt	.+2      	; 0x22ae <Lcd_vidinit+0x2a0>
    22ac:	7b c0       	rjmp	.+246    	; 0x23a4 <Lcd_vidinit+0x396>
	{
		_delay_ms(__us / 1000.0);
    22ae:	6d 89       	ldd	r22, Y+21	; 0x15
    22b0:	7e 89       	ldd	r23, Y+22	; 0x16
    22b2:	8f 89       	ldd	r24, Y+23	; 0x17
    22b4:	98 8d       	ldd	r25, Y+24	; 0x18
    22b6:	20 e0       	ldi	r18, 0x00	; 0
    22b8:	30 e0       	ldi	r19, 0x00	; 0
    22ba:	4a e7       	ldi	r20, 0x7A	; 122
    22bc:	54 e4       	ldi	r21, 0x44	; 68
    22be:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    22c2:	dc 01       	movw	r26, r24
    22c4:	cb 01       	movw	r24, r22
    22c6:	8c 87       	std	Y+12, r24	; 0x0c
    22c8:	9d 87       	std	Y+13, r25	; 0x0d
    22ca:	ae 87       	std	Y+14, r26	; 0x0e
    22cc:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22ce:	6c 85       	ldd	r22, Y+12	; 0x0c
    22d0:	7d 85       	ldd	r23, Y+13	; 0x0d
    22d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    22d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	4a e7       	ldi	r20, 0x7A	; 122
    22dc:	55 e4       	ldi	r21, 0x45	; 69
    22de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	88 87       	std	Y+8, r24	; 0x08
    22e8:	99 87       	std	Y+9, r25	; 0x09
    22ea:	aa 87       	std	Y+10, r26	; 0x0a
    22ec:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    22ee:	68 85       	ldd	r22, Y+8	; 0x08
    22f0:	79 85       	ldd	r23, Y+9	; 0x09
    22f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    22f4:	9b 85       	ldd	r25, Y+11	; 0x0b
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	40 e8       	ldi	r20, 0x80	; 128
    22fc:	5f e3       	ldi	r21, 0x3F	; 63
    22fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2302:	88 23       	and	r24, r24
    2304:	2c f4       	brge	.+10     	; 0x2310 <Lcd_vidinit+0x302>
		__ticks = 1;
    2306:	81 e0       	ldi	r24, 0x01	; 1
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	9f 83       	std	Y+7, r25	; 0x07
    230c:	8e 83       	std	Y+6, r24	; 0x06
    230e:	3f c0       	rjmp	.+126    	; 0x238e <Lcd_vidinit+0x380>
	else if (__tmp > 65535)
    2310:	68 85       	ldd	r22, Y+8	; 0x08
    2312:	79 85       	ldd	r23, Y+9	; 0x09
    2314:	8a 85       	ldd	r24, Y+10	; 0x0a
    2316:	9b 85       	ldd	r25, Y+11	; 0x0b
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	3f ef       	ldi	r19, 0xFF	; 255
    231c:	4f e7       	ldi	r20, 0x7F	; 127
    231e:	57 e4       	ldi	r21, 0x47	; 71
    2320:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2324:	18 16       	cp	r1, r24
    2326:	4c f5       	brge	.+82     	; 0x237a <Lcd_vidinit+0x36c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2328:	6c 85       	ldd	r22, Y+12	; 0x0c
    232a:	7d 85       	ldd	r23, Y+13	; 0x0d
    232c:	8e 85       	ldd	r24, Y+14	; 0x0e
    232e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	40 e2       	ldi	r20, 0x20	; 32
    2336:	51 e4       	ldi	r21, 0x41	; 65
    2338:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    233c:	dc 01       	movw	r26, r24
    233e:	cb 01       	movw	r24, r22
    2340:	bc 01       	movw	r22, r24
    2342:	cd 01       	movw	r24, r26
    2344:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2348:	dc 01       	movw	r26, r24
    234a:	cb 01       	movw	r24, r22
    234c:	9f 83       	std	Y+7, r25	; 0x07
    234e:	8e 83       	std	Y+6, r24	; 0x06
    2350:	0f c0       	rjmp	.+30     	; 0x2370 <Lcd_vidinit+0x362>
    2352:	80 e9       	ldi	r24, 0x90	; 144
    2354:	91 e0       	ldi	r25, 0x01	; 1
    2356:	9d 83       	std	Y+5, r25	; 0x05
    2358:	8c 83       	std	Y+4, r24	; 0x04
    235a:	8c 81       	ldd	r24, Y+4	; 0x04
    235c:	9d 81       	ldd	r25, Y+5	; 0x05
    235e:	01 97       	sbiw	r24, 0x01	; 1
    2360:	f1 f7       	brne	.-4      	; 0x235e <Lcd_vidinit+0x350>
    2362:	9d 83       	std	Y+5, r25	; 0x05
    2364:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2366:	8e 81       	ldd	r24, Y+6	; 0x06
    2368:	9f 81       	ldd	r25, Y+7	; 0x07
    236a:	01 97       	sbiw	r24, 0x01	; 1
    236c:	9f 83       	std	Y+7, r25	; 0x07
    236e:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2370:	8e 81       	ldd	r24, Y+6	; 0x06
    2372:	9f 81       	ldd	r25, Y+7	; 0x07
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	69 f7       	brne	.-38     	; 0x2352 <Lcd_vidinit+0x344>
    2378:	24 c0       	rjmp	.+72     	; 0x23c2 <Lcd_vidinit+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237a:	68 85       	ldd	r22, Y+8	; 0x08
    237c:	79 85       	ldd	r23, Y+9	; 0x09
    237e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2380:	9b 85       	ldd	r25, Y+11	; 0x0b
    2382:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2386:	dc 01       	movw	r26, r24
    2388:	cb 01       	movw	r24, r22
    238a:	9f 83       	std	Y+7, r25	; 0x07
    238c:	8e 83       	std	Y+6, r24	; 0x06
    238e:	8e 81       	ldd	r24, Y+6	; 0x06
    2390:	9f 81       	ldd	r25, Y+7	; 0x07
    2392:	9b 83       	std	Y+3, r25	; 0x03
    2394:	8a 83       	std	Y+2, r24	; 0x02
    2396:	8a 81       	ldd	r24, Y+2	; 0x02
    2398:	9b 81       	ldd	r25, Y+3	; 0x03
    239a:	01 97       	sbiw	r24, 0x01	; 1
    239c:	f1 f7       	brne	.-4      	; 0x239a <Lcd_vidinit+0x38c>
    239e:	9b 83       	std	Y+3, r25	; 0x03
    23a0:	8a 83       	std	Y+2, r24	; 0x02
    23a2:	0f c0       	rjmp	.+30     	; 0x23c2 <Lcd_vidinit+0x3b4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    23a4:	69 89       	ldd	r22, Y+17	; 0x11
    23a6:	7a 89       	ldd	r23, Y+18	; 0x12
    23a8:	8b 89       	ldd	r24, Y+19	; 0x13
    23aa:	9c 89       	ldd	r25, Y+20	; 0x14
    23ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23b0:	dc 01       	movw	r26, r24
    23b2:	cb 01       	movw	r24, r22
    23b4:	88 8b       	std	Y+16, r24	; 0x10
    23b6:	88 89       	ldd	r24, Y+16	; 0x10
    23b8:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    23ba:	89 81       	ldd	r24, Y+1	; 0x01
    23bc:	8a 95       	dec	r24
    23be:	f1 f7       	brne	.-4      	; 0x23bc <Lcd_vidinit+0x3ae>
    23c0:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(100);
	Lcd_vidCmd(0x03);
    23c2:	83 e0       	ldi	r24, 0x03	; 3
    23c4:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
	Lcd_vidCmd(0x02);
    23c8:	82 e0       	ldi	r24, 0x02	; 2
    23ca:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
	Lcd_vidCmd(_LCD_4BIT_MODE);
    23ce:	88 e2       	ldi	r24, 0x28	; 40
    23d0:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
}
    23d4:	e4 96       	adiw	r28, 0x34	; 52
    23d6:	0f b6       	in	r0, 0x3f	; 63
    23d8:	f8 94       	cli
    23da:	de bf       	out	0x3e, r29	; 62
    23dc:	0f be       	out	0x3f, r0	; 63
    23de:	cd bf       	out	0x3d, r28	; 61
    23e0:	cf 91       	pop	r28
    23e2:	df 91       	pop	r29
    23e4:	08 95       	ret

000023e6 <Lcd_VidenablePulse>:

static void Lcd_VidenablePulse(void) //not in .h and static as user will not use it
{
    23e6:	df 93       	push	r29
    23e8:	cf 93       	push	r28
    23ea:	cd b7       	in	r28, 0x3d	; 61
    23ec:	de b7       	in	r29, 0x3e	; 62
    23ee:	a6 97       	sbiw	r28, 0x26	; 38
    23f0:	0f b6       	in	r0, 0x3f	; 63
    23f2:	f8 94       	cli
    23f4:	de bf       	out	0x3e, r29	; 62
    23f6:	0f be       	out	0x3f, r0	; 63
    23f8:	cd bf       	out	0x3d, r28	; 61
	//send enable pulse
		Dio_vidwriteChanel(DIO_PORTB , DIO_PIN3 , DIO_HIGH);
    23fa:	81 e0       	ldi	r24, 0x01	; 1
    23fc:	63 e0       	ldi	r22, 0x03	; 3
    23fe:	41 e0       	ldi	r20, 0x01	; 1
    2400:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <Dio_vidwriteChanel>
    2404:	80 e0       	ldi	r24, 0x00	; 0
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	a0 e8       	ldi	r26, 0x80	; 128
    240a:	bf e3       	ldi	r27, 0x3F	; 63
    240c:	8b a3       	std	Y+35, r24	; 0x23
    240e:	9c a3       	std	Y+36, r25	; 0x24
    2410:	ad a3       	std	Y+37, r26	; 0x25
    2412:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2414:	6b a1       	ldd	r22, Y+35	; 0x23
    2416:	7c a1       	ldd	r23, Y+36	; 0x24
    2418:	8d a1       	ldd	r24, Y+37	; 0x25
    241a:	9e a1       	ldd	r25, Y+38	; 0x26
    241c:	2b ea       	ldi	r18, 0xAB	; 171
    241e:	3a ea       	ldi	r19, 0xAA	; 170
    2420:	4a ea       	ldi	r20, 0xAA	; 170
    2422:	50 e4       	ldi	r21, 0x40	; 64
    2424:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	8f 8f       	std	Y+31, r24	; 0x1f
    242e:	98 a3       	std	Y+32, r25	; 0x20
    2430:	a9 a3       	std	Y+33, r26	; 0x21
    2432:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    2434:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2436:	78 a1       	ldd	r23, Y+32	; 0x20
    2438:	89 a1       	ldd	r24, Y+33	; 0x21
    243a:	9a a1       	ldd	r25, Y+34	; 0x22
    243c:	20 e0       	ldi	r18, 0x00	; 0
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	40 e8       	ldi	r20, 0x80	; 128
    2442:	5f e3       	ldi	r21, 0x3F	; 63
    2444:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2448:	88 23       	and	r24, r24
    244a:	1c f4       	brge	.+6      	; 0x2452 <Lcd_VidenablePulse+0x6c>
		__ticks = 1;
    244c:	81 e0       	ldi	r24, 0x01	; 1
    244e:	8e 8f       	std	Y+30, r24	; 0x1e
    2450:	91 c0       	rjmp	.+290    	; 0x2574 <Lcd_VidenablePulse+0x18e>
	else if (__tmp > 255)
    2452:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2454:	78 a1       	ldd	r23, Y+32	; 0x20
    2456:	89 a1       	ldd	r24, Y+33	; 0x21
    2458:	9a a1       	ldd	r25, Y+34	; 0x22
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	4f e7       	ldi	r20, 0x7F	; 127
    2460:	53 e4       	ldi	r21, 0x43	; 67
    2462:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2466:	18 16       	cp	r1, r24
    2468:	0c f0       	brlt	.+2      	; 0x246c <Lcd_VidenablePulse+0x86>
    246a:	7b c0       	rjmp	.+246    	; 0x2562 <Lcd_VidenablePulse+0x17c>
	{
		_delay_ms(__us / 1000.0);
    246c:	6b a1       	ldd	r22, Y+35	; 0x23
    246e:	7c a1       	ldd	r23, Y+36	; 0x24
    2470:	8d a1       	ldd	r24, Y+37	; 0x25
    2472:	9e a1       	ldd	r25, Y+38	; 0x26
    2474:	20 e0       	ldi	r18, 0x00	; 0
    2476:	30 e0       	ldi	r19, 0x00	; 0
    2478:	4a e7       	ldi	r20, 0x7A	; 122
    247a:	54 e4       	ldi	r21, 0x44	; 68
    247c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2480:	dc 01       	movw	r26, r24
    2482:	cb 01       	movw	r24, r22
    2484:	8a 8f       	std	Y+26, r24	; 0x1a
    2486:	9b 8f       	std	Y+27, r25	; 0x1b
    2488:	ac 8f       	std	Y+28, r26	; 0x1c
    248a:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    248c:	6a 8d       	ldd	r22, Y+26	; 0x1a
    248e:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2490:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2492:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2494:	20 e0       	ldi	r18, 0x00	; 0
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	4a e7       	ldi	r20, 0x7A	; 122
    249a:	55 e4       	ldi	r21, 0x45	; 69
    249c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24a0:	dc 01       	movw	r26, r24
    24a2:	cb 01       	movw	r24, r22
    24a4:	8e 8b       	std	Y+22, r24	; 0x16
    24a6:	9f 8b       	std	Y+23, r25	; 0x17
    24a8:	a8 8f       	std	Y+24, r26	; 0x18
    24aa:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    24ac:	6e 89       	ldd	r22, Y+22	; 0x16
    24ae:	7f 89       	ldd	r23, Y+23	; 0x17
    24b0:	88 8d       	ldd	r24, Y+24	; 0x18
    24b2:	99 8d       	ldd	r25, Y+25	; 0x19
    24b4:	20 e0       	ldi	r18, 0x00	; 0
    24b6:	30 e0       	ldi	r19, 0x00	; 0
    24b8:	40 e8       	ldi	r20, 0x80	; 128
    24ba:	5f e3       	ldi	r21, 0x3F	; 63
    24bc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    24c0:	88 23       	and	r24, r24
    24c2:	2c f4       	brge	.+10     	; 0x24ce <Lcd_VidenablePulse+0xe8>
		__ticks = 1;
    24c4:	81 e0       	ldi	r24, 0x01	; 1
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	9d 8b       	std	Y+21, r25	; 0x15
    24ca:	8c 8b       	std	Y+20, r24	; 0x14
    24cc:	3f c0       	rjmp	.+126    	; 0x254c <Lcd_VidenablePulse+0x166>
	else if (__tmp > 65535)
    24ce:	6e 89       	ldd	r22, Y+22	; 0x16
    24d0:	7f 89       	ldd	r23, Y+23	; 0x17
    24d2:	88 8d       	ldd	r24, Y+24	; 0x18
    24d4:	99 8d       	ldd	r25, Y+25	; 0x19
    24d6:	20 e0       	ldi	r18, 0x00	; 0
    24d8:	3f ef       	ldi	r19, 0xFF	; 255
    24da:	4f e7       	ldi	r20, 0x7F	; 127
    24dc:	57 e4       	ldi	r21, 0x47	; 71
    24de:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    24e2:	18 16       	cp	r1, r24
    24e4:	4c f5       	brge	.+82     	; 0x2538 <Lcd_VidenablePulse+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24e6:	6a 8d       	ldd	r22, Y+26	; 0x1a
    24e8:	7b 8d       	ldd	r23, Y+27	; 0x1b
    24ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
    24ec:	9d 8d       	ldd	r25, Y+29	; 0x1d
    24ee:	20 e0       	ldi	r18, 0x00	; 0
    24f0:	30 e0       	ldi	r19, 0x00	; 0
    24f2:	40 e2       	ldi	r20, 0x20	; 32
    24f4:	51 e4       	ldi	r21, 0x41	; 65
    24f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24fa:	dc 01       	movw	r26, r24
    24fc:	cb 01       	movw	r24, r22
    24fe:	bc 01       	movw	r22, r24
    2500:	cd 01       	movw	r24, r26
    2502:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2506:	dc 01       	movw	r26, r24
    2508:	cb 01       	movw	r24, r22
    250a:	9d 8b       	std	Y+21, r25	; 0x15
    250c:	8c 8b       	std	Y+20, r24	; 0x14
    250e:	0f c0       	rjmp	.+30     	; 0x252e <Lcd_VidenablePulse+0x148>
    2510:	80 e9       	ldi	r24, 0x90	; 144
    2512:	91 e0       	ldi	r25, 0x01	; 1
    2514:	9b 8b       	std	Y+19, r25	; 0x13
    2516:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2518:	8a 89       	ldd	r24, Y+18	; 0x12
    251a:	9b 89       	ldd	r25, Y+19	; 0x13
    251c:	01 97       	sbiw	r24, 0x01	; 1
    251e:	f1 f7       	brne	.-4      	; 0x251c <Lcd_VidenablePulse+0x136>
    2520:	9b 8b       	std	Y+19, r25	; 0x13
    2522:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2524:	8c 89       	ldd	r24, Y+20	; 0x14
    2526:	9d 89       	ldd	r25, Y+21	; 0x15
    2528:	01 97       	sbiw	r24, 0x01	; 1
    252a:	9d 8b       	std	Y+21, r25	; 0x15
    252c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    252e:	8c 89       	ldd	r24, Y+20	; 0x14
    2530:	9d 89       	ldd	r25, Y+21	; 0x15
    2532:	00 97       	sbiw	r24, 0x00	; 0
    2534:	69 f7       	brne	.-38     	; 0x2510 <Lcd_VidenablePulse+0x12a>
    2536:	24 c0       	rjmp	.+72     	; 0x2580 <Lcd_VidenablePulse+0x19a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2538:	6e 89       	ldd	r22, Y+22	; 0x16
    253a:	7f 89       	ldd	r23, Y+23	; 0x17
    253c:	88 8d       	ldd	r24, Y+24	; 0x18
    253e:	99 8d       	ldd	r25, Y+25	; 0x19
    2540:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2544:	dc 01       	movw	r26, r24
    2546:	cb 01       	movw	r24, r22
    2548:	9d 8b       	std	Y+21, r25	; 0x15
    254a:	8c 8b       	std	Y+20, r24	; 0x14
    254c:	8c 89       	ldd	r24, Y+20	; 0x14
    254e:	9d 89       	ldd	r25, Y+21	; 0x15
    2550:	99 8b       	std	Y+17, r25	; 0x11
    2552:	88 8b       	std	Y+16, r24	; 0x10
    2554:	88 89       	ldd	r24, Y+16	; 0x10
    2556:	99 89       	ldd	r25, Y+17	; 0x11
    2558:	01 97       	sbiw	r24, 0x01	; 1
    255a:	f1 f7       	brne	.-4      	; 0x2558 <Lcd_VidenablePulse+0x172>
    255c:	99 8b       	std	Y+17, r25	; 0x11
    255e:	88 8b       	std	Y+16, r24	; 0x10
    2560:	0f c0       	rjmp	.+30     	; 0x2580 <Lcd_VidenablePulse+0x19a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2562:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2564:	78 a1       	ldd	r23, Y+32	; 0x20
    2566:	89 a1       	ldd	r24, Y+33	; 0x21
    2568:	9a a1       	ldd	r25, Y+34	; 0x22
    256a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	8e 8f       	std	Y+30, r24	; 0x1e
    2574:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2576:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2578:	8f 85       	ldd	r24, Y+15	; 0x0f
    257a:	8a 95       	dec	r24
    257c:	f1 f7       	brne	.-4      	; 0x257a <Lcd_VidenablePulse+0x194>
    257e:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_us(1);
		Dio_vidwriteChanel(DIO_PORTB , DIO_PIN3 , DIO_LOW);
    2580:	81 e0       	ldi	r24, 0x01	; 1
    2582:	63 e0       	ldi	r22, 0x03	; 3
    2584:	40 e0       	ldi	r20, 0x00	; 0
    2586:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <Dio_vidwriteChanel>
    258a:	80 e0       	ldi	r24, 0x00	; 0
    258c:	90 e0       	ldi	r25, 0x00	; 0
    258e:	a0 e0       	ldi	r26, 0x00	; 0
    2590:	b0 e4       	ldi	r27, 0x40	; 64
    2592:	8b 87       	std	Y+11, r24	; 0x0b
    2594:	9c 87       	std	Y+12, r25	; 0x0c
    2596:	ad 87       	std	Y+13, r26	; 0x0d
    2598:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    259a:	6b 85       	ldd	r22, Y+11	; 0x0b
    259c:	7c 85       	ldd	r23, Y+12	; 0x0c
    259e:	8d 85       	ldd	r24, Y+13	; 0x0d
    25a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    25a2:	20 e0       	ldi	r18, 0x00	; 0
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	4a e7       	ldi	r20, 0x7A	; 122
    25a8:	55 e4       	ldi	r21, 0x45	; 69
    25aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ae:	dc 01       	movw	r26, r24
    25b0:	cb 01       	movw	r24, r22
    25b2:	8f 83       	std	Y+7, r24	; 0x07
    25b4:	98 87       	std	Y+8, r25	; 0x08
    25b6:	a9 87       	std	Y+9, r26	; 0x09
    25b8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    25ba:	6f 81       	ldd	r22, Y+7	; 0x07
    25bc:	78 85       	ldd	r23, Y+8	; 0x08
    25be:	89 85       	ldd	r24, Y+9	; 0x09
    25c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	30 e0       	ldi	r19, 0x00	; 0
    25c6:	40 e8       	ldi	r20, 0x80	; 128
    25c8:	5f e3       	ldi	r21, 0x3F	; 63
    25ca:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    25ce:	88 23       	and	r24, r24
    25d0:	2c f4       	brge	.+10     	; 0x25dc <Lcd_VidenablePulse+0x1f6>
		__ticks = 1;
    25d2:	81 e0       	ldi	r24, 0x01	; 1
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	9e 83       	std	Y+6, r25	; 0x06
    25d8:	8d 83       	std	Y+5, r24	; 0x05
    25da:	3f c0       	rjmp	.+126    	; 0x265a <Lcd_VidenablePulse+0x274>
	else if (__tmp > 65535)
    25dc:	6f 81       	ldd	r22, Y+7	; 0x07
    25de:	78 85       	ldd	r23, Y+8	; 0x08
    25e0:	89 85       	ldd	r24, Y+9	; 0x09
    25e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25e4:	20 e0       	ldi	r18, 0x00	; 0
    25e6:	3f ef       	ldi	r19, 0xFF	; 255
    25e8:	4f e7       	ldi	r20, 0x7F	; 127
    25ea:	57 e4       	ldi	r21, 0x47	; 71
    25ec:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    25f0:	18 16       	cp	r1, r24
    25f2:	4c f5       	brge	.+82     	; 0x2646 <Lcd_VidenablePulse+0x260>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    25f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    25f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    25fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    25fc:	20 e0       	ldi	r18, 0x00	; 0
    25fe:	30 e0       	ldi	r19, 0x00	; 0
    2600:	40 e2       	ldi	r20, 0x20	; 32
    2602:	51 e4       	ldi	r21, 0x41	; 65
    2604:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2608:	dc 01       	movw	r26, r24
    260a:	cb 01       	movw	r24, r22
    260c:	bc 01       	movw	r22, r24
    260e:	cd 01       	movw	r24, r26
    2610:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2614:	dc 01       	movw	r26, r24
    2616:	cb 01       	movw	r24, r22
    2618:	9e 83       	std	Y+6, r25	; 0x06
    261a:	8d 83       	std	Y+5, r24	; 0x05
    261c:	0f c0       	rjmp	.+30     	; 0x263c <Lcd_VidenablePulse+0x256>
    261e:	80 e9       	ldi	r24, 0x90	; 144
    2620:	91 e0       	ldi	r25, 0x01	; 1
    2622:	9c 83       	std	Y+4, r25	; 0x04
    2624:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2626:	8b 81       	ldd	r24, Y+3	; 0x03
    2628:	9c 81       	ldd	r25, Y+4	; 0x04
    262a:	01 97       	sbiw	r24, 0x01	; 1
    262c:	f1 f7       	brne	.-4      	; 0x262a <Lcd_VidenablePulse+0x244>
    262e:	9c 83       	std	Y+4, r25	; 0x04
    2630:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2632:	8d 81       	ldd	r24, Y+5	; 0x05
    2634:	9e 81       	ldd	r25, Y+6	; 0x06
    2636:	01 97       	sbiw	r24, 0x01	; 1
    2638:	9e 83       	std	Y+6, r25	; 0x06
    263a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    263c:	8d 81       	ldd	r24, Y+5	; 0x05
    263e:	9e 81       	ldd	r25, Y+6	; 0x06
    2640:	00 97       	sbiw	r24, 0x00	; 0
    2642:	69 f7       	brne	.-38     	; 0x261e <Lcd_VidenablePulse+0x238>
    2644:	14 c0       	rjmp	.+40     	; 0x266e <Lcd_VidenablePulse+0x288>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2646:	6f 81       	ldd	r22, Y+7	; 0x07
    2648:	78 85       	ldd	r23, Y+8	; 0x08
    264a:	89 85       	ldd	r24, Y+9	; 0x09
    264c:	9a 85       	ldd	r25, Y+10	; 0x0a
    264e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2652:	dc 01       	movw	r26, r24
    2654:	cb 01       	movw	r24, r22
    2656:	9e 83       	std	Y+6, r25	; 0x06
    2658:	8d 83       	std	Y+5, r24	; 0x05
    265a:	8d 81       	ldd	r24, Y+5	; 0x05
    265c:	9e 81       	ldd	r25, Y+6	; 0x06
    265e:	9a 83       	std	Y+2, r25	; 0x02
    2660:	89 83       	std	Y+1, r24	; 0x01
    2662:	89 81       	ldd	r24, Y+1	; 0x01
    2664:	9a 81       	ldd	r25, Y+2	; 0x02
    2666:	01 97       	sbiw	r24, 0x01	; 1
    2668:	f1 f7       	brne	.-4      	; 0x2666 <Lcd_VidenablePulse+0x280>
    266a:	9a 83       	std	Y+2, r25	; 0x02
    266c:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
}
    266e:	a6 96       	adiw	r28, 0x26	; 38
    2670:	0f b6       	in	r0, 0x3f	; 63
    2672:	f8 94       	cli
    2674:	de bf       	out	0x3e, r29	; 62
    2676:	0f be       	out	0x3f, r0	; 63
    2678:	cd bf       	out	0x3d, r28	; 61
    267a:	cf 91       	pop	r28
    267c:	df 91       	pop	r29
    267e:	08 95       	ret

00002680 <Lcd_vidDisplayChar>:

void Lcd_vidDisplayChar(u8 chr)
{
    2680:	df 93       	push	r29
    2682:	cf 93       	push	r28
    2684:	00 d0       	rcall	.+0      	; 0x2686 <Lcd_vidDisplayChar+0x6>
    2686:	0f 92       	push	r0
    2688:	cd b7       	in	r28, 0x3d	; 61
    268a:	de b7       	in	r29, 0x3e	; 62
    268c:	8b 83       	std	Y+3, r24	; 0x03
	//    MSB  LSB
	//0b 1101 1001
	u8 loc_MSB = chr & 0xF0;  //0xF0 = ~LCD_MASK  //1101 0000
    268e:	8b 81       	ldd	r24, Y+3	; 0x03
    2690:	80 7f       	andi	r24, 0xF0	; 240
    2692:	8a 83       	std	Y+2, r24	; 0x02
	u8 loc_LSB = chr << 4;						  //1001 0000
    2694:	8b 81       	ldd	r24, Y+3	; 0x03
    2696:	82 95       	swap	r24
    2698:	80 7f       	andi	r24, 0xF0	; 240
    269a:	89 83       	std	Y+1, r24	; 0x01

	// RS->1
	Dio_vidwriteChanel(DIO_PORTB , DIO_PIN1 , DIO_HIGH);
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	61 e0       	ldi	r22, 0x01	; 1
    26a0:	41 e0       	ldi	r20, 0x01	; 1
    26a2:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <Dio_vidwriteChanel>

	// Write data to MSB
	Dio_vidWriteChanelGroup(DIO_PORTA , loc_MSB , LCD_MASK);
    26a6:	80 e0       	ldi	r24, 0x00	; 0
    26a8:	6a 81       	ldd	r22, Y+2	; 0x02
    26aa:	4f e0       	ldi	r20, 0x0F	; 15
    26ac:	0e 94 1a 17 	call	0x2e34	; 0x2e34 <Dio_vidWriteChanelGroup>

	//send enable pulse
	Lcd_VidenablePulse();
    26b0:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <Lcd_VidenablePulse>

	// Write data to LSB
	Dio_vidWriteChanelGroup(DIO_PORTA , loc_LSB , LCD_MASK);
    26b4:	80 e0       	ldi	r24, 0x00	; 0
    26b6:	69 81       	ldd	r22, Y+1	; 0x01
    26b8:	4f e0       	ldi	r20, 0x0F	; 15
    26ba:	0e 94 1a 17 	call	0x2e34	; 0x2e34 <Dio_vidWriteChanelGroup>

	//send enable pulse
	Lcd_VidenablePulse();
    26be:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <Lcd_VidenablePulse>

}
    26c2:	0f 90       	pop	r0
    26c4:	0f 90       	pop	r0
    26c6:	0f 90       	pop	r0
    26c8:	cf 91       	pop	r28
    26ca:	df 91       	pop	r29
    26cc:	08 95       	ret

000026ce <Lcd_vidDisplayStr>:

void Lcd_vidDisplayStr(u8 * str)
{
    26ce:	df 93       	push	r29
    26d0:	cf 93       	push	r28
    26d2:	00 d0       	rcall	.+0      	; 0x26d4 <Lcd_vidDisplayStr+0x6>
    26d4:	cd b7       	in	r28, 0x3d	; 61
    26d6:	de b7       	in	r29, 0x3e	; 62
    26d8:	9a 83       	std	Y+2, r25	; 0x02
    26da:	89 83       	std	Y+1, r24	; 0x01
    26dc:	0a c0       	rjmp	.+20     	; 0x26f2 <Lcd_vidDisplayStr+0x24>
	while (*str != '\0')
	{
		Lcd_vidDisplayChar(*str);
    26de:	e9 81       	ldd	r30, Y+1	; 0x01
    26e0:	fa 81       	ldd	r31, Y+2	; 0x02
    26e2:	80 81       	ld	r24, Z
    26e4:	0e 94 40 13 	call	0x2680	; 0x2680 <Lcd_vidDisplayChar>
		str++;
    26e8:	89 81       	ldd	r24, Y+1	; 0x01
    26ea:	9a 81       	ldd	r25, Y+2	; 0x02
    26ec:	01 96       	adiw	r24, 0x01	; 1
    26ee:	9a 83       	std	Y+2, r25	; 0x02
    26f0:	89 83       	std	Y+1, r24	; 0x01

}

void Lcd_vidDisplayStr(u8 * str)
{
	while (*str != '\0')
    26f2:	e9 81       	ldd	r30, Y+1	; 0x01
    26f4:	fa 81       	ldd	r31, Y+2	; 0x02
    26f6:	80 81       	ld	r24, Z
    26f8:	88 23       	and	r24, r24
    26fa:	89 f7       	brne	.-30     	; 0x26de <Lcd_vidDisplayStr+0x10>
	{
		Lcd_vidDisplayChar(*str);
		str++;
	}
}
    26fc:	0f 90       	pop	r0
    26fe:	0f 90       	pop	r0
    2700:	cf 91       	pop	r28
    2702:	df 91       	pop	r29
    2704:	08 95       	ret

00002706 <LCD_vidDisplayInt>:

void LCD_vidDisplayInt(u32 num)
{
    2706:	df 93       	push	r29
    2708:	cf 93       	push	r28
    270a:	cd b7       	in	r28, 0x3d	; 61
    270c:	de b7       	in	r29, 0x3e	; 62
    270e:	29 97       	sbiw	r28, 0x09	; 9
    2710:	0f b6       	in	r0, 0x3f	; 63
    2712:	f8 94       	cli
    2714:	de bf       	out	0x3e, r29	; 62
    2716:	0f be       	out	0x3f, r0	; 63
    2718:	cd bf       	out	0x3d, r28	; 61
    271a:	6e 83       	std	Y+6, r22	; 0x06
    271c:	7f 83       	std	Y+7, r23	; 0x07
    271e:	88 87       	std	Y+8, r24	; 0x08
    2720:	99 87       	std	Y+9, r25	; 0x09
	u8 buffer [5];
	sprintf(buffer , "%d" , num);
    2722:	8d b7       	in	r24, 0x3d	; 61
    2724:	9e b7       	in	r25, 0x3e	; 62
    2726:	08 97       	sbiw	r24, 0x08	; 8
    2728:	0f b6       	in	r0, 0x3f	; 63
    272a:	f8 94       	cli
    272c:	9e bf       	out	0x3e, r25	; 62
    272e:	0f be       	out	0x3f, r0	; 63
    2730:	8d bf       	out	0x3d, r24	; 61
    2732:	ed b7       	in	r30, 0x3d	; 61
    2734:	fe b7       	in	r31, 0x3e	; 62
    2736:	31 96       	adiw	r30, 0x01	; 1
    2738:	ce 01       	movw	r24, r28
    273a:	01 96       	adiw	r24, 0x01	; 1
    273c:	91 83       	std	Z+1, r25	; 0x01
    273e:	80 83       	st	Z, r24
    2740:	80 e0       	ldi	r24, 0x00	; 0
    2742:	91 e0       	ldi	r25, 0x01	; 1
    2744:	93 83       	std	Z+3, r25	; 0x03
    2746:	82 83       	std	Z+2, r24	; 0x02
    2748:	8e 81       	ldd	r24, Y+6	; 0x06
    274a:	9f 81       	ldd	r25, Y+7	; 0x07
    274c:	a8 85       	ldd	r26, Y+8	; 0x08
    274e:	b9 85       	ldd	r27, Y+9	; 0x09
    2750:	84 83       	std	Z+4, r24	; 0x04
    2752:	95 83       	std	Z+5, r25	; 0x05
    2754:	a6 83       	std	Z+6, r26	; 0x06
    2756:	b7 83       	std	Z+7, r27	; 0x07
    2758:	0e 94 ec 19 	call	0x33d8	; 0x33d8 <sprintf>
    275c:	8d b7       	in	r24, 0x3d	; 61
    275e:	9e b7       	in	r25, 0x3e	; 62
    2760:	08 96       	adiw	r24, 0x08	; 8
    2762:	0f b6       	in	r0, 0x3f	; 63
    2764:	f8 94       	cli
    2766:	9e bf       	out	0x3e, r25	; 62
    2768:	0f be       	out	0x3f, r0	; 63
    276a:	8d bf       	out	0x3d, r24	; 61
	Lcd_vidDisplayStr(buffer);
    276c:	ce 01       	movw	r24, r28
    276e:	01 96       	adiw	r24, 0x01	; 1
    2770:	0e 94 67 13 	call	0x26ce	; 0x26ce <Lcd_vidDisplayStr>
}
    2774:	29 96       	adiw	r28, 0x09	; 9
    2776:	0f b6       	in	r0, 0x3f	; 63
    2778:	f8 94       	cli
    277a:	de bf       	out	0x3e, r29	; 62
    277c:	0f be       	out	0x3f, r0	; 63
    277e:	cd bf       	out	0x3d, r28	; 61
    2780:	cf 91       	pop	r28
    2782:	df 91       	pop	r29
    2784:	08 95       	ret

00002786 <LCD_vidDisplayFloat>:

void LCD_vidDisplayFloat(f64 num)
{
    2786:	df 93       	push	r29
    2788:	cf 93       	push	r28
    278a:	00 d0       	rcall	.+0      	; 0x278c <LCD_vidDisplayFloat+0x6>
    278c:	00 d0       	rcall	.+0      	; 0x278e <LCD_vidDisplayFloat+0x8>
    278e:	cd b7       	in	r28, 0x3d	; 61
    2790:	de b7       	in	r29, 0x3e	; 62
    2792:	69 83       	std	Y+1, r22	; 0x01
    2794:	7a 83       	std	Y+2, r23	; 0x02
    2796:	8b 83       	std	Y+3, r24	; 0x03
    2798:	9c 83       	std	Y+4, r25	; 0x04

}
    279a:	0f 90       	pop	r0
    279c:	0f 90       	pop	r0
    279e:	0f 90       	pop	r0
    27a0:	0f 90       	pop	r0
    27a2:	cf 91       	pop	r28
    27a4:	df 91       	pop	r29
    27a6:	08 95       	ret

000027a8 <Lcd_vidCmd>:

void Lcd_vidCmd(lcd_Cmd_t cmd)
{
    27a8:	df 93       	push	r29
    27aa:	cf 93       	push	r28
    27ac:	00 d0       	rcall	.+0      	; 0x27ae <Lcd_vidCmd+0x6>
    27ae:	0f 92       	push	r0
    27b0:	cd b7       	in	r28, 0x3d	; 61
    27b2:	de b7       	in	r29, 0x3e	; 62
    27b4:	8b 83       	std	Y+3, r24	; 0x03
	//    MSB  LSB
	//0b 1101 1001
	u8 loc_MSB = cmd & 0xF0;  //0xF0 = ~LCD_MASK  //1101 0000
    27b6:	8b 81       	ldd	r24, Y+3	; 0x03
    27b8:	80 7f       	andi	r24, 0xF0	; 240
    27ba:	8a 83       	std	Y+2, r24	; 0x02
	u8 loc_LSB = cmd << 4;						  //1001 0000
    27bc:	8b 81       	ldd	r24, Y+3	; 0x03
    27be:	82 95       	swap	r24
    27c0:	80 7f       	andi	r24, 0xF0	; 240
    27c2:	89 83       	std	Y+1, r24	; 0x01

	// RS->0
	Dio_vidwriteChanel(DIO_PORTB , DIO_PIN1 , DIO_LOW);
    27c4:	81 e0       	ldi	r24, 0x01	; 1
    27c6:	61 e0       	ldi	r22, 0x01	; 1
    27c8:	40 e0       	ldi	r20, 0x00	; 0
    27ca:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <Dio_vidwriteChanel>

	// Write data to MSB
	Dio_vidWriteChanelGroup(DIO_PORTA , loc_MSB , LCD_MASK);
    27ce:	80 e0       	ldi	r24, 0x00	; 0
    27d0:	6a 81       	ldd	r22, Y+2	; 0x02
    27d2:	4f e0       	ldi	r20, 0x0F	; 15
    27d4:	0e 94 1a 17 	call	0x2e34	; 0x2e34 <Dio_vidWriteChanelGroup>

	//send enable pulse
	Lcd_VidenablePulse();
    27d8:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <Lcd_VidenablePulse>

	// Write data to LSB
	Dio_vidWriteChanelGroup(DIO_PORTA , loc_LSB , LCD_MASK);
    27dc:	80 e0       	ldi	r24, 0x00	; 0
    27de:	69 81       	ldd	r22, Y+1	; 0x01
    27e0:	4f e0       	ldi	r20, 0x0F	; 15
    27e2:	0e 94 1a 17 	call	0x2e34	; 0x2e34 <Dio_vidWriteChanelGroup>

	//send enable pulse
	Lcd_VidenablePulse();
    27e6:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <Lcd_VidenablePulse>
}
    27ea:	0f 90       	pop	r0
    27ec:	0f 90       	pop	r0
    27ee:	0f 90       	pop	r0
    27f0:	cf 91       	pop	r28
    27f2:	df 91       	pop	r29
    27f4:	08 95       	ret

000027f6 <LCD_vidRowColumn>:

void LCD_vidRowColumn(u8 row , u8 col)
{
    27f6:	df 93       	push	r29
    27f8:	cf 93       	push	r28
    27fa:	00 d0       	rcall	.+0      	; 0x27fc <LCD_vidRowColumn+0x6>
    27fc:	00 d0       	rcall	.+0      	; 0x27fe <LCD_vidRowColumn+0x8>
    27fe:	cd b7       	in	r28, 0x3d	; 61
    2800:	de b7       	in	r29, 0x3e	; 62
    2802:	89 83       	std	Y+1, r24	; 0x01
    2804:	6a 83       	std	Y+2, r22	; 0x02
	switch (row)
    2806:	89 81       	ldd	r24, Y+1	; 0x01
    2808:	28 2f       	mov	r18, r24
    280a:	30 e0       	ldi	r19, 0x00	; 0
    280c:	3c 83       	std	Y+4, r19	; 0x04
    280e:	2b 83       	std	Y+3, r18	; 0x03
    2810:	8b 81       	ldd	r24, Y+3	; 0x03
    2812:	9c 81       	ldd	r25, Y+4	; 0x04
    2814:	00 97       	sbiw	r24, 0x00	; 0
    2816:	31 f0       	breq	.+12     	; 0x2824 <LCD_vidRowColumn+0x2e>
    2818:	2b 81       	ldd	r18, Y+3	; 0x03
    281a:	3c 81       	ldd	r19, Y+4	; 0x04
    281c:	21 30       	cpi	r18, 0x01	; 1
    281e:	31 05       	cpc	r19, r1
    2820:	31 f0       	breq	.+12     	; 0x282e <LCD_vidRowColumn+0x38>
    2822:	09 c0       	rjmp	.+18     	; 0x2836 <LCD_vidRowColumn+0x40>
	{
	case 0:
		Lcd_vidCmd(0x80 + col);
    2824:	8a 81       	ldd	r24, Y+2	; 0x02
    2826:	80 58       	subi	r24, 0x80	; 128
    2828:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
    282c:	04 c0       	rjmp	.+8      	; 0x2836 <LCD_vidRowColumn+0x40>
		break;
	case 1:
		Lcd_vidCmd(0xC0 + col);
    282e:	8a 81       	ldd	r24, Y+2	; 0x02
    2830:	80 54       	subi	r24, 0x40	; 64
    2832:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <Lcd_vidCmd>
		break;
	}
}
    2836:	0f 90       	pop	r0
    2838:	0f 90       	pop	r0
    283a:	0f 90       	pop	r0
    283c:	0f 90       	pop	r0
    283e:	cf 91       	pop	r28
    2840:	df 91       	pop	r29
    2842:	08 95       	ret

00002844 <GINT_vidEnableAllInetrrupts>:
#include "GINT.h"
#include "Bit_Math.h"


void GINT_vidEnableAllInetrrupts (void)
{
    2844:	df 93       	push	r29
    2846:	cf 93       	push	r28
    2848:	cd b7       	in	r28, 0x3d	; 61
    284a:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(GINT_SREG_REG , 7);
    284c:	af e5       	ldi	r26, 0x5F	; 95
    284e:	b0 e0       	ldi	r27, 0x00	; 0
    2850:	ef e5       	ldi	r30, 0x5F	; 95
    2852:	f0 e0       	ldi	r31, 0x00	; 0
    2854:	80 81       	ld	r24, Z
    2856:	80 68       	ori	r24, 0x80	; 128
    2858:	8c 93       	st	X, r24
}
    285a:	cf 91       	pop	r28
    285c:	df 91       	pop	r29
    285e:	08 95       	ret

00002860 <GINT_vidDisableAllInetrrupts>:

void GINT_vidDisableAllInetrrupts (void)
{
    2860:	df 93       	push	r29
    2862:	cf 93       	push	r28
    2864:	cd b7       	in	r28, 0x3d	; 61
    2866:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(GINT_SREG_REG , 7);
    2868:	af e5       	ldi	r26, 0x5F	; 95
    286a:	b0 e0       	ldi	r27, 0x00	; 0
    286c:	ef e5       	ldi	r30, 0x5F	; 95
    286e:	f0 e0       	ldi	r31, 0x00	; 0
    2870:	80 81       	ld	r24, Z
    2872:	8f 77       	andi	r24, 0x7F	; 127
    2874:	8c 93       	st	X, r24
}
    2876:	cf 91       	pop	r28
    2878:	df 91       	pop	r29
    287a:	08 95       	ret

0000287c <ExtInt_vidConfigExtInt>:
#include "ExInt_Reg.h"
#include "ExInt.h"
#include "Std_Types.h"

void ExtInt_vidConfigExtInt (extint_id_t INTid   , extint_sensectrl  senseCtrl)
{
    287c:	df 93       	push	r29
    287e:	cf 93       	push	r28
    2880:	00 d0       	rcall	.+0      	; 0x2882 <ExtInt_vidConfigExtInt+0x6>
    2882:	00 d0       	rcall	.+0      	; 0x2884 <ExtInt_vidConfigExtInt+0x8>
    2884:	cd b7       	in	r28, 0x3d	; 61
    2886:	de b7       	in	r29, 0x3e	; 62
    2888:	89 83       	std	Y+1, r24	; 0x01
    288a:	6a 83       	std	Y+2, r22	; 0x02
	switch (INTid)
    288c:	89 81       	ldd	r24, Y+1	; 0x01
    288e:	28 2f       	mov	r18, r24
    2890:	30 e0       	ldi	r19, 0x00	; 0
    2892:	3c 83       	std	Y+4, r19	; 0x04
    2894:	2b 83       	std	Y+3, r18	; 0x03
    2896:	8b 81       	ldd	r24, Y+3	; 0x03
    2898:	9c 81       	ldd	r25, Y+4	; 0x04
    289a:	81 30       	cpi	r24, 0x01	; 1
    289c:	91 05       	cpc	r25, r1
    289e:	09 f4       	brne	.+2      	; 0x28a2 <ExtInt_vidConfigExtInt+0x26>
    28a0:	5a c0       	rjmp	.+180    	; 0x2956 <ExtInt_vidConfigExtInt+0xda>
    28a2:	2b 81       	ldd	r18, Y+3	; 0x03
    28a4:	3c 81       	ldd	r19, Y+4	; 0x04
    28a6:	22 30       	cpi	r18, 0x02	; 2
    28a8:	31 05       	cpc	r19, r1
    28aa:	09 f4       	brne	.+2      	; 0x28ae <ExtInt_vidConfigExtInt+0x32>
    28ac:	a3 c0       	rjmp	.+326    	; 0x29f4 <ExtInt_vidConfigExtInt+0x178>
    28ae:	8b 81       	ldd	r24, Y+3	; 0x03
    28b0:	9c 81       	ldd	r25, Y+4	; 0x04
    28b2:	00 97       	sbiw	r24, 0x00	; 0
    28b4:	09 f0       	breq	.+2      	; 0x28b8 <ExtInt_vidConfigExtInt+0x3c>
    28b6:	ba c0       	rjmp	.+372    	; 0x2a2c <ExtInt_vidConfigExtInt+0x1b0>
	{
	case EXT_INT0:
		if (senseCtrl == EXT_RISING_EDGE)
    28b8:	8a 81       	ldd	r24, Y+2	; 0x02
    28ba:	81 30       	cpi	r24, 0x01	; 1
    28bc:	79 f4       	brne	.+30     	; 0x28dc <ExtInt_vidConfigExtInt+0x60>
		{
			SET_BIT(EXTINT_MCUCR_REG , 0);
    28be:	a5 e5       	ldi	r26, 0x55	; 85
    28c0:	b0 e0       	ldi	r27, 0x00	; 0
    28c2:	e5 e5       	ldi	r30, 0x55	; 85
    28c4:	f0 e0       	ldi	r31, 0x00	; 0
    28c6:	80 81       	ld	r24, Z
    28c8:	81 60       	ori	r24, 0x01	; 1
    28ca:	8c 93       	st	X, r24
			SET_BIT(EXTINT_MCUCR_REG , 1);
    28cc:	a5 e5       	ldi	r26, 0x55	; 85
    28ce:	b0 e0       	ldi	r27, 0x00	; 0
    28d0:	e5 e5       	ldi	r30, 0x55	; 85
    28d2:	f0 e0       	ldi	r31, 0x00	; 0
    28d4:	80 81       	ld	r24, Z
    28d6:	82 60       	ori	r24, 0x02	; 2
    28d8:	8c 93       	st	X, r24
    28da:	35 c0       	rjmp	.+106    	; 0x2946 <ExtInt_vidConfigExtInt+0xca>
		}
		else if (senseCtrl == EXT_FALLING_EDGE)
    28dc:	8a 81       	ldd	r24, Y+2	; 0x02
    28de:	88 23       	and	r24, r24
    28e0:	79 f4       	brne	.+30     	; 0x2900 <ExtInt_vidConfigExtInt+0x84>
		{
			CLEAR_BIT(EXTINT_MCUCR_REG , 0);
    28e2:	a5 e5       	ldi	r26, 0x55	; 85
    28e4:	b0 e0       	ldi	r27, 0x00	; 0
    28e6:	e5 e5       	ldi	r30, 0x55	; 85
    28e8:	f0 e0       	ldi	r31, 0x00	; 0
    28ea:	80 81       	ld	r24, Z
    28ec:	8e 7f       	andi	r24, 0xFE	; 254
    28ee:	8c 93       	st	X, r24
			SET_BIT(EXTINT_MCUCR_REG , 1);
    28f0:	a5 e5       	ldi	r26, 0x55	; 85
    28f2:	b0 e0       	ldi	r27, 0x00	; 0
    28f4:	e5 e5       	ldi	r30, 0x55	; 85
    28f6:	f0 e0       	ldi	r31, 0x00	; 0
    28f8:	80 81       	ld	r24, Z
    28fa:	82 60       	ori	r24, 0x02	; 2
    28fc:	8c 93       	st	X, r24
    28fe:	23 c0       	rjmp	.+70     	; 0x2946 <ExtInt_vidConfigExtInt+0xca>
		}
		else if (senseCtrl == EXT_BOTH_EDGE)
    2900:	8a 81       	ldd	r24, Y+2	; 0x02
    2902:	82 30       	cpi	r24, 0x02	; 2
    2904:	79 f4       	brne	.+30     	; 0x2924 <ExtInt_vidConfigExtInt+0xa8>
		{
			SET_BIT(EXTINT_MCUCR_REG , 0);
    2906:	a5 e5       	ldi	r26, 0x55	; 85
    2908:	b0 e0       	ldi	r27, 0x00	; 0
    290a:	e5 e5       	ldi	r30, 0x55	; 85
    290c:	f0 e0       	ldi	r31, 0x00	; 0
    290e:	80 81       	ld	r24, Z
    2910:	81 60       	ori	r24, 0x01	; 1
    2912:	8c 93       	st	X, r24
			CLEAR_BIT(EXTINT_MCUCR_REG , 1);
    2914:	a5 e5       	ldi	r26, 0x55	; 85
    2916:	b0 e0       	ldi	r27, 0x00	; 0
    2918:	e5 e5       	ldi	r30, 0x55	; 85
    291a:	f0 e0       	ldi	r31, 0x00	; 0
    291c:	80 81       	ld	r24, Z
    291e:	8d 7f       	andi	r24, 0xFD	; 253
    2920:	8c 93       	st	X, r24
    2922:	11 c0       	rjmp	.+34     	; 0x2946 <ExtInt_vidConfigExtInt+0xca>
		}
		else if (senseCtrl == EXT_LOW_EDGE)
    2924:	8a 81       	ldd	r24, Y+2	; 0x02
    2926:	83 30       	cpi	r24, 0x03	; 3
    2928:	71 f4       	brne	.+28     	; 0x2946 <ExtInt_vidConfigExtInt+0xca>
		{
			CLEAR_BIT(EXTINT_MCUCR_REG , 0);
    292a:	a5 e5       	ldi	r26, 0x55	; 85
    292c:	b0 e0       	ldi	r27, 0x00	; 0
    292e:	e5 e5       	ldi	r30, 0x55	; 85
    2930:	f0 e0       	ldi	r31, 0x00	; 0
    2932:	80 81       	ld	r24, Z
    2934:	8e 7f       	andi	r24, 0xFE	; 254
    2936:	8c 93       	st	X, r24
			CLEAR_BIT(EXTINT_MCUCR_REG , 1);
    2938:	a5 e5       	ldi	r26, 0x55	; 85
    293a:	b0 e0       	ldi	r27, 0x00	; 0
    293c:	e5 e5       	ldi	r30, 0x55	; 85
    293e:	f0 e0       	ldi	r31, 0x00	; 0
    2940:	80 81       	ld	r24, Z
    2942:	8d 7f       	andi	r24, 0xFD	; 253
    2944:	8c 93       	st	X, r24
		}

		SET_BIT(EXTINT_GICR_REG , INT0_EN_BIT);
    2946:	ab e5       	ldi	r26, 0x5B	; 91
    2948:	b0 e0       	ldi	r27, 0x00	; 0
    294a:	eb e5       	ldi	r30, 0x5B	; 91
    294c:	f0 e0       	ldi	r31, 0x00	; 0
    294e:	80 81       	ld	r24, Z
    2950:	80 64       	ori	r24, 0x40	; 64
    2952:	8c 93       	st	X, r24
    2954:	6b c0       	rjmp	.+214    	; 0x2a2c <ExtInt_vidConfigExtInt+0x1b0>
		break;


	case EXT_INT1:
		if (senseCtrl == EXT_RISING_EDGE)
    2956:	8a 81       	ldd	r24, Y+2	; 0x02
    2958:	81 30       	cpi	r24, 0x01	; 1
    295a:	79 f4       	brne	.+30     	; 0x297a <ExtInt_vidConfigExtInt+0xfe>
		{
			SET_BIT(EXTINT_MCUCR_REG , 2);
    295c:	a5 e5       	ldi	r26, 0x55	; 85
    295e:	b0 e0       	ldi	r27, 0x00	; 0
    2960:	e5 e5       	ldi	r30, 0x55	; 85
    2962:	f0 e0       	ldi	r31, 0x00	; 0
    2964:	80 81       	ld	r24, Z
    2966:	84 60       	ori	r24, 0x04	; 4
    2968:	8c 93       	st	X, r24
			SET_BIT(EXTINT_MCUCR_REG , 3);
    296a:	a5 e5       	ldi	r26, 0x55	; 85
    296c:	b0 e0       	ldi	r27, 0x00	; 0
    296e:	e5 e5       	ldi	r30, 0x55	; 85
    2970:	f0 e0       	ldi	r31, 0x00	; 0
    2972:	80 81       	ld	r24, Z
    2974:	88 60       	ori	r24, 0x08	; 8
    2976:	8c 93       	st	X, r24
    2978:	35 c0       	rjmp	.+106    	; 0x29e4 <ExtInt_vidConfigExtInt+0x168>
		}
		else if (senseCtrl == EXT_FALLING_EDGE)
    297a:	8a 81       	ldd	r24, Y+2	; 0x02
    297c:	88 23       	and	r24, r24
    297e:	79 f4       	brne	.+30     	; 0x299e <ExtInt_vidConfigExtInt+0x122>
		{
			CLEAR_BIT(EXTINT_MCUCR_REG , 2);
    2980:	a5 e5       	ldi	r26, 0x55	; 85
    2982:	b0 e0       	ldi	r27, 0x00	; 0
    2984:	e5 e5       	ldi	r30, 0x55	; 85
    2986:	f0 e0       	ldi	r31, 0x00	; 0
    2988:	80 81       	ld	r24, Z
    298a:	8b 7f       	andi	r24, 0xFB	; 251
    298c:	8c 93       	st	X, r24
			SET_BIT(EXTINT_MCUCR_REG , 3);
    298e:	a5 e5       	ldi	r26, 0x55	; 85
    2990:	b0 e0       	ldi	r27, 0x00	; 0
    2992:	e5 e5       	ldi	r30, 0x55	; 85
    2994:	f0 e0       	ldi	r31, 0x00	; 0
    2996:	80 81       	ld	r24, Z
    2998:	88 60       	ori	r24, 0x08	; 8
    299a:	8c 93       	st	X, r24
    299c:	23 c0       	rjmp	.+70     	; 0x29e4 <ExtInt_vidConfigExtInt+0x168>
		}
		else if (senseCtrl == EXT_BOTH_EDGE)
    299e:	8a 81       	ldd	r24, Y+2	; 0x02
    29a0:	82 30       	cpi	r24, 0x02	; 2
    29a2:	79 f4       	brne	.+30     	; 0x29c2 <ExtInt_vidConfigExtInt+0x146>
		{
			SET_BIT(EXTINT_MCUCR_REG , 2);
    29a4:	a5 e5       	ldi	r26, 0x55	; 85
    29a6:	b0 e0       	ldi	r27, 0x00	; 0
    29a8:	e5 e5       	ldi	r30, 0x55	; 85
    29aa:	f0 e0       	ldi	r31, 0x00	; 0
    29ac:	80 81       	ld	r24, Z
    29ae:	84 60       	ori	r24, 0x04	; 4
    29b0:	8c 93       	st	X, r24
			CLEAR_BIT(EXTINT_MCUCR_REG , 3);
    29b2:	a5 e5       	ldi	r26, 0x55	; 85
    29b4:	b0 e0       	ldi	r27, 0x00	; 0
    29b6:	e5 e5       	ldi	r30, 0x55	; 85
    29b8:	f0 e0       	ldi	r31, 0x00	; 0
    29ba:	80 81       	ld	r24, Z
    29bc:	87 7f       	andi	r24, 0xF7	; 247
    29be:	8c 93       	st	X, r24
    29c0:	11 c0       	rjmp	.+34     	; 0x29e4 <ExtInt_vidConfigExtInt+0x168>
		}
		else if (senseCtrl == EXT_LOW_EDGE)
    29c2:	8a 81       	ldd	r24, Y+2	; 0x02
    29c4:	83 30       	cpi	r24, 0x03	; 3
    29c6:	71 f4       	brne	.+28     	; 0x29e4 <ExtInt_vidConfigExtInt+0x168>
		{
			CLEAR_BIT(EXTINT_MCUCR_REG , 2);
    29c8:	a5 e5       	ldi	r26, 0x55	; 85
    29ca:	b0 e0       	ldi	r27, 0x00	; 0
    29cc:	e5 e5       	ldi	r30, 0x55	; 85
    29ce:	f0 e0       	ldi	r31, 0x00	; 0
    29d0:	80 81       	ld	r24, Z
    29d2:	8b 7f       	andi	r24, 0xFB	; 251
    29d4:	8c 93       	st	X, r24
			CLEAR_BIT(EXTINT_MCUCR_REG , 3);
    29d6:	a5 e5       	ldi	r26, 0x55	; 85
    29d8:	b0 e0       	ldi	r27, 0x00	; 0
    29da:	e5 e5       	ldi	r30, 0x55	; 85
    29dc:	f0 e0       	ldi	r31, 0x00	; 0
    29de:	80 81       	ld	r24, Z
    29e0:	87 7f       	andi	r24, 0xF7	; 247
    29e2:	8c 93       	st	X, r24
		}

		SET_BIT(EXTINT_GICR_REG , INT1_EN_BIT);
    29e4:	ab e5       	ldi	r26, 0x5B	; 91
    29e6:	b0 e0       	ldi	r27, 0x00	; 0
    29e8:	eb e5       	ldi	r30, 0x5B	; 91
    29ea:	f0 e0       	ldi	r31, 0x00	; 0
    29ec:	80 81       	ld	r24, Z
    29ee:	80 68       	ori	r24, 0x80	; 128
    29f0:	8c 93       	st	X, r24
    29f2:	1c c0       	rjmp	.+56     	; 0x2a2c <ExtInt_vidConfigExtInt+0x1b0>
		break;


	case EXT_INT2:

		if (senseCtrl == EXT_RISING_EDGE)
    29f4:	8a 81       	ldd	r24, Y+2	; 0x02
    29f6:	81 30       	cpi	r24, 0x01	; 1
    29f8:	41 f4       	brne	.+16     	; 0x2a0a <ExtInt_vidConfigExtInt+0x18e>
		{
			SET_BIT(EXTINT_MCUCSR_REG , 6);
    29fa:	a4 e5       	ldi	r26, 0x54	; 84
    29fc:	b0 e0       	ldi	r27, 0x00	; 0
    29fe:	e4 e5       	ldi	r30, 0x54	; 84
    2a00:	f0 e0       	ldi	r31, 0x00	; 0
    2a02:	80 81       	ld	r24, Z
    2a04:	80 64       	ori	r24, 0x40	; 64
    2a06:	8c 93       	st	X, r24
    2a08:	0a c0       	rjmp	.+20     	; 0x2a1e <ExtInt_vidConfigExtInt+0x1a2>
		}
		else if (senseCtrl == EXT_FALLING_EDGE)
    2a0a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a0c:	88 23       	and	r24, r24
    2a0e:	39 f4       	brne	.+14     	; 0x2a1e <ExtInt_vidConfigExtInt+0x1a2>
		{
			CLEAR_BIT(EXTINT_MCUCSR_REG , 6);
    2a10:	a4 e5       	ldi	r26, 0x54	; 84
    2a12:	b0 e0       	ldi	r27, 0x00	; 0
    2a14:	e4 e5       	ldi	r30, 0x54	; 84
    2a16:	f0 e0       	ldi	r31, 0x00	; 0
    2a18:	80 81       	ld	r24, Z
    2a1a:	8f 7b       	andi	r24, 0xBF	; 191
    2a1c:	8c 93       	st	X, r24
		}

		SET_BIT(EXTINT_GICR_REG , INT2_EN_BIT);
    2a1e:	ab e5       	ldi	r26, 0x5B	; 91
    2a20:	b0 e0       	ldi	r27, 0x00	; 0
    2a22:	eb e5       	ldi	r30, 0x5B	; 91
    2a24:	f0 e0       	ldi	r31, 0x00	; 0
    2a26:	80 81       	ld	r24, Z
    2a28:	80 62       	ori	r24, 0x20	; 32
    2a2a:	8c 93       	st	X, r24
		break;
	}
}
    2a2c:	0f 90       	pop	r0
    2a2e:	0f 90       	pop	r0
    2a30:	0f 90       	pop	r0
    2a32:	0f 90       	pop	r0
    2a34:	cf 91       	pop	r28
    2a36:	df 91       	pop	r29
    2a38:	08 95       	ret

00002a3a <ExtInt_vidDisapleExtInt>:

void ExtInt_vidDisapleExtInt (extint_id_t INTid )
{
    2a3a:	df 93       	push	r29
    2a3c:	cf 93       	push	r28
    2a3e:	00 d0       	rcall	.+0      	; 0x2a40 <ExtInt_vidDisapleExtInt+0x6>
    2a40:	0f 92       	push	r0
    2a42:	cd b7       	in	r28, 0x3d	; 61
    2a44:	de b7       	in	r29, 0x3e	; 62
    2a46:	89 83       	std	Y+1, r24	; 0x01
	switch (INTid)
    2a48:	89 81       	ldd	r24, Y+1	; 0x01
    2a4a:	28 2f       	mov	r18, r24
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	3b 83       	std	Y+3, r19	; 0x03
    2a50:	2a 83       	std	Y+2, r18	; 0x02
    2a52:	8a 81       	ldd	r24, Y+2	; 0x02
    2a54:	9b 81       	ldd	r25, Y+3	; 0x03
    2a56:	81 30       	cpi	r24, 0x01	; 1
    2a58:	91 05       	cpc	r25, r1
    2a5a:	89 f0       	breq	.+34     	; 0x2a7e <ExtInt_vidDisapleExtInt+0x44>
    2a5c:	2a 81       	ldd	r18, Y+2	; 0x02
    2a5e:	3b 81       	ldd	r19, Y+3	; 0x03
    2a60:	22 30       	cpi	r18, 0x02	; 2
    2a62:	31 05       	cpc	r19, r1
    2a64:	a1 f0       	breq	.+40     	; 0x2a8e <ExtInt_vidDisapleExtInt+0x54>
    2a66:	8a 81       	ldd	r24, Y+2	; 0x02
    2a68:	9b 81       	ldd	r25, Y+3	; 0x03
    2a6a:	00 97       	sbiw	r24, 0x00	; 0
    2a6c:	b9 f4       	brne	.+46     	; 0x2a9c <ExtInt_vidDisapleExtInt+0x62>
	{
	case EXT_INT0:
		SET_BIT(EXTINT_GICR_REG,INT0_EN_BIT);
    2a6e:	ab e5       	ldi	r26, 0x5B	; 91
    2a70:	b0 e0       	ldi	r27, 0x00	; 0
    2a72:	eb e5       	ldi	r30, 0x5B	; 91
    2a74:	f0 e0       	ldi	r31, 0x00	; 0
    2a76:	80 81       	ld	r24, Z
    2a78:	80 64       	ori	r24, 0x40	; 64
    2a7a:	8c 93       	st	X, r24
    2a7c:	0f c0       	rjmp	.+30     	; 0x2a9c <ExtInt_vidDisapleExtInt+0x62>
		break;

	case EXT_INT1:
		SET_BIT(EXTINT_GICR_REG,INT1_EN_BIT);
    2a7e:	ab e5       	ldi	r26, 0x5B	; 91
    2a80:	b0 e0       	ldi	r27, 0x00	; 0
    2a82:	eb e5       	ldi	r30, 0x5B	; 91
    2a84:	f0 e0       	ldi	r31, 0x00	; 0
    2a86:	80 81       	ld	r24, Z
    2a88:	80 68       	ori	r24, 0x80	; 128
    2a8a:	8c 93       	st	X, r24
    2a8c:	07 c0       	rjmp	.+14     	; 0x2a9c <ExtInt_vidDisapleExtInt+0x62>
		break;

	case EXT_INT2:
		SET_BIT(EXTINT_GICR_REG,INT2_EN_BIT);
    2a8e:	ab e5       	ldi	r26, 0x5B	; 91
    2a90:	b0 e0       	ldi	r27, 0x00	; 0
    2a92:	eb e5       	ldi	r30, 0x5B	; 91
    2a94:	f0 e0       	ldi	r31, 0x00	; 0
    2a96:	80 81       	ld	r24, Z
    2a98:	80 62       	ori	r24, 0x20	; 32
    2a9a:	8c 93       	st	X, r24
		break;
	}
}
    2a9c:	0f 90       	pop	r0
    2a9e:	0f 90       	pop	r0
    2aa0:	0f 90       	pop	r0
    2aa2:	cf 91       	pop	r28
    2aa4:	df 91       	pop	r29
    2aa6:	08 95       	ret

00002aa8 <Dio_vidconfigChanel>:
#include "Dio.h"
#include "Bit_Math.h"


void Dio_vidconfigChanel(dio_port_t port, dio_pin_t pin,dio_dir_t dir)
{
    2aa8:	df 93       	push	r29
    2aaa:	cf 93       	push	r28
    2aac:	00 d0       	rcall	.+0      	; 0x2aae <Dio_vidconfigChanel+0x6>
    2aae:	00 d0       	rcall	.+0      	; 0x2ab0 <Dio_vidconfigChanel+0x8>
    2ab0:	0f 92       	push	r0
    2ab2:	cd b7       	in	r28, 0x3d	; 61
    2ab4:	de b7       	in	r29, 0x3e	; 62
    2ab6:	89 83       	std	Y+1, r24	; 0x01
    2ab8:	6a 83       	std	Y+2, r22	; 0x02
    2aba:	4b 83       	std	Y+3, r20	; 0x03
	switch(port)
    2abc:	89 81       	ldd	r24, Y+1	; 0x01
    2abe:	28 2f       	mov	r18, r24
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	3d 83       	std	Y+5, r19	; 0x05
    2ac4:	2c 83       	std	Y+4, r18	; 0x04
    2ac6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ac8:	9d 81       	ldd	r25, Y+5	; 0x05
    2aca:	81 30       	cpi	r24, 0x01	; 1
    2acc:	91 05       	cpc	r25, r1
    2ace:	09 f4       	brne	.+2      	; 0x2ad2 <Dio_vidconfigChanel+0x2a>
    2ad0:	43 c0       	rjmp	.+134    	; 0x2b58 <Dio_vidconfigChanel+0xb0>
    2ad2:	2c 81       	ldd	r18, Y+4	; 0x04
    2ad4:	3d 81       	ldd	r19, Y+5	; 0x05
    2ad6:	22 30       	cpi	r18, 0x02	; 2
    2ad8:	31 05       	cpc	r19, r1
    2ada:	2c f4       	brge	.+10     	; 0x2ae6 <Dio_vidconfigChanel+0x3e>
    2adc:	8c 81       	ldd	r24, Y+4	; 0x04
    2ade:	9d 81       	ldd	r25, Y+5	; 0x05
    2ae0:	00 97       	sbiw	r24, 0x00	; 0
    2ae2:	71 f0       	breq	.+28     	; 0x2b00 <Dio_vidconfigChanel+0x58>
    2ae4:	bc c0       	rjmp	.+376    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
    2ae6:	2c 81       	ldd	r18, Y+4	; 0x04
    2ae8:	3d 81       	ldd	r19, Y+5	; 0x05
    2aea:	22 30       	cpi	r18, 0x02	; 2
    2aec:	31 05       	cpc	r19, r1
    2aee:	09 f4       	brne	.+2      	; 0x2af2 <Dio_vidconfigChanel+0x4a>
    2af0:	5f c0       	rjmp	.+190    	; 0x2bb0 <Dio_vidconfigChanel+0x108>
    2af2:	8c 81       	ldd	r24, Y+4	; 0x04
    2af4:	9d 81       	ldd	r25, Y+5	; 0x05
    2af6:	83 30       	cpi	r24, 0x03	; 3
    2af8:	91 05       	cpc	r25, r1
    2afa:	09 f4       	brne	.+2      	; 0x2afe <Dio_vidconfigChanel+0x56>
    2afc:	85 c0       	rjmp	.+266    	; 0x2c08 <Dio_vidconfigChanel+0x160>
    2afe:	af c0       	rjmp	.+350    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
	{
	case DIO_PORTA:
		if (dir == DIO_INPUT)
    2b00:	8b 81       	ldd	r24, Y+3	; 0x03
    2b02:	88 23       	and	r24, r24
    2b04:	a9 f4       	brne	.+42     	; 0x2b30 <Dio_vidconfigChanel+0x88>
		{
			CLEAR_BIT(DIO_DDRA_REG,pin);
    2b06:	aa e3       	ldi	r26, 0x3A	; 58
    2b08:	b0 e0       	ldi	r27, 0x00	; 0
    2b0a:	ea e3       	ldi	r30, 0x3A	; 58
    2b0c:	f0 e0       	ldi	r31, 0x00	; 0
    2b0e:	80 81       	ld	r24, Z
    2b10:	48 2f       	mov	r20, r24
    2b12:	8a 81       	ldd	r24, Y+2	; 0x02
    2b14:	28 2f       	mov	r18, r24
    2b16:	30 e0       	ldi	r19, 0x00	; 0
    2b18:	81 e0       	ldi	r24, 0x01	; 1
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	02 2e       	mov	r0, r18
    2b1e:	02 c0       	rjmp	.+4      	; 0x2b24 <Dio_vidconfigChanel+0x7c>
    2b20:	88 0f       	add	r24, r24
    2b22:	99 1f       	adc	r25, r25
    2b24:	0a 94       	dec	r0
    2b26:	e2 f7       	brpl	.-8      	; 0x2b20 <Dio_vidconfigChanel+0x78>
    2b28:	80 95       	com	r24
    2b2a:	84 23       	and	r24, r20
    2b2c:	8c 93       	st	X, r24
    2b2e:	97 c0       	rjmp	.+302    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRA_REG,pin);
    2b30:	aa e3       	ldi	r26, 0x3A	; 58
    2b32:	b0 e0       	ldi	r27, 0x00	; 0
    2b34:	ea e3       	ldi	r30, 0x3A	; 58
    2b36:	f0 e0       	ldi	r31, 0x00	; 0
    2b38:	80 81       	ld	r24, Z
    2b3a:	48 2f       	mov	r20, r24
    2b3c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b3e:	28 2f       	mov	r18, r24
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	81 e0       	ldi	r24, 0x01	; 1
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	02 2e       	mov	r0, r18
    2b48:	02 c0       	rjmp	.+4      	; 0x2b4e <Dio_vidconfigChanel+0xa6>
    2b4a:	88 0f       	add	r24, r24
    2b4c:	99 1f       	adc	r25, r25
    2b4e:	0a 94       	dec	r0
    2b50:	e2 f7       	brpl	.-8      	; 0x2b4a <Dio_vidconfigChanel+0xa2>
    2b52:	84 2b       	or	r24, r20
    2b54:	8c 93       	st	X, r24
    2b56:	83 c0       	rjmp	.+262    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTB:
		if (dir == DIO_INPUT)
    2b58:	8b 81       	ldd	r24, Y+3	; 0x03
    2b5a:	88 23       	and	r24, r24
    2b5c:	a9 f4       	brne	.+42     	; 0x2b88 <Dio_vidconfigChanel+0xe0>
		{
			CLEAR_BIT(DIO_DDRB_REG,pin);
    2b5e:	a7 e3       	ldi	r26, 0x37	; 55
    2b60:	b0 e0       	ldi	r27, 0x00	; 0
    2b62:	e7 e3       	ldi	r30, 0x37	; 55
    2b64:	f0 e0       	ldi	r31, 0x00	; 0
    2b66:	80 81       	ld	r24, Z
    2b68:	48 2f       	mov	r20, r24
    2b6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6c:	28 2f       	mov	r18, r24
    2b6e:	30 e0       	ldi	r19, 0x00	; 0
    2b70:	81 e0       	ldi	r24, 0x01	; 1
    2b72:	90 e0       	ldi	r25, 0x00	; 0
    2b74:	02 2e       	mov	r0, r18
    2b76:	02 c0       	rjmp	.+4      	; 0x2b7c <Dio_vidconfigChanel+0xd4>
    2b78:	88 0f       	add	r24, r24
    2b7a:	99 1f       	adc	r25, r25
    2b7c:	0a 94       	dec	r0
    2b7e:	e2 f7       	brpl	.-8      	; 0x2b78 <Dio_vidconfigChanel+0xd0>
    2b80:	80 95       	com	r24
    2b82:	84 23       	and	r24, r20
    2b84:	8c 93       	st	X, r24
    2b86:	6b c0       	rjmp	.+214    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRB_REG,pin);
    2b88:	a7 e3       	ldi	r26, 0x37	; 55
    2b8a:	b0 e0       	ldi	r27, 0x00	; 0
    2b8c:	e7 e3       	ldi	r30, 0x37	; 55
    2b8e:	f0 e0       	ldi	r31, 0x00	; 0
    2b90:	80 81       	ld	r24, Z
    2b92:	48 2f       	mov	r20, r24
    2b94:	8a 81       	ldd	r24, Y+2	; 0x02
    2b96:	28 2f       	mov	r18, r24
    2b98:	30 e0       	ldi	r19, 0x00	; 0
    2b9a:	81 e0       	ldi	r24, 0x01	; 1
    2b9c:	90 e0       	ldi	r25, 0x00	; 0
    2b9e:	02 2e       	mov	r0, r18
    2ba0:	02 c0       	rjmp	.+4      	; 0x2ba6 <Dio_vidconfigChanel+0xfe>
    2ba2:	88 0f       	add	r24, r24
    2ba4:	99 1f       	adc	r25, r25
    2ba6:	0a 94       	dec	r0
    2ba8:	e2 f7       	brpl	.-8      	; 0x2ba2 <Dio_vidconfigChanel+0xfa>
    2baa:	84 2b       	or	r24, r20
    2bac:	8c 93       	st	X, r24
    2bae:	57 c0       	rjmp	.+174    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTC:
		if (dir == DIO_INPUT)
    2bb0:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb2:	88 23       	and	r24, r24
    2bb4:	a9 f4       	brne	.+42     	; 0x2be0 <Dio_vidconfigChanel+0x138>
		{
			CLEAR_BIT(DIO_DDRC_REG,pin);
    2bb6:	a4 e3       	ldi	r26, 0x34	; 52
    2bb8:	b0 e0       	ldi	r27, 0x00	; 0
    2bba:	e4 e3       	ldi	r30, 0x34	; 52
    2bbc:	f0 e0       	ldi	r31, 0x00	; 0
    2bbe:	80 81       	ld	r24, Z
    2bc0:	48 2f       	mov	r20, r24
    2bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc4:	28 2f       	mov	r18, r24
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	81 e0       	ldi	r24, 0x01	; 1
    2bca:	90 e0       	ldi	r25, 0x00	; 0
    2bcc:	02 2e       	mov	r0, r18
    2bce:	02 c0       	rjmp	.+4      	; 0x2bd4 <Dio_vidconfigChanel+0x12c>
    2bd0:	88 0f       	add	r24, r24
    2bd2:	99 1f       	adc	r25, r25
    2bd4:	0a 94       	dec	r0
    2bd6:	e2 f7       	brpl	.-8      	; 0x2bd0 <Dio_vidconfigChanel+0x128>
    2bd8:	80 95       	com	r24
    2bda:	84 23       	and	r24, r20
    2bdc:	8c 93       	st	X, r24
    2bde:	3f c0       	rjmp	.+126    	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRC_REG,pin);
    2be0:	a4 e3       	ldi	r26, 0x34	; 52
    2be2:	b0 e0       	ldi	r27, 0x00	; 0
    2be4:	e4 e3       	ldi	r30, 0x34	; 52
    2be6:	f0 e0       	ldi	r31, 0x00	; 0
    2be8:	80 81       	ld	r24, Z
    2bea:	48 2f       	mov	r20, r24
    2bec:	8a 81       	ldd	r24, Y+2	; 0x02
    2bee:	28 2f       	mov	r18, r24
    2bf0:	30 e0       	ldi	r19, 0x00	; 0
    2bf2:	81 e0       	ldi	r24, 0x01	; 1
    2bf4:	90 e0       	ldi	r25, 0x00	; 0
    2bf6:	02 2e       	mov	r0, r18
    2bf8:	02 c0       	rjmp	.+4      	; 0x2bfe <Dio_vidconfigChanel+0x156>
    2bfa:	88 0f       	add	r24, r24
    2bfc:	99 1f       	adc	r25, r25
    2bfe:	0a 94       	dec	r0
    2c00:	e2 f7       	brpl	.-8      	; 0x2bfa <Dio_vidconfigChanel+0x152>
    2c02:	84 2b       	or	r24, r20
    2c04:	8c 93       	st	X, r24
    2c06:	2b c0       	rjmp	.+86     	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTD:
		if (dir == DIO_INPUT)
    2c08:	8b 81       	ldd	r24, Y+3	; 0x03
    2c0a:	88 23       	and	r24, r24
    2c0c:	a9 f4       	brne	.+42     	; 0x2c38 <Dio_vidconfigChanel+0x190>
		{
			CLEAR_BIT(DIO_DDRD_REG,pin);
    2c0e:	a1 e3       	ldi	r26, 0x31	; 49
    2c10:	b0 e0       	ldi	r27, 0x00	; 0
    2c12:	e1 e3       	ldi	r30, 0x31	; 49
    2c14:	f0 e0       	ldi	r31, 0x00	; 0
    2c16:	80 81       	ld	r24, Z
    2c18:	48 2f       	mov	r20, r24
    2c1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c1c:	28 2f       	mov	r18, r24
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	81 e0       	ldi	r24, 0x01	; 1
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	02 2e       	mov	r0, r18
    2c26:	02 c0       	rjmp	.+4      	; 0x2c2c <Dio_vidconfigChanel+0x184>
    2c28:	88 0f       	add	r24, r24
    2c2a:	99 1f       	adc	r25, r25
    2c2c:	0a 94       	dec	r0
    2c2e:	e2 f7       	brpl	.-8      	; 0x2c28 <Dio_vidconfigChanel+0x180>
    2c30:	80 95       	com	r24
    2c32:	84 23       	and	r24, r20
    2c34:	8c 93       	st	X, r24
    2c36:	13 c0       	rjmp	.+38     	; 0x2c5e <Dio_vidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRD_REG,pin);
    2c38:	a1 e3       	ldi	r26, 0x31	; 49
    2c3a:	b0 e0       	ldi	r27, 0x00	; 0
    2c3c:	e1 e3       	ldi	r30, 0x31	; 49
    2c3e:	f0 e0       	ldi	r31, 0x00	; 0
    2c40:	80 81       	ld	r24, Z
    2c42:	48 2f       	mov	r20, r24
    2c44:	8a 81       	ldd	r24, Y+2	; 0x02
    2c46:	28 2f       	mov	r18, r24
    2c48:	30 e0       	ldi	r19, 0x00	; 0
    2c4a:	81 e0       	ldi	r24, 0x01	; 1
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	02 2e       	mov	r0, r18
    2c50:	02 c0       	rjmp	.+4      	; 0x2c56 <Dio_vidconfigChanel+0x1ae>
    2c52:	88 0f       	add	r24, r24
    2c54:	99 1f       	adc	r25, r25
    2c56:	0a 94       	dec	r0
    2c58:	e2 f7       	brpl	.-8      	; 0x2c52 <Dio_vidconfigChanel+0x1aa>
    2c5a:	84 2b       	or	r24, r20
    2c5c:	8c 93       	st	X, r24
		}
		break;
	}
}
    2c5e:	0f 90       	pop	r0
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	0f 90       	pop	r0
    2c66:	0f 90       	pop	r0
    2c68:	cf 91       	pop	r28
    2c6a:	df 91       	pop	r29
    2c6c:	08 95       	ret

00002c6e <Dio_vidwriteChanel>:

void Dio_vidwriteChanel(dio_port_t port, dio_pin_t pin,dio_level_t level)
{
    2c6e:	df 93       	push	r29
    2c70:	cf 93       	push	r28
    2c72:	00 d0       	rcall	.+0      	; 0x2c74 <Dio_vidwriteChanel+0x6>
    2c74:	00 d0       	rcall	.+0      	; 0x2c76 <Dio_vidwriteChanel+0x8>
    2c76:	0f 92       	push	r0
    2c78:	cd b7       	in	r28, 0x3d	; 61
    2c7a:	de b7       	in	r29, 0x3e	; 62
    2c7c:	89 83       	std	Y+1, r24	; 0x01
    2c7e:	6a 83       	std	Y+2, r22	; 0x02
    2c80:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
    2c82:	89 81       	ldd	r24, Y+1	; 0x01
    2c84:	28 2f       	mov	r18, r24
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	3d 83       	std	Y+5, r19	; 0x05
    2c8a:	2c 83       	std	Y+4, r18	; 0x04
    2c8c:	8c 81       	ldd	r24, Y+4	; 0x04
    2c8e:	9d 81       	ldd	r25, Y+5	; 0x05
    2c90:	81 30       	cpi	r24, 0x01	; 1
    2c92:	91 05       	cpc	r25, r1
    2c94:	09 f4       	brne	.+2      	; 0x2c98 <Dio_vidwriteChanel+0x2a>
    2c96:	43 c0       	rjmp	.+134    	; 0x2d1e <Dio_vidwriteChanel+0xb0>
    2c98:	2c 81       	ldd	r18, Y+4	; 0x04
    2c9a:	3d 81       	ldd	r19, Y+5	; 0x05
    2c9c:	22 30       	cpi	r18, 0x02	; 2
    2c9e:	31 05       	cpc	r19, r1
    2ca0:	2c f4       	brge	.+10     	; 0x2cac <Dio_vidwriteChanel+0x3e>
    2ca2:	8c 81       	ldd	r24, Y+4	; 0x04
    2ca4:	9d 81       	ldd	r25, Y+5	; 0x05
    2ca6:	00 97       	sbiw	r24, 0x00	; 0
    2ca8:	71 f0       	breq	.+28     	; 0x2cc6 <Dio_vidwriteChanel+0x58>
    2caa:	bc c0       	rjmp	.+376    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
    2cac:	2c 81       	ldd	r18, Y+4	; 0x04
    2cae:	3d 81       	ldd	r19, Y+5	; 0x05
    2cb0:	22 30       	cpi	r18, 0x02	; 2
    2cb2:	31 05       	cpc	r19, r1
    2cb4:	09 f4       	brne	.+2      	; 0x2cb8 <Dio_vidwriteChanel+0x4a>
    2cb6:	5f c0       	rjmp	.+190    	; 0x2d76 <Dio_vidwriteChanel+0x108>
    2cb8:	8c 81       	ldd	r24, Y+4	; 0x04
    2cba:	9d 81       	ldd	r25, Y+5	; 0x05
    2cbc:	83 30       	cpi	r24, 0x03	; 3
    2cbe:	91 05       	cpc	r25, r1
    2cc0:	09 f4       	brne	.+2      	; 0x2cc4 <Dio_vidwriteChanel+0x56>
    2cc2:	85 c0       	rjmp	.+266    	; 0x2dce <Dio_vidwriteChanel+0x160>
    2cc4:	af c0       	rjmp	.+350    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
	{
	case DIO_PORTA:
		if (level == DIO_HIGH)
    2cc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cc8:	81 30       	cpi	r24, 0x01	; 1
    2cca:	a1 f4       	brne	.+40     	; 0x2cf4 <Dio_vidwriteChanel+0x86>
		{
			SET_BIT(DIO_PORTA_REG,pin);
    2ccc:	ab e3       	ldi	r26, 0x3B	; 59
    2cce:	b0 e0       	ldi	r27, 0x00	; 0
    2cd0:	eb e3       	ldi	r30, 0x3B	; 59
    2cd2:	f0 e0       	ldi	r31, 0x00	; 0
    2cd4:	80 81       	ld	r24, Z
    2cd6:	48 2f       	mov	r20, r24
    2cd8:	8a 81       	ldd	r24, Y+2	; 0x02
    2cda:	28 2f       	mov	r18, r24
    2cdc:	30 e0       	ldi	r19, 0x00	; 0
    2cde:	81 e0       	ldi	r24, 0x01	; 1
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
    2ce2:	02 2e       	mov	r0, r18
    2ce4:	02 c0       	rjmp	.+4      	; 0x2cea <Dio_vidwriteChanel+0x7c>
    2ce6:	88 0f       	add	r24, r24
    2ce8:	99 1f       	adc	r25, r25
    2cea:	0a 94       	dec	r0
    2cec:	e2 f7       	brpl	.-8      	; 0x2ce6 <Dio_vidwriteChanel+0x78>
    2cee:	84 2b       	or	r24, r20
    2cf0:	8c 93       	st	X, r24
    2cf2:	98 c0       	rjmp	.+304    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTA_REG,pin);
    2cf4:	ab e3       	ldi	r26, 0x3B	; 59
    2cf6:	b0 e0       	ldi	r27, 0x00	; 0
    2cf8:	eb e3       	ldi	r30, 0x3B	; 59
    2cfa:	f0 e0       	ldi	r31, 0x00	; 0
    2cfc:	80 81       	ld	r24, Z
    2cfe:	48 2f       	mov	r20, r24
    2d00:	8a 81       	ldd	r24, Y+2	; 0x02
    2d02:	28 2f       	mov	r18, r24
    2d04:	30 e0       	ldi	r19, 0x00	; 0
    2d06:	81 e0       	ldi	r24, 0x01	; 1
    2d08:	90 e0       	ldi	r25, 0x00	; 0
    2d0a:	02 2e       	mov	r0, r18
    2d0c:	02 c0       	rjmp	.+4      	; 0x2d12 <Dio_vidwriteChanel+0xa4>
    2d0e:	88 0f       	add	r24, r24
    2d10:	99 1f       	adc	r25, r25
    2d12:	0a 94       	dec	r0
    2d14:	e2 f7       	brpl	.-8      	; 0x2d0e <Dio_vidwriteChanel+0xa0>
    2d16:	80 95       	com	r24
    2d18:	84 23       	and	r24, r20
    2d1a:	8c 93       	st	X, r24
    2d1c:	83 c0       	rjmp	.+262    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTB:
		if (level == DIO_HIGH)
    2d1e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d20:	81 30       	cpi	r24, 0x01	; 1
    2d22:	a1 f4       	brne	.+40     	; 0x2d4c <Dio_vidwriteChanel+0xde>
		{
			SET_BIT(DIO_PORTB_REG,pin);
    2d24:	a8 e3       	ldi	r26, 0x38	; 56
    2d26:	b0 e0       	ldi	r27, 0x00	; 0
    2d28:	e8 e3       	ldi	r30, 0x38	; 56
    2d2a:	f0 e0       	ldi	r31, 0x00	; 0
    2d2c:	80 81       	ld	r24, Z
    2d2e:	48 2f       	mov	r20, r24
    2d30:	8a 81       	ldd	r24, Y+2	; 0x02
    2d32:	28 2f       	mov	r18, r24
    2d34:	30 e0       	ldi	r19, 0x00	; 0
    2d36:	81 e0       	ldi	r24, 0x01	; 1
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	02 2e       	mov	r0, r18
    2d3c:	02 c0       	rjmp	.+4      	; 0x2d42 <Dio_vidwriteChanel+0xd4>
    2d3e:	88 0f       	add	r24, r24
    2d40:	99 1f       	adc	r25, r25
    2d42:	0a 94       	dec	r0
    2d44:	e2 f7       	brpl	.-8      	; 0x2d3e <Dio_vidwriteChanel+0xd0>
    2d46:	84 2b       	or	r24, r20
    2d48:	8c 93       	st	X, r24
    2d4a:	6c c0       	rjmp	.+216    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTB_REG,pin);
    2d4c:	a8 e3       	ldi	r26, 0x38	; 56
    2d4e:	b0 e0       	ldi	r27, 0x00	; 0
    2d50:	e8 e3       	ldi	r30, 0x38	; 56
    2d52:	f0 e0       	ldi	r31, 0x00	; 0
    2d54:	80 81       	ld	r24, Z
    2d56:	48 2f       	mov	r20, r24
    2d58:	8a 81       	ldd	r24, Y+2	; 0x02
    2d5a:	28 2f       	mov	r18, r24
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	81 e0       	ldi	r24, 0x01	; 1
    2d60:	90 e0       	ldi	r25, 0x00	; 0
    2d62:	02 2e       	mov	r0, r18
    2d64:	02 c0       	rjmp	.+4      	; 0x2d6a <Dio_vidwriteChanel+0xfc>
    2d66:	88 0f       	add	r24, r24
    2d68:	99 1f       	adc	r25, r25
    2d6a:	0a 94       	dec	r0
    2d6c:	e2 f7       	brpl	.-8      	; 0x2d66 <Dio_vidwriteChanel+0xf8>
    2d6e:	80 95       	com	r24
    2d70:	84 23       	and	r24, r20
    2d72:	8c 93       	st	X, r24
    2d74:	57 c0       	rjmp	.+174    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTC:
		if (level == DIO_HIGH)
    2d76:	8b 81       	ldd	r24, Y+3	; 0x03
    2d78:	81 30       	cpi	r24, 0x01	; 1
    2d7a:	a1 f4       	brne	.+40     	; 0x2da4 <Dio_vidwriteChanel+0x136>
		{
			SET_BIT(DIO_PORTC_REG,pin);
    2d7c:	a5 e3       	ldi	r26, 0x35	; 53
    2d7e:	b0 e0       	ldi	r27, 0x00	; 0
    2d80:	e5 e3       	ldi	r30, 0x35	; 53
    2d82:	f0 e0       	ldi	r31, 0x00	; 0
    2d84:	80 81       	ld	r24, Z
    2d86:	48 2f       	mov	r20, r24
    2d88:	8a 81       	ldd	r24, Y+2	; 0x02
    2d8a:	28 2f       	mov	r18, r24
    2d8c:	30 e0       	ldi	r19, 0x00	; 0
    2d8e:	81 e0       	ldi	r24, 0x01	; 1
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	02 2e       	mov	r0, r18
    2d94:	02 c0       	rjmp	.+4      	; 0x2d9a <Dio_vidwriteChanel+0x12c>
    2d96:	88 0f       	add	r24, r24
    2d98:	99 1f       	adc	r25, r25
    2d9a:	0a 94       	dec	r0
    2d9c:	e2 f7       	brpl	.-8      	; 0x2d96 <Dio_vidwriteChanel+0x128>
    2d9e:	84 2b       	or	r24, r20
    2da0:	8c 93       	st	X, r24
    2da2:	40 c0       	rjmp	.+128    	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTC_REG,pin);
    2da4:	a5 e3       	ldi	r26, 0x35	; 53
    2da6:	b0 e0       	ldi	r27, 0x00	; 0
    2da8:	e5 e3       	ldi	r30, 0x35	; 53
    2daa:	f0 e0       	ldi	r31, 0x00	; 0
    2dac:	80 81       	ld	r24, Z
    2dae:	48 2f       	mov	r20, r24
    2db0:	8a 81       	ldd	r24, Y+2	; 0x02
    2db2:	28 2f       	mov	r18, r24
    2db4:	30 e0       	ldi	r19, 0x00	; 0
    2db6:	81 e0       	ldi	r24, 0x01	; 1
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	02 2e       	mov	r0, r18
    2dbc:	02 c0       	rjmp	.+4      	; 0x2dc2 <Dio_vidwriteChanel+0x154>
    2dbe:	88 0f       	add	r24, r24
    2dc0:	99 1f       	adc	r25, r25
    2dc2:	0a 94       	dec	r0
    2dc4:	e2 f7       	brpl	.-8      	; 0x2dbe <Dio_vidwriteChanel+0x150>
    2dc6:	80 95       	com	r24
    2dc8:	84 23       	and	r24, r20
    2dca:	8c 93       	st	X, r24
    2dcc:	2b c0       	rjmp	.+86     	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTD:
		if (level == DIO_HIGH)
    2dce:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd0:	81 30       	cpi	r24, 0x01	; 1
    2dd2:	a1 f4       	brne	.+40     	; 0x2dfc <Dio_vidwriteChanel+0x18e>
		{
			SET_BIT(DIO_PORTD_REG,pin);
    2dd4:	a2 e3       	ldi	r26, 0x32	; 50
    2dd6:	b0 e0       	ldi	r27, 0x00	; 0
    2dd8:	e2 e3       	ldi	r30, 0x32	; 50
    2dda:	f0 e0       	ldi	r31, 0x00	; 0
    2ddc:	80 81       	ld	r24, Z
    2dde:	48 2f       	mov	r20, r24
    2de0:	8a 81       	ldd	r24, Y+2	; 0x02
    2de2:	28 2f       	mov	r18, r24
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	81 e0       	ldi	r24, 0x01	; 1
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	02 2e       	mov	r0, r18
    2dec:	02 c0       	rjmp	.+4      	; 0x2df2 <Dio_vidwriteChanel+0x184>
    2dee:	88 0f       	add	r24, r24
    2df0:	99 1f       	adc	r25, r25
    2df2:	0a 94       	dec	r0
    2df4:	e2 f7       	brpl	.-8      	; 0x2dee <Dio_vidwriteChanel+0x180>
    2df6:	84 2b       	or	r24, r20
    2df8:	8c 93       	st	X, r24
    2dfa:	14 c0       	rjmp	.+40     	; 0x2e24 <Dio_vidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTD_REG,pin);
    2dfc:	a2 e3       	ldi	r26, 0x32	; 50
    2dfe:	b0 e0       	ldi	r27, 0x00	; 0
    2e00:	e2 e3       	ldi	r30, 0x32	; 50
    2e02:	f0 e0       	ldi	r31, 0x00	; 0
    2e04:	80 81       	ld	r24, Z
    2e06:	48 2f       	mov	r20, r24
    2e08:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0a:	28 2f       	mov	r18, r24
    2e0c:	30 e0       	ldi	r19, 0x00	; 0
    2e0e:	81 e0       	ldi	r24, 0x01	; 1
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	02 2e       	mov	r0, r18
    2e14:	02 c0       	rjmp	.+4      	; 0x2e1a <Dio_vidwriteChanel+0x1ac>
    2e16:	88 0f       	add	r24, r24
    2e18:	99 1f       	adc	r25, r25
    2e1a:	0a 94       	dec	r0
    2e1c:	e2 f7       	brpl	.-8      	; 0x2e16 <Dio_vidwriteChanel+0x1a8>
    2e1e:	80 95       	com	r24
    2e20:	84 23       	and	r24, r20
    2e22:	8c 93       	st	X, r24
		}
		break;
	}
}
    2e24:	0f 90       	pop	r0
    2e26:	0f 90       	pop	r0
    2e28:	0f 90       	pop	r0
    2e2a:	0f 90       	pop	r0
    2e2c:	0f 90       	pop	r0
    2e2e:	cf 91       	pop	r28
    2e30:	df 91       	pop	r29
    2e32:	08 95       	ret

00002e34 <Dio_vidWriteChanelGroup>:

void Dio_vidWriteChanelGroup (dio_port_t port , u8 data , u8 mask)
{
    2e34:	df 93       	push	r29
    2e36:	cf 93       	push	r28
    2e38:	00 d0       	rcall	.+0      	; 0x2e3a <Dio_vidWriteChanelGroup+0x6>
    2e3a:	00 d0       	rcall	.+0      	; 0x2e3c <Dio_vidWriteChanelGroup+0x8>
    2e3c:	0f 92       	push	r0
    2e3e:	cd b7       	in	r28, 0x3d	; 61
    2e40:	de b7       	in	r29, 0x3e	; 62
    2e42:	89 83       	std	Y+1, r24	; 0x01
    2e44:	6a 83       	std	Y+2, r22	; 0x02
    2e46:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
    2e48:	89 81       	ldd	r24, Y+1	; 0x01
    2e4a:	28 2f       	mov	r18, r24
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	3d 83       	std	Y+5, r19	; 0x05
    2e50:	2c 83       	std	Y+4, r18	; 0x04
    2e52:	8c 81       	ldd	r24, Y+4	; 0x04
    2e54:	9d 81       	ldd	r25, Y+5	; 0x05
    2e56:	81 30       	cpi	r24, 0x01	; 1
    2e58:	91 05       	cpc	r25, r1
    2e5a:	01 f1       	breq	.+64     	; 0x2e9c <Dio_vidWriteChanelGroup+0x68>
    2e5c:	2c 81       	ldd	r18, Y+4	; 0x04
    2e5e:	3d 81       	ldd	r19, Y+5	; 0x05
    2e60:	22 30       	cpi	r18, 0x02	; 2
    2e62:	31 05       	cpc	r19, r1
    2e64:	2c f4       	brge	.+10     	; 0x2e70 <Dio_vidWriteChanelGroup+0x3c>
    2e66:	8c 81       	ldd	r24, Y+4	; 0x04
    2e68:	9d 81       	ldd	r25, Y+5	; 0x05
    2e6a:	00 97       	sbiw	r24, 0x00	; 0
    2e6c:	61 f0       	breq	.+24     	; 0x2e86 <Dio_vidWriteChanelGroup+0x52>
    2e6e:	36 c0       	rjmp	.+108    	; 0x2edc <Dio_vidWriteChanelGroup+0xa8>
    2e70:	2c 81       	ldd	r18, Y+4	; 0x04
    2e72:	3d 81       	ldd	r19, Y+5	; 0x05
    2e74:	22 30       	cpi	r18, 0x02	; 2
    2e76:	31 05       	cpc	r19, r1
    2e78:	e1 f0       	breq	.+56     	; 0x2eb2 <Dio_vidWriteChanelGroup+0x7e>
    2e7a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e7c:	9d 81       	ldd	r25, Y+5	; 0x05
    2e7e:	83 30       	cpi	r24, 0x03	; 3
    2e80:	91 05       	cpc	r25, r1
    2e82:	11 f1       	breq	.+68     	; 0x2ec8 <Dio_vidWriteChanelGroup+0x94>
    2e84:	2b c0       	rjmp	.+86     	; 0x2edc <Dio_vidWriteChanelGroup+0xa8>
	{
	case DIO_PORTA:
		DIO_PORTA_REG = (DIO_PORTA_REG & mask)|(data);
    2e86:	ab e3       	ldi	r26, 0x3B	; 59
    2e88:	b0 e0       	ldi	r27, 0x00	; 0
    2e8a:	eb e3       	ldi	r30, 0x3B	; 59
    2e8c:	f0 e0       	ldi	r31, 0x00	; 0
    2e8e:	90 81       	ld	r25, Z
    2e90:	8b 81       	ldd	r24, Y+3	; 0x03
    2e92:	98 23       	and	r25, r24
    2e94:	8a 81       	ldd	r24, Y+2	; 0x02
    2e96:	89 2b       	or	r24, r25
    2e98:	8c 93       	st	X, r24
    2e9a:	20 c0       	rjmp	.+64     	; 0x2edc <Dio_vidWriteChanelGroup+0xa8>
		break;
	case DIO_PORTB:
		DIO_PORTB_REG = (DIO_PORTB_REG & mask)|(data);
    2e9c:	a8 e3       	ldi	r26, 0x38	; 56
    2e9e:	b0 e0       	ldi	r27, 0x00	; 0
    2ea0:	e8 e3       	ldi	r30, 0x38	; 56
    2ea2:	f0 e0       	ldi	r31, 0x00	; 0
    2ea4:	90 81       	ld	r25, Z
    2ea6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ea8:	98 23       	and	r25, r24
    2eaa:	8a 81       	ldd	r24, Y+2	; 0x02
    2eac:	89 2b       	or	r24, r25
    2eae:	8c 93       	st	X, r24
    2eb0:	15 c0       	rjmp	.+42     	; 0x2edc <Dio_vidWriteChanelGroup+0xa8>
		break;
	case DIO_PORTC:
		DIO_PORTC_REG = (DIO_PORTC_REG & mask)|(data);
    2eb2:	a5 e3       	ldi	r26, 0x35	; 53
    2eb4:	b0 e0       	ldi	r27, 0x00	; 0
    2eb6:	e5 e3       	ldi	r30, 0x35	; 53
    2eb8:	f0 e0       	ldi	r31, 0x00	; 0
    2eba:	90 81       	ld	r25, Z
    2ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    2ebe:	98 23       	and	r25, r24
    2ec0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ec2:	89 2b       	or	r24, r25
    2ec4:	8c 93       	st	X, r24
    2ec6:	0a c0       	rjmp	.+20     	; 0x2edc <Dio_vidWriteChanelGroup+0xa8>
		break;
	case DIO_PORTD:
		DIO_PORTD_REG = (DIO_PORTD_REG & mask)|(data);
    2ec8:	a2 e3       	ldi	r26, 0x32	; 50
    2eca:	b0 e0       	ldi	r27, 0x00	; 0
    2ecc:	e2 e3       	ldi	r30, 0x32	; 50
    2ece:	f0 e0       	ldi	r31, 0x00	; 0
    2ed0:	90 81       	ld	r25, Z
    2ed2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed4:	98 23       	and	r25, r24
    2ed6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ed8:	89 2b       	or	r24, r25
    2eda:	8c 93       	st	X, r24
		break;
	}

}
    2edc:	0f 90       	pop	r0
    2ede:	0f 90       	pop	r0
    2ee0:	0f 90       	pop	r0
    2ee2:	0f 90       	pop	r0
    2ee4:	0f 90       	pop	r0
    2ee6:	cf 91       	pop	r28
    2ee8:	df 91       	pop	r29
    2eea:	08 95       	ret

00002eec <Dio_udtreadChanel>:

dio_level_t Dio_udtreadChanel(dio_port_t port, dio_pin_t pin)
{
    2eec:	df 93       	push	r29
    2eee:	cf 93       	push	r28
    2ef0:	00 d0       	rcall	.+0      	; 0x2ef2 <Dio_udtreadChanel+0x6>
    2ef2:	00 d0       	rcall	.+0      	; 0x2ef4 <Dio_udtreadChanel+0x8>
    2ef4:	0f 92       	push	r0
    2ef6:	cd b7       	in	r28, 0x3d	; 61
    2ef8:	de b7       	in	r29, 0x3e	; 62
    2efa:	8a 83       	std	Y+2, r24	; 0x02
    2efc:	6b 83       	std	Y+3, r22	; 0x03
	dio_level_t loc_result = DIO_LOW;
    2efe:	19 82       	std	Y+1, r1	; 0x01

	switch (port)
    2f00:	8a 81       	ldd	r24, Y+2	; 0x02
    2f02:	28 2f       	mov	r18, r24
    2f04:	30 e0       	ldi	r19, 0x00	; 0
    2f06:	3d 83       	std	Y+5, r19	; 0x05
    2f08:	2c 83       	std	Y+4, r18	; 0x04
    2f0a:	4c 81       	ldd	r20, Y+4	; 0x04
    2f0c:	5d 81       	ldd	r21, Y+5	; 0x05
    2f0e:	41 30       	cpi	r20, 0x01	; 1
    2f10:	51 05       	cpc	r21, r1
    2f12:	79 f1       	breq	.+94     	; 0x2f72 <Dio_udtreadChanel+0x86>
    2f14:	8c 81       	ldd	r24, Y+4	; 0x04
    2f16:	9d 81       	ldd	r25, Y+5	; 0x05
    2f18:	82 30       	cpi	r24, 0x02	; 2
    2f1a:	91 05       	cpc	r25, r1
    2f1c:	34 f4       	brge	.+12     	; 0x2f2a <Dio_udtreadChanel+0x3e>
    2f1e:	2c 81       	ldd	r18, Y+4	; 0x04
    2f20:	3d 81       	ldd	r19, Y+5	; 0x05
    2f22:	21 15       	cp	r18, r1
    2f24:	31 05       	cpc	r19, r1
    2f26:	69 f0       	breq	.+26     	; 0x2f42 <Dio_udtreadChanel+0x56>
    2f28:	6b c0       	rjmp	.+214    	; 0x3000 <Dio_udtreadChanel+0x114>
    2f2a:	4c 81       	ldd	r20, Y+4	; 0x04
    2f2c:	5d 81       	ldd	r21, Y+5	; 0x05
    2f2e:	42 30       	cpi	r20, 0x02	; 2
    2f30:	51 05       	cpc	r21, r1
    2f32:	b9 f1       	breq	.+110    	; 0x2fa2 <Dio_udtreadChanel+0xb6>
    2f34:	8c 81       	ldd	r24, Y+4	; 0x04
    2f36:	9d 81       	ldd	r25, Y+5	; 0x05
    2f38:	83 30       	cpi	r24, 0x03	; 3
    2f3a:	91 05       	cpc	r25, r1
    2f3c:	09 f4       	brne	.+2      	; 0x2f40 <Dio_udtreadChanel+0x54>
    2f3e:	49 c0       	rjmp	.+146    	; 0x2fd2 <Dio_udtreadChanel+0xe6>
    2f40:	5f c0       	rjmp	.+190    	; 0x3000 <Dio_udtreadChanel+0x114>
	{
	case DIO_PORTA:
		if (CHECK_BIT(DIO_PINA_REG,pin) == 1)
    2f42:	e9 e3       	ldi	r30, 0x39	; 57
    2f44:	f0 e0       	ldi	r31, 0x00	; 0
    2f46:	80 81       	ld	r24, Z
    2f48:	28 2f       	mov	r18, r24
    2f4a:	30 e0       	ldi	r19, 0x00	; 0
    2f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f4e:	88 2f       	mov	r24, r24
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	a9 01       	movw	r20, r18
    2f54:	02 c0       	rjmp	.+4      	; 0x2f5a <Dio_udtreadChanel+0x6e>
    2f56:	55 95       	asr	r21
    2f58:	47 95       	ror	r20
    2f5a:	8a 95       	dec	r24
    2f5c:	e2 f7       	brpl	.-8      	; 0x2f56 <Dio_udtreadChanel+0x6a>
    2f5e:	ca 01       	movw	r24, r20
    2f60:	81 70       	andi	r24, 0x01	; 1
    2f62:	90 70       	andi	r25, 0x00	; 0
    2f64:	88 23       	and	r24, r24
    2f66:	19 f0       	breq	.+6      	; 0x2f6e <Dio_udtreadChanel+0x82>
		{
			loc_result = DIO_HIGH;
    2f68:	81 e0       	ldi	r24, 0x01	; 1
    2f6a:	89 83       	std	Y+1, r24	; 0x01
    2f6c:	49 c0       	rjmp	.+146    	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2f6e:	19 82       	std	Y+1, r1	; 0x01
    2f70:	47 c0       	rjmp	.+142    	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTB:
		if (CHECK_BIT(DIO_PINB_REG,pin) == 1)
    2f72:	e6 e3       	ldi	r30, 0x36	; 54
    2f74:	f0 e0       	ldi	r31, 0x00	; 0
    2f76:	80 81       	ld	r24, Z
    2f78:	28 2f       	mov	r18, r24
    2f7a:	30 e0       	ldi	r19, 0x00	; 0
    2f7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f7e:	88 2f       	mov	r24, r24
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	a9 01       	movw	r20, r18
    2f84:	02 c0       	rjmp	.+4      	; 0x2f8a <Dio_udtreadChanel+0x9e>
    2f86:	55 95       	asr	r21
    2f88:	47 95       	ror	r20
    2f8a:	8a 95       	dec	r24
    2f8c:	e2 f7       	brpl	.-8      	; 0x2f86 <Dio_udtreadChanel+0x9a>
    2f8e:	ca 01       	movw	r24, r20
    2f90:	81 70       	andi	r24, 0x01	; 1
    2f92:	90 70       	andi	r25, 0x00	; 0
    2f94:	88 23       	and	r24, r24
    2f96:	19 f0       	breq	.+6      	; 0x2f9e <Dio_udtreadChanel+0xb2>
		{
			loc_result = DIO_HIGH;
    2f98:	81 e0       	ldi	r24, 0x01	; 1
    2f9a:	89 83       	std	Y+1, r24	; 0x01
    2f9c:	31 c0       	rjmp	.+98     	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2f9e:	19 82       	std	Y+1, r1	; 0x01
    2fa0:	2f c0       	rjmp	.+94     	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTC:
		if (CHECK_BIT(DIO_PINC_REG,pin) == 1)
    2fa2:	e3 e3       	ldi	r30, 0x33	; 51
    2fa4:	f0 e0       	ldi	r31, 0x00	; 0
    2fa6:	80 81       	ld	r24, Z
    2fa8:	28 2f       	mov	r18, r24
    2faa:	30 e0       	ldi	r19, 0x00	; 0
    2fac:	8b 81       	ldd	r24, Y+3	; 0x03
    2fae:	88 2f       	mov	r24, r24
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	a9 01       	movw	r20, r18
    2fb4:	02 c0       	rjmp	.+4      	; 0x2fba <Dio_udtreadChanel+0xce>
    2fb6:	55 95       	asr	r21
    2fb8:	47 95       	ror	r20
    2fba:	8a 95       	dec	r24
    2fbc:	e2 f7       	brpl	.-8      	; 0x2fb6 <Dio_udtreadChanel+0xca>
    2fbe:	ca 01       	movw	r24, r20
    2fc0:	81 70       	andi	r24, 0x01	; 1
    2fc2:	90 70       	andi	r25, 0x00	; 0
    2fc4:	88 23       	and	r24, r24
    2fc6:	19 f0       	breq	.+6      	; 0x2fce <Dio_udtreadChanel+0xe2>
		{
			loc_result = DIO_HIGH;
    2fc8:	81 e0       	ldi	r24, 0x01	; 1
    2fca:	89 83       	std	Y+1, r24	; 0x01
    2fcc:	19 c0       	rjmp	.+50     	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2fce:	19 82       	std	Y+1, r1	; 0x01
    2fd0:	17 c0       	rjmp	.+46     	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTD:
		if (CHECK_BIT(DIO_PIND_REG,pin) == 1)
    2fd2:	e0 e3       	ldi	r30, 0x30	; 48
    2fd4:	f0 e0       	ldi	r31, 0x00	; 0
    2fd6:	80 81       	ld	r24, Z
    2fd8:	28 2f       	mov	r18, r24
    2fda:	30 e0       	ldi	r19, 0x00	; 0
    2fdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2fde:	88 2f       	mov	r24, r24
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	a9 01       	movw	r20, r18
    2fe4:	02 c0       	rjmp	.+4      	; 0x2fea <Dio_udtreadChanel+0xfe>
    2fe6:	55 95       	asr	r21
    2fe8:	47 95       	ror	r20
    2fea:	8a 95       	dec	r24
    2fec:	e2 f7       	brpl	.-8      	; 0x2fe6 <Dio_udtreadChanel+0xfa>
    2fee:	ca 01       	movw	r24, r20
    2ff0:	81 70       	andi	r24, 0x01	; 1
    2ff2:	90 70       	andi	r25, 0x00	; 0
    2ff4:	88 23       	and	r24, r24
    2ff6:	19 f0       	breq	.+6      	; 0x2ffe <Dio_udtreadChanel+0x112>
		{
			loc_result = DIO_HIGH;
    2ff8:	81 e0       	ldi	r24, 0x01	; 1
    2ffa:	89 83       	std	Y+1, r24	; 0x01
    2ffc:	01 c0       	rjmp	.+2      	; 0x3000 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2ffe:	19 82       	std	Y+1, r1	; 0x01
		}
		break;
	}
	return loc_result;
    3000:	89 81       	ldd	r24, Y+1	; 0x01
}
    3002:	0f 90       	pop	r0
    3004:	0f 90       	pop	r0
    3006:	0f 90       	pop	r0
    3008:	0f 90       	pop	r0
    300a:	0f 90       	pop	r0
    300c:	cf 91       	pop	r28
    300e:	df 91       	pop	r29
    3010:	08 95       	ret

00003012 <Dio_vidflipChanel>:

void Dio_vidflipChanel(dio_port_t port, dio_pin_t pin)
{
    3012:	df 93       	push	r29
    3014:	cf 93       	push	r28
    3016:	00 d0       	rcall	.+0      	; 0x3018 <Dio_vidflipChanel+0x6>
    3018:	00 d0       	rcall	.+0      	; 0x301a <Dio_vidflipChanel+0x8>
    301a:	cd b7       	in	r28, 0x3d	; 61
    301c:	de b7       	in	r29, 0x3e	; 62
    301e:	89 83       	std	Y+1, r24	; 0x01
    3020:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    3022:	89 81       	ldd	r24, Y+1	; 0x01
    3024:	28 2f       	mov	r18, r24
    3026:	30 e0       	ldi	r19, 0x00	; 0
    3028:	3c 83       	std	Y+4, r19	; 0x04
    302a:	2b 83       	std	Y+3, r18	; 0x03
    302c:	8b 81       	ldd	r24, Y+3	; 0x03
    302e:	9c 81       	ldd	r25, Y+4	; 0x04
    3030:	81 30       	cpi	r24, 0x01	; 1
    3032:	91 05       	cpc	r25, r1
    3034:	49 f1       	breq	.+82     	; 0x3088 <Dio_vidflipChanel+0x76>
    3036:	2b 81       	ldd	r18, Y+3	; 0x03
    3038:	3c 81       	ldd	r19, Y+4	; 0x04
    303a:	22 30       	cpi	r18, 0x02	; 2
    303c:	31 05       	cpc	r19, r1
    303e:	2c f4       	brge	.+10     	; 0x304a <Dio_vidflipChanel+0x38>
    3040:	8b 81       	ldd	r24, Y+3	; 0x03
    3042:	9c 81       	ldd	r25, Y+4	; 0x04
    3044:	00 97       	sbiw	r24, 0x00	; 0
    3046:	61 f0       	breq	.+24     	; 0x3060 <Dio_vidflipChanel+0x4e>
    3048:	5a c0       	rjmp	.+180    	; 0x30fe <Dio_vidflipChanel+0xec>
    304a:	2b 81       	ldd	r18, Y+3	; 0x03
    304c:	3c 81       	ldd	r19, Y+4	; 0x04
    304e:	22 30       	cpi	r18, 0x02	; 2
    3050:	31 05       	cpc	r19, r1
    3052:	71 f1       	breq	.+92     	; 0x30b0 <Dio_vidflipChanel+0x9e>
    3054:	8b 81       	ldd	r24, Y+3	; 0x03
    3056:	9c 81       	ldd	r25, Y+4	; 0x04
    3058:	83 30       	cpi	r24, 0x03	; 3
    305a:	91 05       	cpc	r25, r1
    305c:	e9 f1       	breq	.+122    	; 0x30d8 <Dio_vidflipChanel+0xc6>
    305e:	4f c0       	rjmp	.+158    	; 0x30fe <Dio_vidflipChanel+0xec>
	{
	case DIO_PORTA:
		FLIP_BIT(DIO_PORTA_REG,pin);
    3060:	ab e3       	ldi	r26, 0x3B	; 59
    3062:	b0 e0       	ldi	r27, 0x00	; 0
    3064:	eb e3       	ldi	r30, 0x3B	; 59
    3066:	f0 e0       	ldi	r31, 0x00	; 0
    3068:	80 81       	ld	r24, Z
    306a:	48 2f       	mov	r20, r24
    306c:	8a 81       	ldd	r24, Y+2	; 0x02
    306e:	28 2f       	mov	r18, r24
    3070:	30 e0       	ldi	r19, 0x00	; 0
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	02 2e       	mov	r0, r18
    3078:	02 c0       	rjmp	.+4      	; 0x307e <Dio_vidflipChanel+0x6c>
    307a:	88 0f       	add	r24, r24
    307c:	99 1f       	adc	r25, r25
    307e:	0a 94       	dec	r0
    3080:	e2 f7       	brpl	.-8      	; 0x307a <Dio_vidflipChanel+0x68>
    3082:	84 27       	eor	r24, r20
    3084:	8c 93       	st	X, r24
    3086:	3b c0       	rjmp	.+118    	; 0x30fe <Dio_vidflipChanel+0xec>
		break;

	case DIO_PORTB:
		FLIP_BIT(DIO_PORTB_REG,pin);
    3088:	a8 e3       	ldi	r26, 0x38	; 56
    308a:	b0 e0       	ldi	r27, 0x00	; 0
    308c:	e8 e3       	ldi	r30, 0x38	; 56
    308e:	f0 e0       	ldi	r31, 0x00	; 0
    3090:	80 81       	ld	r24, Z
    3092:	48 2f       	mov	r20, r24
    3094:	8a 81       	ldd	r24, Y+2	; 0x02
    3096:	28 2f       	mov	r18, r24
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	81 e0       	ldi	r24, 0x01	; 1
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	02 2e       	mov	r0, r18
    30a0:	02 c0       	rjmp	.+4      	; 0x30a6 <Dio_vidflipChanel+0x94>
    30a2:	88 0f       	add	r24, r24
    30a4:	99 1f       	adc	r25, r25
    30a6:	0a 94       	dec	r0
    30a8:	e2 f7       	brpl	.-8      	; 0x30a2 <Dio_vidflipChanel+0x90>
    30aa:	84 27       	eor	r24, r20
    30ac:	8c 93       	st	X, r24
    30ae:	27 c0       	rjmp	.+78     	; 0x30fe <Dio_vidflipChanel+0xec>
		break;

	case DIO_PORTC:
		FLIP_BIT(DIO_PORTC_REG,pin);
    30b0:	a5 e3       	ldi	r26, 0x35	; 53
    30b2:	b0 e0       	ldi	r27, 0x00	; 0
    30b4:	e5 e3       	ldi	r30, 0x35	; 53
    30b6:	f0 e0       	ldi	r31, 0x00	; 0
    30b8:	80 81       	ld	r24, Z
    30ba:	48 2f       	mov	r20, r24
    30bc:	8a 81       	ldd	r24, Y+2	; 0x02
    30be:	28 2f       	mov	r18, r24
    30c0:	30 e0       	ldi	r19, 0x00	; 0
    30c2:	81 e0       	ldi	r24, 0x01	; 1
    30c4:	90 e0       	ldi	r25, 0x00	; 0
    30c6:	02 2e       	mov	r0, r18
    30c8:	02 c0       	rjmp	.+4      	; 0x30ce <Dio_vidflipChanel+0xbc>
    30ca:	88 0f       	add	r24, r24
    30cc:	99 1f       	adc	r25, r25
    30ce:	0a 94       	dec	r0
    30d0:	e2 f7       	brpl	.-8      	; 0x30ca <Dio_vidflipChanel+0xb8>
    30d2:	84 27       	eor	r24, r20
    30d4:	8c 93       	st	X, r24
    30d6:	13 c0       	rjmp	.+38     	; 0x30fe <Dio_vidflipChanel+0xec>
		break;

	case DIO_PORTD:
		FLIP_BIT(DIO_PORTD_REG,pin);
    30d8:	a2 e3       	ldi	r26, 0x32	; 50
    30da:	b0 e0       	ldi	r27, 0x00	; 0
    30dc:	e2 e3       	ldi	r30, 0x32	; 50
    30de:	f0 e0       	ldi	r31, 0x00	; 0
    30e0:	80 81       	ld	r24, Z
    30e2:	48 2f       	mov	r20, r24
    30e4:	8a 81       	ldd	r24, Y+2	; 0x02
    30e6:	28 2f       	mov	r18, r24
    30e8:	30 e0       	ldi	r19, 0x00	; 0
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	90 e0       	ldi	r25, 0x00	; 0
    30ee:	02 2e       	mov	r0, r18
    30f0:	02 c0       	rjmp	.+4      	; 0x30f6 <Dio_vidflipChanel+0xe4>
    30f2:	88 0f       	add	r24, r24
    30f4:	99 1f       	adc	r25, r25
    30f6:	0a 94       	dec	r0
    30f8:	e2 f7       	brpl	.-8      	; 0x30f2 <Dio_vidflipChanel+0xe0>
    30fa:	84 27       	eor	r24, r20
    30fc:	8c 93       	st	X, r24
		break;
	}
}
    30fe:	0f 90       	pop	r0
    3100:	0f 90       	pop	r0
    3102:	0f 90       	pop	r0
    3104:	0f 90       	pop	r0
    3106:	cf 91       	pop	r28
    3108:	df 91       	pop	r29
    310a:	08 95       	ret

0000310c <Dio_vidPullUpEnalple>:

void Dio_vidPullUpEnalple (dio_port_t port, dio_pin_t pin)
{
    310c:	df 93       	push	r29
    310e:	cf 93       	push	r28
    3110:	00 d0       	rcall	.+0      	; 0x3112 <Dio_vidPullUpEnalple+0x6>
    3112:	00 d0       	rcall	.+0      	; 0x3114 <Dio_vidPullUpEnalple+0x8>
    3114:	cd b7       	in	r28, 0x3d	; 61
    3116:	de b7       	in	r29, 0x3e	; 62
    3118:	89 83       	std	Y+1, r24	; 0x01
    311a:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    311c:	89 81       	ldd	r24, Y+1	; 0x01
    311e:	28 2f       	mov	r18, r24
    3120:	30 e0       	ldi	r19, 0x00	; 0
    3122:	3c 83       	std	Y+4, r19	; 0x04
    3124:	2b 83       	std	Y+3, r18	; 0x03
    3126:	8b 81       	ldd	r24, Y+3	; 0x03
    3128:	9c 81       	ldd	r25, Y+4	; 0x04
    312a:	81 30       	cpi	r24, 0x01	; 1
    312c:	91 05       	cpc	r25, r1
    312e:	49 f1       	breq	.+82     	; 0x3182 <Dio_vidPullUpEnalple+0x76>
    3130:	2b 81       	ldd	r18, Y+3	; 0x03
    3132:	3c 81       	ldd	r19, Y+4	; 0x04
    3134:	22 30       	cpi	r18, 0x02	; 2
    3136:	31 05       	cpc	r19, r1
    3138:	2c f4       	brge	.+10     	; 0x3144 <Dio_vidPullUpEnalple+0x38>
    313a:	8b 81       	ldd	r24, Y+3	; 0x03
    313c:	9c 81       	ldd	r25, Y+4	; 0x04
    313e:	00 97       	sbiw	r24, 0x00	; 0
    3140:	61 f0       	breq	.+24     	; 0x315a <Dio_vidPullUpEnalple+0x4e>
    3142:	5a c0       	rjmp	.+180    	; 0x31f8 <Dio_vidPullUpEnalple+0xec>
    3144:	2b 81       	ldd	r18, Y+3	; 0x03
    3146:	3c 81       	ldd	r19, Y+4	; 0x04
    3148:	22 30       	cpi	r18, 0x02	; 2
    314a:	31 05       	cpc	r19, r1
    314c:	71 f1       	breq	.+92     	; 0x31aa <Dio_vidPullUpEnalple+0x9e>
    314e:	8b 81       	ldd	r24, Y+3	; 0x03
    3150:	9c 81       	ldd	r25, Y+4	; 0x04
    3152:	83 30       	cpi	r24, 0x03	; 3
    3154:	91 05       	cpc	r25, r1
    3156:	e9 f1       	breq	.+122    	; 0x31d2 <Dio_vidPullUpEnalple+0xc6>
    3158:	4f c0       	rjmp	.+158    	; 0x31f8 <Dio_vidPullUpEnalple+0xec>
		{
		case DIO_PORTA:
			SET_BIT(DIO_PORTA_REG,pin);
    315a:	ab e3       	ldi	r26, 0x3B	; 59
    315c:	b0 e0       	ldi	r27, 0x00	; 0
    315e:	eb e3       	ldi	r30, 0x3B	; 59
    3160:	f0 e0       	ldi	r31, 0x00	; 0
    3162:	80 81       	ld	r24, Z
    3164:	48 2f       	mov	r20, r24
    3166:	8a 81       	ldd	r24, Y+2	; 0x02
    3168:	28 2f       	mov	r18, r24
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	81 e0       	ldi	r24, 0x01	; 1
    316e:	90 e0       	ldi	r25, 0x00	; 0
    3170:	02 2e       	mov	r0, r18
    3172:	02 c0       	rjmp	.+4      	; 0x3178 <Dio_vidPullUpEnalple+0x6c>
    3174:	88 0f       	add	r24, r24
    3176:	99 1f       	adc	r25, r25
    3178:	0a 94       	dec	r0
    317a:	e2 f7       	brpl	.-8      	; 0x3174 <Dio_vidPullUpEnalple+0x68>
    317c:	84 2b       	or	r24, r20
    317e:	8c 93       	st	X, r24
    3180:	3b c0       	rjmp	.+118    	; 0x31f8 <Dio_vidPullUpEnalple+0xec>
			break;

		case DIO_PORTB:
			SET_BIT(DIO_PORTB_REG,pin);
    3182:	a8 e3       	ldi	r26, 0x38	; 56
    3184:	b0 e0       	ldi	r27, 0x00	; 0
    3186:	e8 e3       	ldi	r30, 0x38	; 56
    3188:	f0 e0       	ldi	r31, 0x00	; 0
    318a:	80 81       	ld	r24, Z
    318c:	48 2f       	mov	r20, r24
    318e:	8a 81       	ldd	r24, Y+2	; 0x02
    3190:	28 2f       	mov	r18, r24
    3192:	30 e0       	ldi	r19, 0x00	; 0
    3194:	81 e0       	ldi	r24, 0x01	; 1
    3196:	90 e0       	ldi	r25, 0x00	; 0
    3198:	02 2e       	mov	r0, r18
    319a:	02 c0       	rjmp	.+4      	; 0x31a0 <Dio_vidPullUpEnalple+0x94>
    319c:	88 0f       	add	r24, r24
    319e:	99 1f       	adc	r25, r25
    31a0:	0a 94       	dec	r0
    31a2:	e2 f7       	brpl	.-8      	; 0x319c <Dio_vidPullUpEnalple+0x90>
    31a4:	84 2b       	or	r24, r20
    31a6:	8c 93       	st	X, r24
    31a8:	27 c0       	rjmp	.+78     	; 0x31f8 <Dio_vidPullUpEnalple+0xec>
			break;

		case DIO_PORTC:
			SET_BIT(DIO_PORTC_REG,pin);
    31aa:	a5 e3       	ldi	r26, 0x35	; 53
    31ac:	b0 e0       	ldi	r27, 0x00	; 0
    31ae:	e5 e3       	ldi	r30, 0x35	; 53
    31b0:	f0 e0       	ldi	r31, 0x00	; 0
    31b2:	80 81       	ld	r24, Z
    31b4:	48 2f       	mov	r20, r24
    31b6:	8a 81       	ldd	r24, Y+2	; 0x02
    31b8:	28 2f       	mov	r18, r24
    31ba:	30 e0       	ldi	r19, 0x00	; 0
    31bc:	81 e0       	ldi	r24, 0x01	; 1
    31be:	90 e0       	ldi	r25, 0x00	; 0
    31c0:	02 2e       	mov	r0, r18
    31c2:	02 c0       	rjmp	.+4      	; 0x31c8 <Dio_vidPullUpEnalple+0xbc>
    31c4:	88 0f       	add	r24, r24
    31c6:	99 1f       	adc	r25, r25
    31c8:	0a 94       	dec	r0
    31ca:	e2 f7       	brpl	.-8      	; 0x31c4 <Dio_vidPullUpEnalple+0xb8>
    31cc:	84 2b       	or	r24, r20
    31ce:	8c 93       	st	X, r24
    31d0:	13 c0       	rjmp	.+38     	; 0x31f8 <Dio_vidPullUpEnalple+0xec>
			break;

		case DIO_PORTD:
			SET_BIT(DIO_PORTD_REG,pin);
    31d2:	a2 e3       	ldi	r26, 0x32	; 50
    31d4:	b0 e0       	ldi	r27, 0x00	; 0
    31d6:	e2 e3       	ldi	r30, 0x32	; 50
    31d8:	f0 e0       	ldi	r31, 0x00	; 0
    31da:	80 81       	ld	r24, Z
    31dc:	48 2f       	mov	r20, r24
    31de:	8a 81       	ldd	r24, Y+2	; 0x02
    31e0:	28 2f       	mov	r18, r24
    31e2:	30 e0       	ldi	r19, 0x00	; 0
    31e4:	81 e0       	ldi	r24, 0x01	; 1
    31e6:	90 e0       	ldi	r25, 0x00	; 0
    31e8:	02 2e       	mov	r0, r18
    31ea:	02 c0       	rjmp	.+4      	; 0x31f0 <Dio_vidPullUpEnalple+0xe4>
    31ec:	88 0f       	add	r24, r24
    31ee:	99 1f       	adc	r25, r25
    31f0:	0a 94       	dec	r0
    31f2:	e2 f7       	brpl	.-8      	; 0x31ec <Dio_vidPullUpEnalple+0xe0>
    31f4:	84 2b       	or	r24, r20
    31f6:	8c 93       	st	X, r24
			break;
		}
}
    31f8:	0f 90       	pop	r0
    31fa:	0f 90       	pop	r0
    31fc:	0f 90       	pop	r0
    31fe:	0f 90       	pop	r0
    3200:	cf 91       	pop	r28
    3202:	df 91       	pop	r29
    3204:	08 95       	ret

00003206 <ADC_vidInit>:

#include "ADC.h"
#include "Bit_Math.h"

void ADC_vidInit(void)
{
    3206:	df 93       	push	r29
    3208:	cf 93       	push	r28
    320a:	cd b7       	in	r28, 0x3d	; 61
    320c:	de b7       	in	r29, 0x3e	; 62
	// Enable adc
	SET_BIT(ADC_ADCSRA_REG , 7);
    320e:	a6 e2       	ldi	r26, 0x26	; 38
    3210:	b0 e0       	ldi	r27, 0x00	; 0
    3212:	e6 e2       	ldi	r30, 0x26	; 38
    3214:	f0 e0       	ldi	r31, 0x00	; 0
    3216:	80 81       	ld	r24, Z
    3218:	80 68       	ori	r24, 0x80	; 128
    321a:	8c 93       	st	X, r24
	// select Verf+
	SET_BIT(ADC_ADMUX_REG , 6);
    321c:	a7 e2       	ldi	r26, 0x27	; 39
    321e:	b0 e0       	ldi	r27, 0x00	; 0
    3220:	e7 e2       	ldi	r30, 0x27	; 39
    3222:	f0 e0       	ldi	r31, 0x00	; 0
    3224:	80 81       	ld	r24, Z
    3226:	80 64       	ori	r24, 0x40	; 64
    3228:	8c 93       	st	X, r24
	CLEAR_BIT(ADC_ADMUX_REG , 7);
    322a:	a7 e2       	ldi	r26, 0x27	; 39
    322c:	b0 e0       	ldi	r27, 0x00	; 0
    322e:	e7 e2       	ldi	r30, 0x27	; 39
    3230:	f0 e0       	ldi	r31, 0x00	; 0
    3232:	80 81       	ld	r24, Z
    3234:	8f 77       	andi	r24, 0x7F	; 127
    3236:	8c 93       	st	X, r24
	//select prescaler factor /128
	SET_BIT(ADC_ADCSRA_REG , 0);
    3238:	a6 e2       	ldi	r26, 0x26	; 38
    323a:	b0 e0       	ldi	r27, 0x00	; 0
    323c:	e6 e2       	ldi	r30, 0x26	; 38
    323e:	f0 e0       	ldi	r31, 0x00	; 0
    3240:	80 81       	ld	r24, Z
    3242:	81 60       	ori	r24, 0x01	; 1
    3244:	8c 93       	st	X, r24
	SET_BIT(ADC_ADCSRA_REG , 1);
    3246:	a6 e2       	ldi	r26, 0x26	; 38
    3248:	b0 e0       	ldi	r27, 0x00	; 0
    324a:	e6 e2       	ldi	r30, 0x26	; 38
    324c:	f0 e0       	ldi	r31, 0x00	; 0
    324e:	80 81       	ld	r24, Z
    3250:	82 60       	ori	r24, 0x02	; 2
    3252:	8c 93       	st	X, r24
	SET_BIT(ADC_ADCSRA_REG , 2);
    3254:	a6 e2       	ldi	r26, 0x26	; 38
    3256:	b0 e0       	ldi	r27, 0x00	; 0
    3258:	e6 e2       	ldi	r30, 0x26	; 38
    325a:	f0 e0       	ldi	r31, 0x00	; 0
    325c:	80 81       	ld	r24, Z
    325e:	84 60       	ori	r24, 0x04	; 4
    3260:	8c 93       	st	X, r24
		//or
		//ADC_ADCSRA_REG |= 7;

}
    3262:	cf 91       	pop	r28
    3264:	df 91       	pop	r29
    3266:	08 95       	ret

00003268 <ADC_f64ADCRead>:


f64 ADC_f64ADCRead (ADC_channelID_t channel)
{
    3268:	df 93       	push	r29
    326a:	cf 93       	push	r28
    326c:	cd b7       	in	r28, 0x3d	; 61
    326e:	de b7       	in	r29, 0x3e	; 62
    3270:	27 97       	sbiw	r28, 0x07	; 7
    3272:	0f b6       	in	r0, 0x3f	; 63
    3274:	f8 94       	cli
    3276:	de bf       	out	0x3e, r29	; 62
    3278:	0f be       	out	0x3f, r0	; 63
    327a:	cd bf       	out	0x3d, r28	; 61
    327c:	8f 83       	std	Y+7, r24	; 0x07
	u16 loc_ADCResult = 0;     //result to be returned
    327e:	1e 82       	std	Y+6, r1	; 0x06
    3280:	1d 82       	std	Y+5, r1	; 0x05
	f64 loc_volt = loc_ADCResult*ADC_step;
    3282:	8d 81       	ldd	r24, Y+5	; 0x05
    3284:	9e 81       	ldd	r25, Y+6	; 0x06
    3286:	cc 01       	movw	r24, r24
    3288:	a0 e0       	ldi	r26, 0x00	; 0
    328a:	b0 e0       	ldi	r27, 0x00	; 0
    328c:	bc 01       	movw	r22, r24
    328e:	cd 01       	movw	r24, r26
    3290:	0e 94 a1 04 	call	0x942	; 0x942 <__floatunsisf>
    3294:	dc 01       	movw	r26, r24
    3296:	cb 01       	movw	r24, r22
    3298:	bc 01       	movw	r22, r24
    329a:	cd 01       	movw	r24, r26
    329c:	2a e9       	ldi	r18, 0x9A	; 154
    329e:	39 e9       	ldi	r19, 0x99	; 153
    32a0:	49 e9       	ldi	r20, 0x99	; 153
    32a2:	50 e4       	ldi	r21, 0x40	; 64
    32a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32a8:	dc 01       	movw	r26, r24
    32aa:	cb 01       	movw	r24, r22
    32ac:	89 83       	std	Y+1, r24	; 0x01
    32ae:	9a 83       	std	Y+2, r25	; 0x02
    32b0:	ab 83       	std	Y+3, r26	; 0x03
    32b2:	bc 83       	std	Y+4, r27	; 0x04
	//select channel ADC1
	ADC_ADMUX_REG =(ADC_ADMUX_REG & 0xF8) | channel;
    32b4:	a7 e2       	ldi	r26, 0x27	; 39
    32b6:	b0 e0       	ldi	r27, 0x00	; 0
    32b8:	e7 e2       	ldi	r30, 0x27	; 39
    32ba:	f0 e0       	ldi	r31, 0x00	; 0
    32bc:	80 81       	ld	r24, Z
    32be:	98 2f       	mov	r25, r24
    32c0:	98 7f       	andi	r25, 0xF8	; 248
    32c2:	8f 81       	ldd	r24, Y+7	; 0x07
    32c4:	89 2b       	or	r24, r25
    32c6:	8c 93       	st	X, r24


	//set start conversion
	SET_BIT(ADC_ADCSRA_REG , 6);
    32c8:	a6 e2       	ldi	r26, 0x26	; 38
    32ca:	b0 e0       	ldi	r27, 0x00	; 0
    32cc:	e6 e2       	ldi	r30, 0x26	; 38
    32ce:	f0 e0       	ldi	r31, 0x00	; 0
    32d0:	80 81       	ld	r24, Z
    32d2:	80 64       	ori	r24, 0x40	; 64
    32d4:	8c 93       	st	X, r24

	//wait on ADIF flag to be raised
	while ( CHECK_BIT(ADC_ADCSRA_REG , 4) != 1 )
    32d6:	e6 e2       	ldi	r30, 0x26	; 38
    32d8:	f0 e0       	ldi	r31, 0x00	; 0
    32da:	80 81       	ld	r24, Z
    32dc:	82 95       	swap	r24
    32de:	8f 70       	andi	r24, 0x0F	; 15
    32e0:	88 2f       	mov	r24, r24
    32e2:	90 e0       	ldi	r25, 0x00	; 0
    32e4:	81 70       	andi	r24, 0x01	; 1
    32e6:	90 70       	andi	r25, 0x00	; 0
    32e8:	00 97       	sbiw	r24, 0x00	; 0
    32ea:	a9 f3       	breq	.-22     	; 0x32d6 <ADC_f64ADCRead+0x6e>
	{
		// DO nothing
	}
	// to clear the flag ,you should write 1 on the bit (related to AVR) , but the hardware will write 0 on the bit
	SET_BIT(ADC_ADCSRA_REG , 4); //to clear the interrupt flag
    32ec:	a6 e2       	ldi	r26, 0x26	; 38
    32ee:	b0 e0       	ldi	r27, 0x00	; 0
    32f0:	e6 e2       	ldi	r30, 0x26	; 38
    32f2:	f0 e0       	ldi	r31, 0x00	; 0
    32f4:	80 81       	ld	r24, Z
    32f6:	80 61       	ori	r24, 0x10	; 16
    32f8:	8c 93       	st	X, r24

	//read ADCL and ADCH
	loc_ADCResult = (ADC_ADCL_REG)|(ADC_ADCH_REG << 8);
    32fa:	e4 e2       	ldi	r30, 0x24	; 36
    32fc:	f0 e0       	ldi	r31, 0x00	; 0
    32fe:	80 81       	ld	r24, Z
    3300:	28 2f       	mov	r18, r24
    3302:	30 e0       	ldi	r19, 0x00	; 0
    3304:	e5 e2       	ldi	r30, 0x25	; 37
    3306:	f0 e0       	ldi	r31, 0x00	; 0
    3308:	80 81       	ld	r24, Z
    330a:	88 2f       	mov	r24, r24
    330c:	90 e0       	ldi	r25, 0x00	; 0
    330e:	98 2f       	mov	r25, r24
    3310:	88 27       	eor	r24, r24
    3312:	82 2b       	or	r24, r18
    3314:	93 2b       	or	r25, r19
    3316:	9e 83       	std	Y+6, r25	; 0x06
    3318:	8d 83       	std	Y+5, r24	; 0x05

	loc_volt = loc_ADCResult *ADC_step;
    331a:	8d 81       	ldd	r24, Y+5	; 0x05
    331c:	9e 81       	ldd	r25, Y+6	; 0x06
    331e:	cc 01       	movw	r24, r24
    3320:	a0 e0       	ldi	r26, 0x00	; 0
    3322:	b0 e0       	ldi	r27, 0x00	; 0
    3324:	bc 01       	movw	r22, r24
    3326:	cd 01       	movw	r24, r26
    3328:	0e 94 a1 04 	call	0x942	; 0x942 <__floatunsisf>
    332c:	dc 01       	movw	r26, r24
    332e:	cb 01       	movw	r24, r22
    3330:	bc 01       	movw	r22, r24
    3332:	cd 01       	movw	r24, r26
    3334:	2a e9       	ldi	r18, 0x9A	; 154
    3336:	39 e9       	ldi	r19, 0x99	; 153
    3338:	49 e9       	ldi	r20, 0x99	; 153
    333a:	50 e4       	ldi	r21, 0x40	; 64
    333c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	89 83       	std	Y+1, r24	; 0x01
    3346:	9a 83       	std	Y+2, r25	; 0x02
    3348:	ab 83       	std	Y+3, r26	; 0x03
    334a:	bc 83       	std	Y+4, r27	; 0x04

	return loc_volt;
    334c:	89 81       	ldd	r24, Y+1	; 0x01
    334e:	9a 81       	ldd	r25, Y+2	; 0x02
    3350:	ab 81       	ldd	r26, Y+3	; 0x03
    3352:	bc 81       	ldd	r27, Y+4	; 0x04
}
    3354:	bc 01       	movw	r22, r24
    3356:	cd 01       	movw	r24, r26
    3358:	27 96       	adiw	r28, 0x07	; 7
    335a:	0f b6       	in	r0, 0x3f	; 63
    335c:	f8 94       	cli
    335e:	de bf       	out	0x3e, r29	; 62
    3360:	0f be       	out	0x3f, r0	; 63
    3362:	cd bf       	out	0x3d, r28	; 61
    3364:	cf 91       	pop	r28
    3366:	df 91       	pop	r29
    3368:	08 95       	ret

0000336a <__prologue_saves__>:
    336a:	2f 92       	push	r2
    336c:	3f 92       	push	r3
    336e:	4f 92       	push	r4
    3370:	5f 92       	push	r5
    3372:	6f 92       	push	r6
    3374:	7f 92       	push	r7
    3376:	8f 92       	push	r8
    3378:	9f 92       	push	r9
    337a:	af 92       	push	r10
    337c:	bf 92       	push	r11
    337e:	cf 92       	push	r12
    3380:	df 92       	push	r13
    3382:	ef 92       	push	r14
    3384:	ff 92       	push	r15
    3386:	0f 93       	push	r16
    3388:	1f 93       	push	r17
    338a:	cf 93       	push	r28
    338c:	df 93       	push	r29
    338e:	cd b7       	in	r28, 0x3d	; 61
    3390:	de b7       	in	r29, 0x3e	; 62
    3392:	ca 1b       	sub	r28, r26
    3394:	db 0b       	sbc	r29, r27
    3396:	0f b6       	in	r0, 0x3f	; 63
    3398:	f8 94       	cli
    339a:	de bf       	out	0x3e, r29	; 62
    339c:	0f be       	out	0x3f, r0	; 63
    339e:	cd bf       	out	0x3d, r28	; 61
    33a0:	09 94       	ijmp

000033a2 <__epilogue_restores__>:
    33a2:	2a 88       	ldd	r2, Y+18	; 0x12
    33a4:	39 88       	ldd	r3, Y+17	; 0x11
    33a6:	48 88       	ldd	r4, Y+16	; 0x10
    33a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    33aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    33ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    33ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    33b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    33b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    33b4:	b9 84       	ldd	r11, Y+9	; 0x09
    33b6:	c8 84       	ldd	r12, Y+8	; 0x08
    33b8:	df 80       	ldd	r13, Y+7	; 0x07
    33ba:	ee 80       	ldd	r14, Y+6	; 0x06
    33bc:	fd 80       	ldd	r15, Y+5	; 0x05
    33be:	0c 81       	ldd	r16, Y+4	; 0x04
    33c0:	1b 81       	ldd	r17, Y+3	; 0x03
    33c2:	aa 81       	ldd	r26, Y+2	; 0x02
    33c4:	b9 81       	ldd	r27, Y+1	; 0x01
    33c6:	ce 0f       	add	r28, r30
    33c8:	d1 1d       	adc	r29, r1
    33ca:	0f b6       	in	r0, 0x3f	; 63
    33cc:	f8 94       	cli
    33ce:	de bf       	out	0x3e, r29	; 62
    33d0:	0f be       	out	0x3f, r0	; 63
    33d2:	cd bf       	out	0x3d, r28	; 61
    33d4:	ed 01       	movw	r28, r26
    33d6:	08 95       	ret

000033d8 <sprintf>:
    33d8:	ae e0       	ldi	r26, 0x0E	; 14
    33da:	b0 e0       	ldi	r27, 0x00	; 0
    33dc:	e2 ef       	ldi	r30, 0xF2	; 242
    33de:	f9 e1       	ldi	r31, 0x19	; 25
    33e0:	0c 94 c3 19 	jmp	0x3386	; 0x3386 <__prologue_saves__+0x1c>
    33e4:	0d 89       	ldd	r16, Y+21	; 0x15
    33e6:	1e 89       	ldd	r17, Y+22	; 0x16
    33e8:	86 e0       	ldi	r24, 0x06	; 6
    33ea:	8c 83       	std	Y+4, r24	; 0x04
    33ec:	1a 83       	std	Y+2, r17	; 0x02
    33ee:	09 83       	std	Y+1, r16	; 0x01
    33f0:	8f ef       	ldi	r24, 0xFF	; 255
    33f2:	9f e7       	ldi	r25, 0x7F	; 127
    33f4:	9e 83       	std	Y+6, r25	; 0x06
    33f6:	8d 83       	std	Y+5, r24	; 0x05
    33f8:	9e 01       	movw	r18, r28
    33fa:	27 5e       	subi	r18, 0xE7	; 231
    33fc:	3f 4f       	sbci	r19, 0xFF	; 255
    33fe:	ce 01       	movw	r24, r28
    3400:	01 96       	adiw	r24, 0x01	; 1
    3402:	6f 89       	ldd	r22, Y+23	; 0x17
    3404:	78 8d       	ldd	r23, Y+24	; 0x18
    3406:	a9 01       	movw	r20, r18
    3408:	0e 94 10 1a 	call	0x3420	; 0x3420 <vfprintf>
    340c:	2f 81       	ldd	r18, Y+7	; 0x07
    340e:	38 85       	ldd	r19, Y+8	; 0x08
    3410:	02 0f       	add	r16, r18
    3412:	13 1f       	adc	r17, r19
    3414:	f8 01       	movw	r30, r16
    3416:	10 82       	st	Z, r1
    3418:	2e 96       	adiw	r28, 0x0e	; 14
    341a:	e4 e0       	ldi	r30, 0x04	; 4
    341c:	0c 94 df 19 	jmp	0x33be	; 0x33be <__epilogue_restores__+0x1c>

00003420 <vfprintf>:
    3420:	ab e0       	ldi	r26, 0x0B	; 11
    3422:	b0 e0       	ldi	r27, 0x00	; 0
    3424:	e6 e1       	ldi	r30, 0x16	; 22
    3426:	fa e1       	ldi	r31, 0x1A	; 26
    3428:	0c 94 b5 19 	jmp	0x336a	; 0x336a <__prologue_saves__>
    342c:	3c 01       	movw	r6, r24
    342e:	2b 01       	movw	r4, r22
    3430:	5a 01       	movw	r10, r20
    3432:	fc 01       	movw	r30, r24
    3434:	17 82       	std	Z+7, r1	; 0x07
    3436:	16 82       	std	Z+6, r1	; 0x06
    3438:	83 81       	ldd	r24, Z+3	; 0x03
    343a:	81 fd       	sbrc	r24, 1
    343c:	03 c0       	rjmp	.+6      	; 0x3444 <vfprintf+0x24>
    343e:	6f ef       	ldi	r22, 0xFF	; 255
    3440:	7f ef       	ldi	r23, 0xFF	; 255
    3442:	c6 c1       	rjmp	.+908    	; 0x37d0 <vfprintf+0x3b0>
    3444:	9a e0       	ldi	r25, 0x0A	; 10
    3446:	89 2e       	mov	r8, r25
    3448:	1e 01       	movw	r2, r28
    344a:	08 94       	sec
    344c:	21 1c       	adc	r2, r1
    344e:	31 1c       	adc	r3, r1
    3450:	f3 01       	movw	r30, r6
    3452:	23 81       	ldd	r18, Z+3	; 0x03
    3454:	f2 01       	movw	r30, r4
    3456:	23 fd       	sbrc	r18, 3
    3458:	85 91       	lpm	r24, Z+
    345a:	23 ff       	sbrs	r18, 3
    345c:	81 91       	ld	r24, Z+
    345e:	2f 01       	movw	r4, r30
    3460:	88 23       	and	r24, r24
    3462:	09 f4       	brne	.+2      	; 0x3466 <vfprintf+0x46>
    3464:	b2 c1       	rjmp	.+868    	; 0x37ca <vfprintf+0x3aa>
    3466:	85 32       	cpi	r24, 0x25	; 37
    3468:	39 f4       	brne	.+14     	; 0x3478 <vfprintf+0x58>
    346a:	23 fd       	sbrc	r18, 3
    346c:	85 91       	lpm	r24, Z+
    346e:	23 ff       	sbrs	r18, 3
    3470:	81 91       	ld	r24, Z+
    3472:	2f 01       	movw	r4, r30
    3474:	85 32       	cpi	r24, 0x25	; 37
    3476:	29 f4       	brne	.+10     	; 0x3482 <vfprintf+0x62>
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	b3 01       	movw	r22, r6
    347c:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    3480:	e7 cf       	rjmp	.-50     	; 0x3450 <vfprintf+0x30>
    3482:	98 2f       	mov	r25, r24
    3484:	ff 24       	eor	r15, r15
    3486:	ee 24       	eor	r14, r14
    3488:	99 24       	eor	r9, r9
    348a:	ff e1       	ldi	r31, 0x1F	; 31
    348c:	ff 15       	cp	r31, r15
    348e:	d0 f0       	brcs	.+52     	; 0x34c4 <vfprintf+0xa4>
    3490:	9b 32       	cpi	r25, 0x2B	; 43
    3492:	69 f0       	breq	.+26     	; 0x34ae <vfprintf+0x8e>
    3494:	9c 32       	cpi	r25, 0x2C	; 44
    3496:	28 f4       	brcc	.+10     	; 0x34a2 <vfprintf+0x82>
    3498:	90 32       	cpi	r25, 0x20	; 32
    349a:	59 f0       	breq	.+22     	; 0x34b2 <vfprintf+0x92>
    349c:	93 32       	cpi	r25, 0x23	; 35
    349e:	91 f4       	brne	.+36     	; 0x34c4 <vfprintf+0xa4>
    34a0:	0e c0       	rjmp	.+28     	; 0x34be <vfprintf+0x9e>
    34a2:	9d 32       	cpi	r25, 0x2D	; 45
    34a4:	49 f0       	breq	.+18     	; 0x34b8 <vfprintf+0x98>
    34a6:	90 33       	cpi	r25, 0x30	; 48
    34a8:	69 f4       	brne	.+26     	; 0x34c4 <vfprintf+0xa4>
    34aa:	41 e0       	ldi	r20, 0x01	; 1
    34ac:	24 c0       	rjmp	.+72     	; 0x34f6 <vfprintf+0xd6>
    34ae:	52 e0       	ldi	r21, 0x02	; 2
    34b0:	f5 2a       	or	r15, r21
    34b2:	84 e0       	ldi	r24, 0x04	; 4
    34b4:	f8 2a       	or	r15, r24
    34b6:	28 c0       	rjmp	.+80     	; 0x3508 <vfprintf+0xe8>
    34b8:	98 e0       	ldi	r25, 0x08	; 8
    34ba:	f9 2a       	or	r15, r25
    34bc:	25 c0       	rjmp	.+74     	; 0x3508 <vfprintf+0xe8>
    34be:	e0 e1       	ldi	r30, 0x10	; 16
    34c0:	fe 2a       	or	r15, r30
    34c2:	22 c0       	rjmp	.+68     	; 0x3508 <vfprintf+0xe8>
    34c4:	f7 fc       	sbrc	r15, 7
    34c6:	29 c0       	rjmp	.+82     	; 0x351a <vfprintf+0xfa>
    34c8:	89 2f       	mov	r24, r25
    34ca:	80 53       	subi	r24, 0x30	; 48
    34cc:	8a 30       	cpi	r24, 0x0A	; 10
    34ce:	70 f4       	brcc	.+28     	; 0x34ec <vfprintf+0xcc>
    34d0:	f6 fe       	sbrs	r15, 6
    34d2:	05 c0       	rjmp	.+10     	; 0x34de <vfprintf+0xbe>
    34d4:	98 9c       	mul	r9, r8
    34d6:	90 2c       	mov	r9, r0
    34d8:	11 24       	eor	r1, r1
    34da:	98 0e       	add	r9, r24
    34dc:	15 c0       	rjmp	.+42     	; 0x3508 <vfprintf+0xe8>
    34de:	e8 9c       	mul	r14, r8
    34e0:	e0 2c       	mov	r14, r0
    34e2:	11 24       	eor	r1, r1
    34e4:	e8 0e       	add	r14, r24
    34e6:	f0 e2       	ldi	r31, 0x20	; 32
    34e8:	ff 2a       	or	r15, r31
    34ea:	0e c0       	rjmp	.+28     	; 0x3508 <vfprintf+0xe8>
    34ec:	9e 32       	cpi	r25, 0x2E	; 46
    34ee:	29 f4       	brne	.+10     	; 0x34fa <vfprintf+0xda>
    34f0:	f6 fc       	sbrc	r15, 6
    34f2:	6b c1       	rjmp	.+726    	; 0x37ca <vfprintf+0x3aa>
    34f4:	40 e4       	ldi	r20, 0x40	; 64
    34f6:	f4 2a       	or	r15, r20
    34f8:	07 c0       	rjmp	.+14     	; 0x3508 <vfprintf+0xe8>
    34fa:	9c 36       	cpi	r25, 0x6C	; 108
    34fc:	19 f4       	brne	.+6      	; 0x3504 <vfprintf+0xe4>
    34fe:	50 e8       	ldi	r21, 0x80	; 128
    3500:	f5 2a       	or	r15, r21
    3502:	02 c0       	rjmp	.+4      	; 0x3508 <vfprintf+0xe8>
    3504:	98 36       	cpi	r25, 0x68	; 104
    3506:	49 f4       	brne	.+18     	; 0x351a <vfprintf+0xfa>
    3508:	f2 01       	movw	r30, r4
    350a:	23 fd       	sbrc	r18, 3
    350c:	95 91       	lpm	r25, Z+
    350e:	23 ff       	sbrs	r18, 3
    3510:	91 91       	ld	r25, Z+
    3512:	2f 01       	movw	r4, r30
    3514:	99 23       	and	r25, r25
    3516:	09 f0       	breq	.+2      	; 0x351a <vfprintf+0xfa>
    3518:	b8 cf       	rjmp	.-144    	; 0x348a <vfprintf+0x6a>
    351a:	89 2f       	mov	r24, r25
    351c:	85 54       	subi	r24, 0x45	; 69
    351e:	83 30       	cpi	r24, 0x03	; 3
    3520:	18 f0       	brcs	.+6      	; 0x3528 <vfprintf+0x108>
    3522:	80 52       	subi	r24, 0x20	; 32
    3524:	83 30       	cpi	r24, 0x03	; 3
    3526:	38 f4       	brcc	.+14     	; 0x3536 <vfprintf+0x116>
    3528:	44 e0       	ldi	r20, 0x04	; 4
    352a:	50 e0       	ldi	r21, 0x00	; 0
    352c:	a4 0e       	add	r10, r20
    352e:	b5 1e       	adc	r11, r21
    3530:	5f e3       	ldi	r21, 0x3F	; 63
    3532:	59 83       	std	Y+1, r21	; 0x01
    3534:	0f c0       	rjmp	.+30     	; 0x3554 <vfprintf+0x134>
    3536:	93 36       	cpi	r25, 0x63	; 99
    3538:	31 f0       	breq	.+12     	; 0x3546 <vfprintf+0x126>
    353a:	93 37       	cpi	r25, 0x73	; 115
    353c:	79 f0       	breq	.+30     	; 0x355c <vfprintf+0x13c>
    353e:	93 35       	cpi	r25, 0x53	; 83
    3540:	09 f0       	breq	.+2      	; 0x3544 <vfprintf+0x124>
    3542:	56 c0       	rjmp	.+172    	; 0x35f0 <vfprintf+0x1d0>
    3544:	20 c0       	rjmp	.+64     	; 0x3586 <vfprintf+0x166>
    3546:	f5 01       	movw	r30, r10
    3548:	80 81       	ld	r24, Z
    354a:	89 83       	std	Y+1, r24	; 0x01
    354c:	42 e0       	ldi	r20, 0x02	; 2
    354e:	50 e0       	ldi	r21, 0x00	; 0
    3550:	a4 0e       	add	r10, r20
    3552:	b5 1e       	adc	r11, r21
    3554:	61 01       	movw	r12, r2
    3556:	01 e0       	ldi	r16, 0x01	; 1
    3558:	10 e0       	ldi	r17, 0x00	; 0
    355a:	12 c0       	rjmp	.+36     	; 0x3580 <vfprintf+0x160>
    355c:	f5 01       	movw	r30, r10
    355e:	c0 80       	ld	r12, Z
    3560:	d1 80       	ldd	r13, Z+1	; 0x01
    3562:	f6 fc       	sbrc	r15, 6
    3564:	03 c0       	rjmp	.+6      	; 0x356c <vfprintf+0x14c>
    3566:	6f ef       	ldi	r22, 0xFF	; 255
    3568:	7f ef       	ldi	r23, 0xFF	; 255
    356a:	02 c0       	rjmp	.+4      	; 0x3570 <vfprintf+0x150>
    356c:	69 2d       	mov	r22, r9
    356e:	70 e0       	ldi	r23, 0x00	; 0
    3570:	42 e0       	ldi	r20, 0x02	; 2
    3572:	50 e0       	ldi	r21, 0x00	; 0
    3574:	a4 0e       	add	r10, r20
    3576:	b5 1e       	adc	r11, r21
    3578:	c6 01       	movw	r24, r12
    357a:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <strnlen>
    357e:	8c 01       	movw	r16, r24
    3580:	5f e7       	ldi	r21, 0x7F	; 127
    3582:	f5 22       	and	r15, r21
    3584:	14 c0       	rjmp	.+40     	; 0x35ae <vfprintf+0x18e>
    3586:	f5 01       	movw	r30, r10
    3588:	c0 80       	ld	r12, Z
    358a:	d1 80       	ldd	r13, Z+1	; 0x01
    358c:	f6 fc       	sbrc	r15, 6
    358e:	03 c0       	rjmp	.+6      	; 0x3596 <vfprintf+0x176>
    3590:	6f ef       	ldi	r22, 0xFF	; 255
    3592:	7f ef       	ldi	r23, 0xFF	; 255
    3594:	02 c0       	rjmp	.+4      	; 0x359a <vfprintf+0x17a>
    3596:	69 2d       	mov	r22, r9
    3598:	70 e0       	ldi	r23, 0x00	; 0
    359a:	42 e0       	ldi	r20, 0x02	; 2
    359c:	50 e0       	ldi	r21, 0x00	; 0
    359e:	a4 0e       	add	r10, r20
    35a0:	b5 1e       	adc	r11, r21
    35a2:	c6 01       	movw	r24, r12
    35a4:	0e 94 ed 1b 	call	0x37da	; 0x37da <strnlen_P>
    35a8:	8c 01       	movw	r16, r24
    35aa:	50 e8       	ldi	r21, 0x80	; 128
    35ac:	f5 2a       	or	r15, r21
    35ae:	f3 fe       	sbrs	r15, 3
    35b0:	07 c0       	rjmp	.+14     	; 0x35c0 <vfprintf+0x1a0>
    35b2:	1a c0       	rjmp	.+52     	; 0x35e8 <vfprintf+0x1c8>
    35b4:	80 e2       	ldi	r24, 0x20	; 32
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	b3 01       	movw	r22, r6
    35ba:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    35be:	ea 94       	dec	r14
    35c0:	8e 2d       	mov	r24, r14
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	08 17       	cp	r16, r24
    35c6:	19 07       	cpc	r17, r25
    35c8:	a8 f3       	brcs	.-22     	; 0x35b4 <vfprintf+0x194>
    35ca:	0e c0       	rjmp	.+28     	; 0x35e8 <vfprintf+0x1c8>
    35cc:	f6 01       	movw	r30, r12
    35ce:	f7 fc       	sbrc	r15, 7
    35d0:	85 91       	lpm	r24, Z+
    35d2:	f7 fe       	sbrs	r15, 7
    35d4:	81 91       	ld	r24, Z+
    35d6:	6f 01       	movw	r12, r30
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	b3 01       	movw	r22, r6
    35dc:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    35e0:	e1 10       	cpse	r14, r1
    35e2:	ea 94       	dec	r14
    35e4:	01 50       	subi	r16, 0x01	; 1
    35e6:	10 40       	sbci	r17, 0x00	; 0
    35e8:	01 15       	cp	r16, r1
    35ea:	11 05       	cpc	r17, r1
    35ec:	79 f7       	brne	.-34     	; 0x35cc <vfprintf+0x1ac>
    35ee:	ea c0       	rjmp	.+468    	; 0x37c4 <vfprintf+0x3a4>
    35f0:	94 36       	cpi	r25, 0x64	; 100
    35f2:	11 f0       	breq	.+4      	; 0x35f8 <vfprintf+0x1d8>
    35f4:	99 36       	cpi	r25, 0x69	; 105
    35f6:	69 f5       	brne	.+90     	; 0x3652 <vfprintf+0x232>
    35f8:	f7 fe       	sbrs	r15, 7
    35fa:	08 c0       	rjmp	.+16     	; 0x360c <vfprintf+0x1ec>
    35fc:	f5 01       	movw	r30, r10
    35fe:	20 81       	ld	r18, Z
    3600:	31 81       	ldd	r19, Z+1	; 0x01
    3602:	42 81       	ldd	r20, Z+2	; 0x02
    3604:	53 81       	ldd	r21, Z+3	; 0x03
    3606:	84 e0       	ldi	r24, 0x04	; 4
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	0a c0       	rjmp	.+20     	; 0x3620 <vfprintf+0x200>
    360c:	f5 01       	movw	r30, r10
    360e:	80 81       	ld	r24, Z
    3610:	91 81       	ldd	r25, Z+1	; 0x01
    3612:	9c 01       	movw	r18, r24
    3614:	44 27       	eor	r20, r20
    3616:	37 fd       	sbrc	r19, 7
    3618:	40 95       	com	r20
    361a:	54 2f       	mov	r21, r20
    361c:	82 e0       	ldi	r24, 0x02	; 2
    361e:	90 e0       	ldi	r25, 0x00	; 0
    3620:	a8 0e       	add	r10, r24
    3622:	b9 1e       	adc	r11, r25
    3624:	9f e6       	ldi	r25, 0x6F	; 111
    3626:	f9 22       	and	r15, r25
    3628:	57 ff       	sbrs	r21, 7
    362a:	09 c0       	rjmp	.+18     	; 0x363e <vfprintf+0x21e>
    362c:	50 95       	com	r21
    362e:	40 95       	com	r20
    3630:	30 95       	com	r19
    3632:	21 95       	neg	r18
    3634:	3f 4f       	sbci	r19, 0xFF	; 255
    3636:	4f 4f       	sbci	r20, 0xFF	; 255
    3638:	5f 4f       	sbci	r21, 0xFF	; 255
    363a:	e0 e8       	ldi	r30, 0x80	; 128
    363c:	fe 2a       	or	r15, r30
    363e:	ca 01       	movw	r24, r20
    3640:	b9 01       	movw	r22, r18
    3642:	a1 01       	movw	r20, r2
    3644:	2a e0       	ldi	r18, 0x0A	; 10
    3646:	30 e0       	ldi	r19, 0x00	; 0
    3648:	0e 94 2f 1c 	call	0x385e	; 0x385e <__ultoa_invert>
    364c:	d8 2e       	mov	r13, r24
    364e:	d2 18       	sub	r13, r2
    3650:	40 c0       	rjmp	.+128    	; 0x36d2 <vfprintf+0x2b2>
    3652:	95 37       	cpi	r25, 0x75	; 117
    3654:	29 f4       	brne	.+10     	; 0x3660 <vfprintf+0x240>
    3656:	1f 2d       	mov	r17, r15
    3658:	1f 7e       	andi	r17, 0xEF	; 239
    365a:	2a e0       	ldi	r18, 0x0A	; 10
    365c:	30 e0       	ldi	r19, 0x00	; 0
    365e:	1d c0       	rjmp	.+58     	; 0x369a <vfprintf+0x27a>
    3660:	1f 2d       	mov	r17, r15
    3662:	19 7f       	andi	r17, 0xF9	; 249
    3664:	9f 36       	cpi	r25, 0x6F	; 111
    3666:	61 f0       	breq	.+24     	; 0x3680 <vfprintf+0x260>
    3668:	90 37       	cpi	r25, 0x70	; 112
    366a:	20 f4       	brcc	.+8      	; 0x3674 <vfprintf+0x254>
    366c:	98 35       	cpi	r25, 0x58	; 88
    366e:	09 f0       	breq	.+2      	; 0x3672 <vfprintf+0x252>
    3670:	ac c0       	rjmp	.+344    	; 0x37ca <vfprintf+0x3aa>
    3672:	0f c0       	rjmp	.+30     	; 0x3692 <vfprintf+0x272>
    3674:	90 37       	cpi	r25, 0x70	; 112
    3676:	39 f0       	breq	.+14     	; 0x3686 <vfprintf+0x266>
    3678:	98 37       	cpi	r25, 0x78	; 120
    367a:	09 f0       	breq	.+2      	; 0x367e <vfprintf+0x25e>
    367c:	a6 c0       	rjmp	.+332    	; 0x37ca <vfprintf+0x3aa>
    367e:	04 c0       	rjmp	.+8      	; 0x3688 <vfprintf+0x268>
    3680:	28 e0       	ldi	r18, 0x08	; 8
    3682:	30 e0       	ldi	r19, 0x00	; 0
    3684:	0a c0       	rjmp	.+20     	; 0x369a <vfprintf+0x27a>
    3686:	10 61       	ori	r17, 0x10	; 16
    3688:	14 fd       	sbrc	r17, 4
    368a:	14 60       	ori	r17, 0x04	; 4
    368c:	20 e1       	ldi	r18, 0x10	; 16
    368e:	30 e0       	ldi	r19, 0x00	; 0
    3690:	04 c0       	rjmp	.+8      	; 0x369a <vfprintf+0x27a>
    3692:	14 fd       	sbrc	r17, 4
    3694:	16 60       	ori	r17, 0x06	; 6
    3696:	20 e1       	ldi	r18, 0x10	; 16
    3698:	32 e0       	ldi	r19, 0x02	; 2
    369a:	17 ff       	sbrs	r17, 7
    369c:	08 c0       	rjmp	.+16     	; 0x36ae <vfprintf+0x28e>
    369e:	f5 01       	movw	r30, r10
    36a0:	60 81       	ld	r22, Z
    36a2:	71 81       	ldd	r23, Z+1	; 0x01
    36a4:	82 81       	ldd	r24, Z+2	; 0x02
    36a6:	93 81       	ldd	r25, Z+3	; 0x03
    36a8:	44 e0       	ldi	r20, 0x04	; 4
    36aa:	50 e0       	ldi	r21, 0x00	; 0
    36ac:	08 c0       	rjmp	.+16     	; 0x36be <vfprintf+0x29e>
    36ae:	f5 01       	movw	r30, r10
    36b0:	80 81       	ld	r24, Z
    36b2:	91 81       	ldd	r25, Z+1	; 0x01
    36b4:	bc 01       	movw	r22, r24
    36b6:	80 e0       	ldi	r24, 0x00	; 0
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	42 e0       	ldi	r20, 0x02	; 2
    36bc:	50 e0       	ldi	r21, 0x00	; 0
    36be:	a4 0e       	add	r10, r20
    36c0:	b5 1e       	adc	r11, r21
    36c2:	a1 01       	movw	r20, r2
    36c4:	0e 94 2f 1c 	call	0x385e	; 0x385e <__ultoa_invert>
    36c8:	d8 2e       	mov	r13, r24
    36ca:	d2 18       	sub	r13, r2
    36cc:	8f e7       	ldi	r24, 0x7F	; 127
    36ce:	f8 2e       	mov	r15, r24
    36d0:	f1 22       	and	r15, r17
    36d2:	f6 fe       	sbrs	r15, 6
    36d4:	0b c0       	rjmp	.+22     	; 0x36ec <vfprintf+0x2cc>
    36d6:	5e ef       	ldi	r21, 0xFE	; 254
    36d8:	f5 22       	and	r15, r21
    36da:	d9 14       	cp	r13, r9
    36dc:	38 f4       	brcc	.+14     	; 0x36ec <vfprintf+0x2cc>
    36de:	f4 fe       	sbrs	r15, 4
    36e0:	07 c0       	rjmp	.+14     	; 0x36f0 <vfprintf+0x2d0>
    36e2:	f2 fc       	sbrc	r15, 2
    36e4:	05 c0       	rjmp	.+10     	; 0x36f0 <vfprintf+0x2d0>
    36e6:	8f ee       	ldi	r24, 0xEF	; 239
    36e8:	f8 22       	and	r15, r24
    36ea:	02 c0       	rjmp	.+4      	; 0x36f0 <vfprintf+0x2d0>
    36ec:	1d 2d       	mov	r17, r13
    36ee:	01 c0       	rjmp	.+2      	; 0x36f2 <vfprintf+0x2d2>
    36f0:	19 2d       	mov	r17, r9
    36f2:	f4 fe       	sbrs	r15, 4
    36f4:	0d c0       	rjmp	.+26     	; 0x3710 <vfprintf+0x2f0>
    36f6:	fe 01       	movw	r30, r28
    36f8:	ed 0d       	add	r30, r13
    36fa:	f1 1d       	adc	r31, r1
    36fc:	80 81       	ld	r24, Z
    36fe:	80 33       	cpi	r24, 0x30	; 48
    3700:	19 f4       	brne	.+6      	; 0x3708 <vfprintf+0x2e8>
    3702:	99 ee       	ldi	r25, 0xE9	; 233
    3704:	f9 22       	and	r15, r25
    3706:	08 c0       	rjmp	.+16     	; 0x3718 <vfprintf+0x2f8>
    3708:	1f 5f       	subi	r17, 0xFF	; 255
    370a:	f2 fe       	sbrs	r15, 2
    370c:	05 c0       	rjmp	.+10     	; 0x3718 <vfprintf+0x2f8>
    370e:	03 c0       	rjmp	.+6      	; 0x3716 <vfprintf+0x2f6>
    3710:	8f 2d       	mov	r24, r15
    3712:	86 78       	andi	r24, 0x86	; 134
    3714:	09 f0       	breq	.+2      	; 0x3718 <vfprintf+0x2f8>
    3716:	1f 5f       	subi	r17, 0xFF	; 255
    3718:	0f 2d       	mov	r16, r15
    371a:	f3 fc       	sbrc	r15, 3
    371c:	14 c0       	rjmp	.+40     	; 0x3746 <vfprintf+0x326>
    371e:	f0 fe       	sbrs	r15, 0
    3720:	0f c0       	rjmp	.+30     	; 0x3740 <vfprintf+0x320>
    3722:	1e 15       	cp	r17, r14
    3724:	10 f0       	brcs	.+4      	; 0x372a <vfprintf+0x30a>
    3726:	9d 2c       	mov	r9, r13
    3728:	0b c0       	rjmp	.+22     	; 0x3740 <vfprintf+0x320>
    372a:	9d 2c       	mov	r9, r13
    372c:	9e 0c       	add	r9, r14
    372e:	91 1a       	sub	r9, r17
    3730:	1e 2d       	mov	r17, r14
    3732:	06 c0       	rjmp	.+12     	; 0x3740 <vfprintf+0x320>
    3734:	80 e2       	ldi	r24, 0x20	; 32
    3736:	90 e0       	ldi	r25, 0x00	; 0
    3738:	b3 01       	movw	r22, r6
    373a:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    373e:	1f 5f       	subi	r17, 0xFF	; 255
    3740:	1e 15       	cp	r17, r14
    3742:	c0 f3       	brcs	.-16     	; 0x3734 <vfprintf+0x314>
    3744:	04 c0       	rjmp	.+8      	; 0x374e <vfprintf+0x32e>
    3746:	1e 15       	cp	r17, r14
    3748:	10 f4       	brcc	.+4      	; 0x374e <vfprintf+0x32e>
    374a:	e1 1a       	sub	r14, r17
    374c:	01 c0       	rjmp	.+2      	; 0x3750 <vfprintf+0x330>
    374e:	ee 24       	eor	r14, r14
    3750:	04 ff       	sbrs	r16, 4
    3752:	0f c0       	rjmp	.+30     	; 0x3772 <vfprintf+0x352>
    3754:	80 e3       	ldi	r24, 0x30	; 48
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	b3 01       	movw	r22, r6
    375a:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    375e:	02 ff       	sbrs	r16, 2
    3760:	1d c0       	rjmp	.+58     	; 0x379c <vfprintf+0x37c>
    3762:	01 fd       	sbrc	r16, 1
    3764:	03 c0       	rjmp	.+6      	; 0x376c <vfprintf+0x34c>
    3766:	88 e7       	ldi	r24, 0x78	; 120
    3768:	90 e0       	ldi	r25, 0x00	; 0
    376a:	0e c0       	rjmp	.+28     	; 0x3788 <vfprintf+0x368>
    376c:	88 e5       	ldi	r24, 0x58	; 88
    376e:	90 e0       	ldi	r25, 0x00	; 0
    3770:	0b c0       	rjmp	.+22     	; 0x3788 <vfprintf+0x368>
    3772:	80 2f       	mov	r24, r16
    3774:	86 78       	andi	r24, 0x86	; 134
    3776:	91 f0       	breq	.+36     	; 0x379c <vfprintf+0x37c>
    3778:	01 ff       	sbrs	r16, 1
    377a:	02 c0       	rjmp	.+4      	; 0x3780 <vfprintf+0x360>
    377c:	8b e2       	ldi	r24, 0x2B	; 43
    377e:	01 c0       	rjmp	.+2      	; 0x3782 <vfprintf+0x362>
    3780:	80 e2       	ldi	r24, 0x20	; 32
    3782:	f7 fc       	sbrc	r15, 7
    3784:	8d e2       	ldi	r24, 0x2D	; 45
    3786:	90 e0       	ldi	r25, 0x00	; 0
    3788:	b3 01       	movw	r22, r6
    378a:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    378e:	06 c0       	rjmp	.+12     	; 0x379c <vfprintf+0x37c>
    3790:	80 e3       	ldi	r24, 0x30	; 48
    3792:	90 e0       	ldi	r25, 0x00	; 0
    3794:	b3 01       	movw	r22, r6
    3796:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    379a:	9a 94       	dec	r9
    379c:	d9 14       	cp	r13, r9
    379e:	c0 f3       	brcs	.-16     	; 0x3790 <vfprintf+0x370>
    37a0:	da 94       	dec	r13
    37a2:	f1 01       	movw	r30, r2
    37a4:	ed 0d       	add	r30, r13
    37a6:	f1 1d       	adc	r31, r1
    37a8:	80 81       	ld	r24, Z
    37aa:	90 e0       	ldi	r25, 0x00	; 0
    37ac:	b3 01       	movw	r22, r6
    37ae:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    37b2:	dd 20       	and	r13, r13
    37b4:	a9 f7       	brne	.-22     	; 0x37a0 <vfprintf+0x380>
    37b6:	06 c0       	rjmp	.+12     	; 0x37c4 <vfprintf+0x3a4>
    37b8:	80 e2       	ldi	r24, 0x20	; 32
    37ba:	90 e0       	ldi	r25, 0x00	; 0
    37bc:	b3 01       	movw	r22, r6
    37be:	0e 94 03 1c 	call	0x3806	; 0x3806 <fputc>
    37c2:	ea 94       	dec	r14
    37c4:	ee 20       	and	r14, r14
    37c6:	c1 f7       	brne	.-16     	; 0x37b8 <vfprintf+0x398>
    37c8:	43 ce       	rjmp	.-890    	; 0x3450 <vfprintf+0x30>
    37ca:	f3 01       	movw	r30, r6
    37cc:	66 81       	ldd	r22, Z+6	; 0x06
    37ce:	77 81       	ldd	r23, Z+7	; 0x07
    37d0:	cb 01       	movw	r24, r22
    37d2:	2b 96       	adiw	r28, 0x0b	; 11
    37d4:	e2 e1       	ldi	r30, 0x12	; 18
    37d6:	0c 94 d1 19 	jmp	0x33a2	; 0x33a2 <__epilogue_restores__>

000037da <strnlen_P>:
    37da:	fc 01       	movw	r30, r24
    37dc:	05 90       	lpm	r0, Z+
    37de:	61 50       	subi	r22, 0x01	; 1
    37e0:	70 40       	sbci	r23, 0x00	; 0
    37e2:	01 10       	cpse	r0, r1
    37e4:	d8 f7       	brcc	.-10     	; 0x37dc <strnlen_P+0x2>
    37e6:	80 95       	com	r24
    37e8:	90 95       	com	r25
    37ea:	8e 0f       	add	r24, r30
    37ec:	9f 1f       	adc	r25, r31
    37ee:	08 95       	ret

000037f0 <strnlen>:
    37f0:	fc 01       	movw	r30, r24
    37f2:	61 50       	subi	r22, 0x01	; 1
    37f4:	70 40       	sbci	r23, 0x00	; 0
    37f6:	01 90       	ld	r0, Z+
    37f8:	01 10       	cpse	r0, r1
    37fa:	d8 f7       	brcc	.-10     	; 0x37f2 <strnlen+0x2>
    37fc:	80 95       	com	r24
    37fe:	90 95       	com	r25
    3800:	8e 0f       	add	r24, r30
    3802:	9f 1f       	adc	r25, r31
    3804:	08 95       	ret

00003806 <fputc>:
    3806:	0f 93       	push	r16
    3808:	1f 93       	push	r17
    380a:	cf 93       	push	r28
    380c:	df 93       	push	r29
    380e:	8c 01       	movw	r16, r24
    3810:	eb 01       	movw	r28, r22
    3812:	8b 81       	ldd	r24, Y+3	; 0x03
    3814:	81 ff       	sbrs	r24, 1
    3816:	1b c0       	rjmp	.+54     	; 0x384e <fputc+0x48>
    3818:	82 ff       	sbrs	r24, 2
    381a:	0d c0       	rjmp	.+26     	; 0x3836 <fputc+0x30>
    381c:	2e 81       	ldd	r18, Y+6	; 0x06
    381e:	3f 81       	ldd	r19, Y+7	; 0x07
    3820:	8c 81       	ldd	r24, Y+4	; 0x04
    3822:	9d 81       	ldd	r25, Y+5	; 0x05
    3824:	28 17       	cp	r18, r24
    3826:	39 07       	cpc	r19, r25
    3828:	64 f4       	brge	.+24     	; 0x3842 <fputc+0x3c>
    382a:	e8 81       	ld	r30, Y
    382c:	f9 81       	ldd	r31, Y+1	; 0x01
    382e:	01 93       	st	Z+, r16
    3830:	f9 83       	std	Y+1, r31	; 0x01
    3832:	e8 83       	st	Y, r30
    3834:	06 c0       	rjmp	.+12     	; 0x3842 <fputc+0x3c>
    3836:	e8 85       	ldd	r30, Y+8	; 0x08
    3838:	f9 85       	ldd	r31, Y+9	; 0x09
    383a:	80 2f       	mov	r24, r16
    383c:	09 95       	icall
    383e:	89 2b       	or	r24, r25
    3840:	31 f4       	brne	.+12     	; 0x384e <fputc+0x48>
    3842:	8e 81       	ldd	r24, Y+6	; 0x06
    3844:	9f 81       	ldd	r25, Y+7	; 0x07
    3846:	01 96       	adiw	r24, 0x01	; 1
    3848:	9f 83       	std	Y+7, r25	; 0x07
    384a:	8e 83       	std	Y+6, r24	; 0x06
    384c:	02 c0       	rjmp	.+4      	; 0x3852 <fputc+0x4c>
    384e:	0f ef       	ldi	r16, 0xFF	; 255
    3850:	1f ef       	ldi	r17, 0xFF	; 255
    3852:	c8 01       	movw	r24, r16
    3854:	df 91       	pop	r29
    3856:	cf 91       	pop	r28
    3858:	1f 91       	pop	r17
    385a:	0f 91       	pop	r16
    385c:	08 95       	ret

0000385e <__ultoa_invert>:
    385e:	fa 01       	movw	r30, r20
    3860:	aa 27       	eor	r26, r26
    3862:	28 30       	cpi	r18, 0x08	; 8
    3864:	51 f1       	breq	.+84     	; 0x38ba <__ultoa_invert+0x5c>
    3866:	20 31       	cpi	r18, 0x10	; 16
    3868:	81 f1       	breq	.+96     	; 0x38ca <__ultoa_invert+0x6c>
    386a:	e8 94       	clt
    386c:	6f 93       	push	r22
    386e:	6e 7f       	andi	r22, 0xFE	; 254
    3870:	6e 5f       	subi	r22, 0xFE	; 254
    3872:	7f 4f       	sbci	r23, 0xFF	; 255
    3874:	8f 4f       	sbci	r24, 0xFF	; 255
    3876:	9f 4f       	sbci	r25, 0xFF	; 255
    3878:	af 4f       	sbci	r26, 0xFF	; 255
    387a:	b1 e0       	ldi	r27, 0x01	; 1
    387c:	3e d0       	rcall	.+124    	; 0x38fa <__ultoa_invert+0x9c>
    387e:	b4 e0       	ldi	r27, 0x04	; 4
    3880:	3c d0       	rcall	.+120    	; 0x38fa <__ultoa_invert+0x9c>
    3882:	67 0f       	add	r22, r23
    3884:	78 1f       	adc	r23, r24
    3886:	89 1f       	adc	r24, r25
    3888:	9a 1f       	adc	r25, r26
    388a:	a1 1d       	adc	r26, r1
    388c:	68 0f       	add	r22, r24
    388e:	79 1f       	adc	r23, r25
    3890:	8a 1f       	adc	r24, r26
    3892:	91 1d       	adc	r25, r1
    3894:	a1 1d       	adc	r26, r1
    3896:	6a 0f       	add	r22, r26
    3898:	71 1d       	adc	r23, r1
    389a:	81 1d       	adc	r24, r1
    389c:	91 1d       	adc	r25, r1
    389e:	a1 1d       	adc	r26, r1
    38a0:	20 d0       	rcall	.+64     	; 0x38e2 <__ultoa_invert+0x84>
    38a2:	09 f4       	brne	.+2      	; 0x38a6 <__ultoa_invert+0x48>
    38a4:	68 94       	set
    38a6:	3f 91       	pop	r19
    38a8:	2a e0       	ldi	r18, 0x0A	; 10
    38aa:	26 9f       	mul	r18, r22
    38ac:	11 24       	eor	r1, r1
    38ae:	30 19       	sub	r19, r0
    38b0:	30 5d       	subi	r19, 0xD0	; 208
    38b2:	31 93       	st	Z+, r19
    38b4:	de f6       	brtc	.-74     	; 0x386c <__ultoa_invert+0xe>
    38b6:	cf 01       	movw	r24, r30
    38b8:	08 95       	ret
    38ba:	46 2f       	mov	r20, r22
    38bc:	47 70       	andi	r20, 0x07	; 7
    38be:	40 5d       	subi	r20, 0xD0	; 208
    38c0:	41 93       	st	Z+, r20
    38c2:	b3 e0       	ldi	r27, 0x03	; 3
    38c4:	0f d0       	rcall	.+30     	; 0x38e4 <__ultoa_invert+0x86>
    38c6:	c9 f7       	brne	.-14     	; 0x38ba <__ultoa_invert+0x5c>
    38c8:	f6 cf       	rjmp	.-20     	; 0x38b6 <__ultoa_invert+0x58>
    38ca:	46 2f       	mov	r20, r22
    38cc:	4f 70       	andi	r20, 0x0F	; 15
    38ce:	40 5d       	subi	r20, 0xD0	; 208
    38d0:	4a 33       	cpi	r20, 0x3A	; 58
    38d2:	18 f0       	brcs	.+6      	; 0x38da <__ultoa_invert+0x7c>
    38d4:	49 5d       	subi	r20, 0xD9	; 217
    38d6:	31 fd       	sbrc	r19, 1
    38d8:	40 52       	subi	r20, 0x20	; 32
    38da:	41 93       	st	Z+, r20
    38dc:	02 d0       	rcall	.+4      	; 0x38e2 <__ultoa_invert+0x84>
    38de:	a9 f7       	brne	.-22     	; 0x38ca <__ultoa_invert+0x6c>
    38e0:	ea cf       	rjmp	.-44     	; 0x38b6 <__ultoa_invert+0x58>
    38e2:	b4 e0       	ldi	r27, 0x04	; 4
    38e4:	a6 95       	lsr	r26
    38e6:	97 95       	ror	r25
    38e8:	87 95       	ror	r24
    38ea:	77 95       	ror	r23
    38ec:	67 95       	ror	r22
    38ee:	ba 95       	dec	r27
    38f0:	c9 f7       	brne	.-14     	; 0x38e4 <__ultoa_invert+0x86>
    38f2:	00 97       	sbiw	r24, 0x00	; 0
    38f4:	61 05       	cpc	r22, r1
    38f6:	71 05       	cpc	r23, r1
    38f8:	08 95       	ret
    38fa:	9b 01       	movw	r18, r22
    38fc:	ac 01       	movw	r20, r24
    38fe:	0a 2e       	mov	r0, r26
    3900:	06 94       	lsr	r0
    3902:	57 95       	ror	r21
    3904:	47 95       	ror	r20
    3906:	37 95       	ror	r19
    3908:	27 95       	ror	r18
    390a:	ba 95       	dec	r27
    390c:	c9 f7       	brne	.-14     	; 0x3900 <__ultoa_invert+0xa2>
    390e:	62 0f       	add	r22, r18
    3910:	73 1f       	adc	r23, r19
    3912:	84 1f       	adc	r24, r20
    3914:	95 1f       	adc	r25, r21
    3916:	a0 1d       	adc	r26, r0
    3918:	08 95       	ret

0000391a <_exit>:
    391a:	f8 94       	cli

0000391c <__stop_program>:
    391c:	ff cf       	rjmp	.-2      	; 0x391c <__stop_program>
